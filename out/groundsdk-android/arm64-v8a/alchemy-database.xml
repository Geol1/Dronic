<?xml version='1.0' encoding='UTF-8'?>
 <alchemy>
 <target>
     <var name='ALCHEMY_WORKSPACE_DIR'>
         <value>/home/marlin/groundsdk</value>
     </var>
      <var name='PRODUCT'>
         <value>groundsdk</value>
     </var>
       <var name='PRODUCT_VARIANT'>
         <value>android</value>
     </var>
       <var name='OS'>
         <value>linux</value>
     </var>
       <var name='OS_FLAVOUR'>
         <value>android</value>
     </var>
       <var name='ARCH'>
         <value>aarch64</value>
     </var>
       <var name='CPU'>
         <value></value>
     </var>
       <var name='CPU_ARMV7A_NEON'>
         <value>0</value>
     </var>
       <var name='LIBC'>
         <value>bionic</value>
     </var>
       <var name='DEFAULT_ARM_MODE'>
         <value></value>
     </var>
       <var name='USE_CXX_EXCEPTIONS'>
         <value>1</value>
     </var>
       <var name='CPU_HAS_SSE'>
         <value>0</value>
     </var>
       <var name='CPU_HAS_SSE2'>
         <value>0</value>
     </var>
       <var name='CPU_HAS_SSSE3'>
         <value>0</value>
     </var>
       <var name='CPU_HAS_NEON'>
         <value>0</value>
     </var>
       <var name='FLOAT_ABI'>
         <value></value>
     </var>
       <var name='OUT_PREFIX'>
         <value>Alchemy-out/</value>
     </var>
       <var name='OUT'>
         <value>/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a</value>
     </var>
       <var name='OUT_BUILD'>
         <value>/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/build</value>
     </var>
       <var name='OUT_STAGING'>
         <value>/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging</value>
     </var>
       <var name='OUT_FINAL'>
         <value>/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/final</value>
     </var>
       <var name='OUT_DOC'>
         <value>/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/doc</value>
     </var>
       <var name='OUT_GCOV'>
         <value>/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/gcov</value>
     </var>
       <var name='CONFIG_PREFIX'>
         <value>Alchemy-config/</value>
     </var>
       <var name='CONFIG_DIR'>
         <value>/home/marlin/groundsdk/products/groundsdk/android/config</value>
     </var>
       <var name='GLOBAL_CONFIG_FILE'>
         <value>/home/marlin/groundsdk/products/groundsdk/android/config/global.config</value>
     </var>
       <var name='SKEL_DIRS'>
         <value></value>
     </var>
       <var name='SCAN_PRUNE_DIRS'>
         <value>/home/marlin/groundsdk /home/marlin/groundsdk/Alchemy-config/ /home/marlin/groundsdk/Alchemy-out/</value>
     </var>
       <var name='SCAN_ADD_DIRS'>
         <value>/home/marlin/groundsdk/packages</value>
     </var>
       <var name='SDK_DIRS'>
         <value></value>
     </var>
       <var name='FORCE_STATIC'>
         <value>1</value>
     </var>
       <var name='PBUILD_FORCE_STATIC'>
         <value>1</value>
     </var>
       <var name='PBUILD_HOOK_USE_DESCRIBE'>
         <value>0</value>
     </var>
       <var name='NOSTRIP_FINAL'>
         <value>0</value>
     </var>
       <var name='FORCE_EXTERNAL_CHECKS'>
         <value>0</value>
     </var>
       <var name='BUILD_PROPERTIES'>
         <value>ro.build.alchemy.product=groundsdk ro.build.alchemy.variant=android ro.build.hostname=marlin-ThinkPad-X280</value>
     </var>
       <var name='ADD_DEPENDS_SECTION'>
         <value>0</value>
     </var>
       <var name='DEPENDS_SECTION_NAME'>
         <value>.alchemy.depends</value>
     </var>
       <var name='CHROOT'>
         <value>0</value>
     </var>
       <var name='IMAGE_FORMAT'>
         <value>tar.gz</value>
     </var>
       <var name='IMAGE_OPTIONS'>
         <value></value>
     </var>
       <var name='IMAGE_PATH_MAP_FILE'>
         <value></value>
     </var>
       <var name='INCLUDE_GCONV'>
         <value>0</value>
     </var>
       <var name='INCLUDE_TZDATA'>
         <value>0</value>
     </var>
       <var name='INCLUDE_GDBSERVER'>
         <value>1</value>
     </var>
       <var name='LINUX_DIR'>
         <value></value>
     </var>
       <var name='LINUX_DEVICE_TREE_NAMES'>
         <value></value>
     </var>
       <var name='LINUX_GENERATE_UIMAGE'>
         <value>0</value>
     </var>
       <var name='LINUX_MAKE_BUILD_ARGS'>
         <value></value>
     </var>
       <var name='LINUX_LINK_CPIO_IMAGE'>
         <value>0</value>
     </var>
       <var name='PERMISSIONS_FILES'>
         <value></value>
     </var>
       <var name='SCAN_FOLLOW_LINKS'>
         <value>0</value>
     </var>
       <var name='STRIP_FILTER'>
         <value></value>
     </var>
       <var name='LDCONFIG_DIRS'>
         <value></value>
     </var>
       <var name='DEPLOY_ROOT'>
         <value></value>
     </var>
       <var name='USE_CLANG'>
         <value>1</value>
     </var>
       <var name='SDK_PUBLIC_MODULES'>
         <value></value>
     </var>
       <var name='CROSS'>
         <value></value>
     </var>
       <var name='CC'>
         <value>/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/toolchain/bin/aarch64-linux-android-clang</value>
     </var>
       <var name='CXX'>
         <value>/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/toolchain/bin/aarch64-linux-android-clang++</value>
     </var>
       <var name='AS'>
         <value>/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/toolchain/bin/aarch64-linux-android-as</value>
     </var>
       <var name='FC'>
         <value>gfortran</value>
     </var>
       <var name='AR'>
         <value>/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/toolchain/bin/aarch64-linux-android-ar</value>
     </var>
       <var name='LD'>
         <value>/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/toolchain/bin/aarch64-linux-android-ld</value>
     </var>
       <var name='CPP'>
         <value>/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/toolchain/bin/aarch64-linux-android-cpp</value>
     </var>
       <var name='NM'>
         <value>/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/toolchain/bin/aarch64-linux-android-nm</value>
     </var>
       <var name='STRIP'>
         <value>/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/toolchain/bin/aarch64-linux-android-strip</value>
     </var>
       <var name='OBJCOPY'>
         <value>/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/toolchain/bin/aarch64-linux-android-objcopy</value>
     </var>
       <var name='OBJDUMP'>
         <value>/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/toolchain/bin/aarch64-linux-android-objdump</value>
     </var>
       <var name='RANLIB'>
         <value>/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/toolchain/bin/aarch64-linux-android-ranlib</value>
     </var>
       <var name='WINDRES'>
         <value>windres</value>
     </var>
       <var name='LLVM'>
         <value>llvm-</value>
     </var>
       <var name='GLOBAL_C_INCLUDES'>
         <value>/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/include/aarch64-none-linux-android /home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/include</value>
     </var>
       <var name='GLOBAL_ASFLAGS'>
         <value></value>
     </var>
       <var name='GLOBAL_CXXFLAGS'>
         <value></value>
     </var>
       <var name='GLOBAL_CXXFLAGS_gcc'>
         <value></value>
     </var>
       <var name='GLOBAL_CXXFLAGS_clang'>
         <value></value>
     </var>
       <var name='GLOBAL_CFLAGS'>
         <value>-std=gnu99 -pipe -O2 -g -ffunction-sections -DALCHEMY_BUILD -fPIC -DANDROID -DANDROID_NDK -Qunused-arguments</value>
     </var>
       <var name='GLOBAL_CFLAGS_gcc'>
         <value></value>
     </var>
       <var name='GLOBAL_CFLAGS_clang'>
         <value>-Qunused-arguments</value>
     </var>
       <var name='GLOBAL_CFLAGS_arm'>
         <value></value>
     </var>
       <var name='GLOBAL_CFLAGS_thumb'>
         <value></value>
     </var>
       <var name='GLOBAL_LDFLAGS'>
         <value>-O2 -lc++_shared -Wl,-O1 -L/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/lib/aarch64-none-linux-android -L/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/lib -L/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/aarch64-none-linux-android -L/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib -Wl,-rpath-link=/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/lib/aarch64-none-linux-android -Wl,-rpath-link=/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/lib -Wl,-rpath-link=/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/aarch64-none-linux-android -Wl,-rpath-link=/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib</value>
     </var>
       <var name='GLOBAL_LDFLAGS_gcc'>
         <value></value>
     </var>
       <var name='GLOBAL_LDFLAGS_clang'>
         <value></value>
     </var>
       <var name='GLOBAL_LDLIBS'>
         <value></value>
     </var>
       <var name='GLOBAL_ARFLAGS'>
         <value>rcs</value>
     </var>
       <var name='GLOBAL_PCHFLAGS'>
         <value>-x c++-header</value>
     </var>
       <var name='GLOBAL_VALAFLAGS'>
         <value>--vapidir=/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/share/vala-0.20/vapi --vapidir=/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/share/vala/vapi --target-glib=2.36</value>
     </var>
       <var name='GLOBAL_OBJCFLAGS'>
         <value>-fobjc-arc</value>
     </var>
       <var name='GLOBAL_OBJCXXFLAGS'>
         <value>-fobjc-arc -ObjC++</value>
     </var>
       <var name='GLOBAL_FFLAGS'>
         <value></value>
     </var>
       <var name='NVCC'>
         <value></value>
     </var>
       <var name='GLOBAL_NVCFLAGS'>
         <value></value>
     </var>
       <var name='STATIC_LIB_SUFFIX'>
         <value>.a</value>
     </var>
       <var name='SHARED_LIB_SUFFIX'>
         <value>.so</value>
     </var>
       <var name='EXE_SUFFIX'>
         <value></value>
     </var>
       <var name='PRODUCT_FULL_NAME'>
         <value>groundsdk-android</value>
     </var>
       <var name='CC_PATH'>
         <value>/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/toolchain/bin/aarch64-linux-android-clang</value>
     </var>
       <var name='CC_VERSION'>
         <value></value>
     </var>
       <var name='CC_FLAVOUR'>
         <value>clang</value>
     </var>
       <var name='COMPILER_PATH'>
         <value>/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/toolchain</value>
     </var>
       <var name='TOOLCHAIN_TRIPLET'>
         <value>aarch64-none-linux-android</value>
     </var>
       <var name='TOOLCHAIN_SYSROOT'>
         <value></value>
     </var>
       <var name='ROOT_DESTDIR'>
         <value>usr</value>
     </var>
       <var name='DEFAULT_BIN_DESTDIR'>
         <value>usr/bin</value>
     </var>
       <var name='DEFAULT_LIB_DESTDIR'>
         <value>usr/lib</value>
     </var>
       <var name='DEFAULT_ETC_DESTDIR'>
         <value>etc</value>
     </var>
       <var name='AUTOTOOLS_CPPFLAGS'>
         <value>-isystem/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/include/aarch64-none-linux-android -isystem/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/include</value>
     </var>
       <var name='AUTOTOOLS_CFLAGS'>
         <value>-isystem/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/include/aarch64-none-linux-android -isystem/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/include -std=gnu99 -pipe -O2 -g -ffunction-sections -DALCHEMY_BUILD -fPIC -DANDROID -DANDROID_NDK -Qunused-arguments</value>
     </var>
       <var name='AUTOTOOLS_CXXFLAGS'>
         <value>-isystem/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/include/aarch64-none-linux-android -isystem/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/include -pipe -O2 -g -ffunction-sections -DALCHEMY_BUILD -fPIC -DANDROID -DANDROID_NDK -Qunused-arguments</value>
     </var>
       <var name='AUTOTOOLS_LDFLAGS'>
         <value>-O2 -lc++_shared -Wl,-O1 -L/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/lib/aarch64-none-linux-android -L/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/lib -L/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/aarch64-none-linux-android -L/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib -Wl,-rpath-link=/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/lib/aarch64-none-linux-android -Wl,-rpath-link=/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/lib -Wl,-rpath-link=/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/aarch64-none-linux-android -Wl,-rpath-link=/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib</value>
     </var>
       <var name='AUTOTOOLS_CONFIGURE_ENV'>
         <value>PATH=&quot;/home/marlin/groundsdk/out/groundsdk-android/host/staging/bin:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin&quot; AR=&quot;/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/toolchain/bin/aarch64-linux-android-ar&quot; AS=&quot;/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/toolchain/bin/aarch64-linux-android-as&quot; LD=&quot;/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/toolchain/bin/aarch64-linux-android-ld&quot; NM=&quot;/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/toolchain/bin/aarch64-linux-android-nm&quot; CC=&quot; /home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/toolchain/bin/aarch64-linux-android-clang&quot; GCC=&quot; /home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/toolchain/bin/aarch64-linux-android-clang&quot; CXX=&quot; /home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/toolchain/bin/aarch64-linux-android-clang++&quot; CPP=&quot;/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/toolchain/bin/aarch64-linux-android-cpp&quot; FC=&quot;gfortran&quot; RANLIB=&quot;/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/toolchain/bin/aarch64-linux-android-ranlib&quot; STRIP=&quot;/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/toolchain/bin/aarch64-linux-android-strip&quot; OBJCOPY=&quot;/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/toolchain/bin/aarch64-linux-android-objcopy&quot; OBJDUMP=&quot;/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/toolchain/bin/aarch64-linux-android-objdump&quot; INSTALL=&quot;/usr/bin/install -p&quot; MANIFEST_TOOL=&quot;:&quot; CC_FOR_BUILD=&quot;cc&quot; ASFLAGS=&quot;&quot; CPPFLAGS=&quot;-isystem/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/include/aarch64-none-linux-android -isystem/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/include&quot; CFLAGS=&quot;-isystem/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/include/aarch64-none-linux-android -isystem/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/include -std=gnu99 -pipe -O2 -g -ffunction-sections -DALCHEMY_BUILD -fPIC -DANDROID -DANDROID_NDK -Qunused-arguments&quot; CXXFLAGS=&quot;-isystem/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/include/aarch64-none-linux-android -isystem/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/include -pipe -O2 -g -ffunction-sections -DALCHEMY_BUILD -fPIC -DANDROID -DANDROID_NDK -Qunused-arguments &quot; LDFLAGS=&quot; -O2 -lc++_shared -Wl,-O1 -L/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/lib/aarch64-none-linux-android -L/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/lib -L/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/aarch64-none-linux-android -L/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib -Wl,-rpath-link=/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/lib/aarch64-none-linux-android -Wl,-rpath-link=/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/lib -Wl,-rpath-link=/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/aarch64-none-linux-android -Wl,-rpath-link=/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib &quot; BISON_PATH=&quot;&quot; XDG_DATA_DIRS=/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/share PKG_CONFIG=&quot;/usr/bin/pkg-config&quot; PKG_CONFIG_PATH=&quot;:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/lib/aarch64-none-linux-android/pkgconfig:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/lib/pkgconfig:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/aarch64-none-linux-android/pkgconfig:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/pkgconfig&quot; PKG_CONFIG_SYSROOT_DIR=&quot;/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging&quot; PKG_CONFIG_LIBDIR=&quot;/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging&quot;</value>
     </var>
       <var name='AUTOTOOLS_CONFIGURE_ARGS'>
         <value>--build=&quot;x86_64-linux-gnu&quot; --host=&quot;aarch64-none-linux-android&quot; --enable-static --disable-shared --prefix=&quot;/usr&quot; --sysconfdir=&quot;/etc&quot; ac_cv_prog_YACC= --disable-maintainer-mode --disable-nls --disable-gtk-doc --disable-gtk-doc-html --disable-doxygen-docs --disable-doc --disable-docs --disable-documentation --disable-option-checking --quiet --enable-silent-rules</value>
     </var>
       <var name='AUTOTOOLS_MAKE_ENV'>
         <value>PATH=&quot;/home/marlin/groundsdk/out/groundsdk-android/host/staging/bin:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin&quot; XDG_DATA_DIRS=/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/share PKG_CONFIG=&quot;/usr/bin/pkg-config&quot; PKG_CONFIG_PATH=&quot;:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/lib/aarch64-none-linux-android/pkgconfig:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/lib/pkgconfig:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/aarch64-none-linux-android/pkgconfig:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/pkgconfig&quot; PKG_CONFIG_SYSROOT_DIR=&quot;/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging&quot; PKG_CONFIG_LIBDIR=&quot;/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging&quot; LIBTOOLFLAGS=&quot;--quiet&quot;</value>
     </var>
       <var name='AUTOTOOLS_MAKE_ARGS'>
         <value>DESTDIR=&quot;/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging&quot; -s --no-print-directory</value>
     </var>
       <var name='AUTOTOOLS_CONFIGURE_PREFIX'>
         <value>/usr</value>
     </var>
       <var name='AUTOTOOLS_CONFIGURE_SYSCONFDIR'>
         <value>/etc</value>
     </var>
       <var name='AUTOTOOLS_INSTALL_DESTDIR'>
         <value>/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging</value>
     </var>
       <var name='PKG_CONFIG_ENV'>
         <value>PKG_CONFIG=&quot;/usr/bin/pkg-config&quot; PKG_CONFIG_PATH=&quot;:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/lib/aarch64-none-linux-android/pkgconfig:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/lib/pkgconfig:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/aarch64-none-linux-android/pkgconfig:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/pkgconfig&quot; PKG_CONFIG_SYSROOT_DIR=&quot;/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging&quot; PKG_CONFIG_LIBDIR=&quot;/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging&quot;</value>
     </var>
       <var name='PKG_CONFIG_PATH'>
         <value>:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/lib/aarch64-none-linux-android/pkgconfig:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/lib/pkgconfig:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/aarch64-none-linux-android/pkgconfig:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/pkgconfig</value>
     </var>
       <var name='ANDROID_SDK'>
         <value>/home/marlin/Android/Sdk</value>
     </var>
       <var name='ANDROID_NDK'>
         <value>/opt/android-ndk-r17c</value>
     </var>
       <var name='ANDROID_APILEVEL'>
         <value>24</value>
     </var>
       <var name='ANDROID_MINAPILEVEL'>
         <value>24</value>
     </var>
       <var name='ANDROID_STL'>
         <value>libc++</value>
     </var>
       <var name='ANDROID_SHARED_STL'>
         <value>1</value>
     </var>
       <var name='ANDROID_TOOLCHAIN'>
         <value></value>
     </var>
       <var name='ANDROID_TOOLCHAIN_VERSION'>
         <value></value>
     </var>
       <var name='LINUX_CROSS'>
         <value></value>
     </var>
  </target>
 <target-setup>
      <var name='OS'>
         <value>linux</value>
     </var>
       <var name='OS_FLAVOUR'>
         <value>android</value>
     </var>
       <var name='ARCH'>
         <value>aarch64</value>
     </var>
       <var name='CPU'>
         <value></value>
     </var>
       <var name='LIBC'>
         <value>bionic</value>
     </var>
       <var name='DEFAULT_ARM_MODE'>
         <value></value>
     </var>
       <var name='USE_CXX_EXCEPTIONS'>
         <value>1</value>
     </var>
       <var name='FLOAT_ABI'>
         <value></value>
     </var>
       <var name='LDCONFIG_DIRS'>
         <value></value>
     </var>
       <var name='DEFAULT_LIB_DESTDIR'>
         <value>usr/lib</value>
     </var>
       <var name='USE_CLANG'>
         <value>1</value>
     </var>
       <var name='FORCE_STATIC'>
         <value>1</value>
     </var>
       <var name='NO_UNDEFINED'>
         <value>1</value>
     </var>
       <var name='CROSS'>
         <value></value>
     </var>
       <var name='CC'>
         <value></value>
     </var>
       <var name='CXX'>
         <value></value>
     </var>
       <var name='AS'>
         <value></value>
     </var>
       <var name='FC'>
         <value></value>
     </var>
       <var name='AR'>
         <value></value>
     </var>
       <var name='LD'>
         <value></value>
     </var>
       <var name='CPP'>
         <value></value>
     </var>
       <var name='NM'>
         <value></value>
     </var>
       <var name='STRIP'>
         <value></value>
     </var>
       <var name='OBJCOPY'>
         <value></value>
     </var>
       <var name='OBJDUMP'>
         <value></value>
     </var>
       <var name='RANLIB'>
         <value></value>
     </var>
       <var name='WINDRES'>
         <value></value>
     </var>
       <var name='LLVM'>
         <value></value>
     </var>
       <var name='GLOBAL_C_INCLUDES'>
         <value></value>
     </var>
       <var name='GLOBAL_ASFLAGS'>
         <value></value>
     </var>
       <var name='GLOBAL_CFLAGS'>
         <value>-std=gnu99</value>
     </var>
       <var name='GLOBAL_CFLAGS_gcc'>
         <value></value>
     </var>
       <var name='GLOBAL_CFLAGS_clang'>
         <value></value>
     </var>
       <var name='GLOBAL_CFLAGS_arm'>
         <value></value>
     </var>
       <var name='GLOBAL_CFLAGS_thumb'>
         <value></value>
     </var>
       <var name='GLOBAL_CXXFLAGS'>
         <value></value>
     </var>
       <var name='GLOBAL_CXXFLAGS_gcc'>
         <value></value>
     </var>
       <var name='GLOBAL_CXXFLAGS_thumb'>
         <value></value>
     </var>
       <var name='GLOBAL_LDFLAGS'>
         <value></value>
     </var>
       <var name='GLOBAL_LDFLAGS_gcc'>
         <value></value>
     </var>
       <var name='GLOBAL_LDFLAGS_clang'>
         <value></value>
     </var>
       <var name='GLOBAL_LDLIBS'>
         <value></value>
     </var>
       <var name='GLOBAL_ARFLAGS'>
         <value></value>
     </var>
       <var name='GLOBAL_PCHFLAGS'>
         <value></value>
     </var>
       <var name='GLOBAL_VALAFLAGS'>
         <value></value>
     </var>
       <var name='GLOBAL_OBJCFLAGS'>
         <value></value>
     </var>
       <var name='GLOBAL_OBJCXXFLAGS'>
         <value></value>
     </var>
       <var name='GLOBAL_FFLAGS'>
         <value></value>
     </var>
       <var name='QT_VERSION'>
         <value></value>
     </var>
       <var name='QT_PLATFORM'>
         <value></value>
     </var>
       <var name='NVCC'>
         <value></value>
     </var>
       <var name='GLOBAL_NVCFLAGS'>
         <value></value>
     </var>
       <var name='ANDROID_SDK'>
         <value>/home/marlin/Android/Sdk</value>
     </var>
       <var name='ANDROID_NDK'>
         <value>/opt/android-ndk-r17c</value>
     </var>
       <var name='ANDROID_APILEVEL'>
         <value>24</value>
     </var>
       <var name='ANDROID_MINAPILEVEL'>
         <value>24</value>
     </var>
       <var name='ANDROID_STL'>
         <value>libc++</value>
     </var>
       <var name='ANDROID_SHARED_STL'>
         <value>1</value>
     </var>
       <var name='ANDROID_TOOLCHAIN'>
         <value></value>
     </var>
       <var name='ANDROID_TOOLCHAIN_VERSION'>
         <value></value>
     </var>
  </target-setup>
 <modules>
       <module name='apm-mavlink-ardupilotmega' build='no'>
                                         <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/mavlink</value>
         </field>
             <field name='MODULE'>
             <value>apm-mavlink-ardupilotmega</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>apm-mavlink-ardupilotmega.done</value>
         </field>
             <field name='DESCRIPTION'>
             <value>Mavlink generated files for boards using the ardupilotmega messages definition</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>apm</value>
         </field>
                                                                                                                                                                                                                                                                            <field name='EXPORT_C_INCLUDES'>
             <value>/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/build/apm-mavlink-ardupilotmega /home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/build/apm-mavlink-ardupilotmega/GCS_MAVLink/</value>
         </field>
                               <field name='MODULE_CLASS'>
             <value>CUSTOM</value>
         </field>
                                                                                                          <field name='REVISION'>
             <value>ed9b5620b539729d0fd3cf1187e1d66047cbb574</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>ed9b562</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/mavlink</value>
         </field>
                                                             </module>
        <module name='arsdk-ng-controller' build='no'>
           <field name='depends'>
             <value>libpomp libulog libmux libarsdk libarsdkctrl libpuf</value>
         </field>
                <field name='depends.PREBUILT_LIBRARIES'>
             <value>zlib</value>
         </field>
             <field name='depends.EXTERNAL_LIBRARIES'>
             <value>json libtar</value>
         </field>
             <field name='depends.STATIC_LIBRARIES'>
             <value>libarsdkctrl libarsdk libpuf libmux libpomp libfutils libulog</value>
         </field>
             <field name='depends.WHOLE_STATIC_LIBRARIES'>
             <value>libarsdkgen</value>
         </field>
                      <field name='depends.all'>
             <value>libarsdkctrl libarsdk libpuf libmux libarsdkgen json libpomp libfutils libulog zlib libtar</value>
         </field>
             <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/arsdk-ng</value>
         </field>
             <field name='MODULE'>
             <value>arsdk-ng-controller</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>arsdk-ng-controller</value>
         </field>
                            <field name='SRC_FILES'>
             <value>examples/controller.c</value>
         </field>
                <field name='STATIC_LIBRARIES'>
             <value>libpomp libulog libmux libarsdk libarsdkctrl libpuf</value>
         </field>
                                                          <field name='LIBRARIES'>
             <value>libpomp libulog libmux libarsdk libarsdkctrl libpuf</value>
         </field>
                      <field name='CONDITIONAL_LIBRARIES'>
             <value>OPTIONAL:libpuf</value>
         </field>
                                                                                                                                                                                                                   <field name='MODULE_CLASS'>
             <value>EXECUTABLE</value>
         </field>
                                                                                                    <field name='DESTDIR'>
             <value>usr/bin</value>
         </field>
                <field name='REVISION'>
             <value>da8ebf5394f837809bdbdfb503baa23f714b7763</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>da8ebf5</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/arsdk-ng</value>
         </field>
                                                             </module>
        <module name='arsdk-ng-device' build='no'>
           <field name='depends'>
             <value>libpomp libulog libmux libarsdk</value>
         </field>
                   <field name='depends.EXTERNAL_LIBRARIES'>
             <value>json</value>
         </field>
             <field name='depends.STATIC_LIBRARIES'>
             <value>libarsdk libmux libfutils libpomp libulog</value>
         </field>
             <field name='depends.WHOLE_STATIC_LIBRARIES'>
             <value>libarsdkgen</value>
         </field>
                      <field name='depends.all'>
             <value>libarsdk libmux libarsdkgen json libfutils libpomp libulog</value>
         </field>
             <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/arsdk-ng</value>
         </field>
             <field name='MODULE'>
             <value>arsdk-ng-device</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>arsdk-ng-device</value>
         </field>
                            <field name='SRC_FILES'>
             <value>examples/device.c</value>
         </field>
                <field name='STATIC_LIBRARIES'>
             <value>libpomp libulog libmux libarsdk</value>
         </field>
                                                          <field name='LIBRARIES'>
             <value>libpomp libulog libmux libarsdk</value>
         </field>
                                                                                                                                                                                                                               <field name='MODULE_CLASS'>
             <value>EXECUTABLE</value>
         </field>
                                                                                                    <field name='DESTDIR'>
             <value>usr/bin</value>
         </field>
                <field name='REVISION'>
             <value>da8ebf5394f837809bdbdfb503baa23f714b7763</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>da8ebf5</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/arsdk-ng</value>
         </field>
                                                             </module>
        <module name='arsdk-xml-archive' build='no'>
                                         <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/arsdk-xml</value>
         </field>
             <field name='MODULE'>
             <value>arsdk-xml-archive</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>arsdk-xml-archive.done</value>
         </field>
             <field name='DESCRIPTION'>
             <value>Archive with xml copied on target</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>libs/arsdk</value>
         </field>
                                                                                                                                                                            <field name='CLEAN_FILES'>
             <value>/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/build/arsdk-xml-archive/arsdk-xml.tar.gz</value>
         </field>
                                                                                                                               <field name='MODULE_CLASS'>
             <value>CUSTOM</value>
         </field>
             <field name='COPY_FILES'>
             <value>/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/build/arsdk-xml-archive/arsdk-xml.tar.gz:usr/share/arsdk/</value>
         </field>
                                                                                                       <field name='REVISION'>
             <value>acbd609ba4af0534b39a486c93e06c5c05b3b976</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>acbd609</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/arsdk-xml</value>
         </field>
                                                             </module>
        <module name='arsdkparser' build='no'>
           <field name='depends'>
             <value>python</value>
         </field>
                                     <field name='depends.all'>
             <value>python</value>
         </field>
             <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/arsdk-xml</value>
         </field>
             <field name='MODULE'>
             <value>arsdkparser</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>arsdkparser.done</value>
         </field>
                                                                                                             <field name='DEPENDS_MODULES'>
             <value>python</value>
         </field>
                                                                                                                                                                                                    <field name='MODULE_CLASS'>
             <value>CUSTOM</value>
         </field>
             <field name='COPY_FILES'>
             <value>arsdkparser.py:usr/lib/python/site-packages/ xml/mediastore.xml:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/arsdk-xml/xml/mediastore.xml xml/thermal.xml:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/arsdk-xml/xml/thermal.xml xml/thermal_cam.xml:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/arsdk-xml/xml/thermal_cam.xml xml/user_storage.xml:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/arsdk-xml/xml/user_storage.xml xml/rth.xml:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/arsdk-xml/xml/rth.xml xml/powerup.xml:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/arsdk-xml/xml/powerup.xml xml/generic.xml:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/arsdk-xml/xml/generic.xml xml/drone_manager.xml:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/arsdk-xml/xml/drone_manager.xml xml/followme.xml:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/arsdk-xml/xml/followme.xml xml/wifi.xml:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/arsdk-xml/xml/wifi.xml xml/gimbal.xml:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/arsdk-xml/xml/gimbal.xml xml/leds.xml:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/arsdk-xml/xml/leds.xml xml/minidrone.xml:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/arsdk-xml/xml/minidrone.xml xml/precise_home.xml:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/arsdk-xml/xml/precise_home.xml xml/controller_info.xml:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/arsdk-xml/xml/controller_info.xml xml/mapper_mini.xml:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/arsdk-xml/xml/mapper_mini.xml xml/skyctrl.xml:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/arsdk-xml/xml/skyctrl.xml xml/jpsumo.xml:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/arsdk-xml/xml/jpsumo.xml xml/animation.xml:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/arsdk-xml/xml/animation.xml xml/camera.xml:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/arsdk-xml/xml/camera.xml xml/ardrone3.xml:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/arsdk-xml/xml/ardrone3.xml xml/security_edition.xml:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/arsdk-xml/xml/security_edition.xml xml/debug.xml:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/arsdk-xml/xml/debug.xml xml/mapper.xml:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/arsdk-xml/xml/mapper.xml xml/gauge_fw_updater.xml:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/arsdk-xml/xml/gauge_fw_updater.xml xml/dri.xml:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/arsdk-xml/xml/dri.xml xml/battery.xml:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/arsdk-xml/xml/battery.xml xml/sequoia.xml:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/arsdk-xml/xml/sequoia.xml xml/piloting_style.xml:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/arsdk-xml/xml/piloting_style.xml xml/common.xml:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/arsdk-xml/xml/common.xml xml/move.xml:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/arsdk-xml/xml/move.xml xml/rc.xml:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/arsdk-xml/xml/rc.xml</value>
         </field>
                                                                                                       <field name='REVISION'>
             <value>acbd609ba4af0534b39a486c93e06c5c05b3b976</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>acbd609</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/arsdk-xml</value>
         </field>
                                                             </module>
        <module name='eigen' build='yes'>
                                         <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/eigen</value>
         </field>
             <field name='MODULE'>
             <value>eigen</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>eigen.done</value>
         </field>
             <field name='DESCRIPTION'>
             <value>C++ template library for linear algebra</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>libs</value>
         </field>
                                                                                                                                                                            <field name='CLEAN_FILES'>
             <value>/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/pkgconfig/eigen3.pc</value>
         </field>
             <field name='CLEAN_DIRS'>
             <value>/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/include/eigen3</value>
         </field>
                                                                                                       <field name='EXPORT_C_INCLUDES'>
             <value>/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/include/eigen3</value>
         </field>
             <field name='EXPORT_CFLAGS'>
             <value>-DEIGEN_MPL2_ONLY -DEIGEN_QUATERNIONBASE_PLUGIN=\&quot;QuaternionBaseAddons.hpp\&quot;</value>
         </field>
             <field name='EXPORT_CXXFLAGS'>
             <value>-Wno-deprecated-declarations</value>
         </field>
                         <field name='MODULE_CLASS'>
             <value>CUSTOM</value>
         </field>
                                                                                                          <field name='REVISION'>
             <value>a92adeca75520f3b84ef844b72b4591749800652</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>a92adeca7</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/eigen</value>
         </field>
                                              <field name='CMD_INSTALL'>
             <value>	@mkdir -p $(dir $(EIGEN_INSTALL_PC_FILE))
	@mkdir -p $(EIGEN_INSTALL_INCLUDE_DIR)
	$(Q) ( WORLD=`sed -n -e &quot;s!\#define EIGEN_WORLD_VERSION *\(.*\)!\1!p&quot; $(EIGEN_MACRO_FILE)`; MAJOR=`sed -n -e &quot;s!\#define EIGEN_MAJOR_VERSION *\(.*\)!\1!p&quot; $(EIGEN_MACRO_FILE)`; MINOR=`sed -n -e &quot;s!\#define EIGEN_MINOR_VERSION *\(.*\)!\1!p&quot; $(EIGEN_MACRO_FILE)`; VERSION=&quot;$$WORLD.$$MAJOR.$$MINOR&quot;; sed -e &quot;s!\$${EIGEN_VERSION_NUMBER}!$${VERSION}!&quot; -e &quot;s!\$${INCLUDE_INSTALL_DIR}!$(TARGET_AUTOTOOLS_CONFIGURE_PREFIX)/include/eigen3!&quot; $(EIGEN_PC_IN_FILE) &gt; $(EIGEN_INSTALL_PC_FILE); )
	$(Q) rsync -a --exclude=&apos;*.txt&apos; $(call path-from-top,$(PRIVATE_PATH)/Eigen) $(call path-from-top,$(EIGEN_INSTALL_INCLUDE_DIR))
	$(Q) rsync -a --exclude=&apos;*.txt&apos; --exclude=&apos;bench&apos; --exclude=&apos;doc&apos; --exclude=&apos;test&apos; $(call path-from-top,$(PRIVATE_PATH)/unsupported) $(call path-from-top,$(EIGEN_INSTALL_INCLUDE_DIR))
	$(Q) cp -af $(PRIVATE_PATH)/QuaternionBaseAddons.hpp $(EIGEN_INSTALL_INCLUDE_DIR)</value>
         </field>
                         </module>
        <module name='futils-random' build='no'>
           <field name='depends'>
             <value>libfutils</value>
         </field>
                      <field name='depends.STATIC_LIBRARIES'>
             <value>libfutils libulog</value>
         </field>
                         <field name='depends.all'>
             <value>libfutils libulog</value>
         </field>
             <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/libfutils</value>
         </field>
             <field name='MODULE'>
             <value>futils-random</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>futils-random</value>
         </field>
             <field name='DESCRIPTION'>
             <value>futils random benchmark</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>test</value>
         </field>
                      <field name='SRC_FILES'>
             <value>tests/futils_random.c</value>
         </field>
                <field name='STATIC_LIBRARIES'>
             <value>libfutils</value>
         </field>
                                                          <field name='LIBRARIES'>
             <value>libfutils</value>
         </field>
                                                                                                                                                                                                                               <field name='MODULE_CLASS'>
             <value>EXECUTABLE</value>
         </field>
                                                                                                    <field name='DESTDIR'>
             <value>usr/bin</value>
         </field>
                <field name='REVISION'>
             <value>c326ce0cc2a7354381265a7664bb215be587fac6</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>c326ce0</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/libfutils</value>
         </field>
                                                             </module>
        <module name='h264-dump' build='no'>
           <field name='depends'>
             <value>libh264 libulog json</value>
         </field>
                   <field name='depends.EXTERNAL_LIBRARIES'>
             <value>json</value>
         </field>
             <field name='depends.STATIC_LIBRARIES'>
             <value>libh264 libulog</value>
         </field>
                         <field name='depends.all'>
             <value>libh264 libulog json</value>
         </field>
             <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/libh264</value>
         </field>
             <field name='MODULE'>
             <value>h264-dump</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>h264-dump</value>
         </field>
             <field name='DESCRIPTION'>
             <value>H.264 bitstream dump tool</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>libs/h264</value>
         </field>
                      <field name='SRC_FILES'>
             <value>tools/h264_dump.c</value>
         </field>
                <field name='STATIC_LIBRARIES'>
             <value>libh264 libulog</value>
         </field>
                                     <field name='EXTERNAL_LIBRARIES'>
             <value>json</value>
         </field>
                               <field name='LIBRARIES'>
             <value>json libh264 libulog</value>
         </field>
                                                 <field name='CFLAGS'>
             <value>-std=gnu99</value>
         </field>
                                                                                                                                                                                        <field name='MODULE_CLASS'>
             <value>EXECUTABLE</value>
         </field>
                                                                                                    <field name='DESTDIR'>
             <value>usr/bin</value>
         </field>
                <field name='REVISION'>
             <value>1f8f14b645a569304951270d19c7c4a24629c9a8</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>1f8f14b</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/libh264</value>
         </field>
                                                             </module>
        <module name='host.arsdkgen' build='yes'>
                                         <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/arsdk-xml</value>
         </field>
             <field name='MODULE'>
             <value>host.arsdkgen</value>
         </field>
             <field name='HOST_MODULE'>
             <value>arsdkgen</value>
         </field>
             <field name='MODULE_FILENAME'>
             <value>host.arsdkgen.done</value>
         </field>
                                                                                                                                                                                                                                                                                              <field name='EXPORT_PREREQUISITES'>
             <value>/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/arsdkgen/arsdkparser.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/arsdkgen/arsdkgen.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/arsdkgen/xml/mediastore.xml /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/arsdkgen/xml/thermal.xml /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/arsdkgen/xml/thermal_cam.xml /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/arsdkgen/xml/user_storage.xml /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/arsdkgen/xml/rth.xml /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/arsdkgen/xml/powerup.xml /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/arsdkgen/xml/generic.xml /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/arsdkgen/xml/drone_manager.xml /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/arsdkgen/xml/followme.xml /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/arsdkgen/xml/wifi.xml /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/arsdkgen/xml/gimbal.xml /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/arsdkgen/xml/leds.xml /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/arsdkgen/xml/minidrone.xml /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/arsdkgen/xml/precise_home.xml /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/arsdkgen/xml/controller_info.xml /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/arsdkgen/xml/mapper_mini.xml /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/arsdkgen/xml/skyctrl.xml /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/arsdkgen/xml/jpsumo.xml /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/arsdkgen/xml/animation.xml /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/arsdkgen/xml/camera.xml /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/arsdkgen/xml/ardrone3.xml /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/arsdkgen/xml/security_edition.xml /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/arsdkgen/xml/debug.xml /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/arsdkgen/xml/mapper.xml /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/arsdkgen/xml/gauge_fw_updater.xml /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/arsdkgen/xml/dri.xml /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/arsdkgen/xml/battery.xml /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/arsdkgen/xml/sequoia.xml /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/arsdkgen/xml/piloting_style.xml /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/arsdkgen/xml/common.xml /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/arsdkgen/xml/move.xml /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/arsdkgen/xml/rc.xml</value>
         </field>
                   <field name='MODULE_CLASS'>
             <value>CUSTOM</value>
         </field>
             <field name='COPY_FILES'>
             <value>arsdkparser.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/arsdkgen/arsdkparser.py arsdkgen.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/arsdkgen/arsdkgen.py xml/mediastore.xml:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/arsdkgen/xml/mediastore.xml xml/thermal.xml:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/arsdkgen/xml/thermal.xml xml/thermal_cam.xml:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/arsdkgen/xml/thermal_cam.xml xml/user_storage.xml:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/arsdkgen/xml/user_storage.xml xml/rth.xml:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/arsdkgen/xml/rth.xml xml/powerup.xml:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/arsdkgen/xml/powerup.xml xml/generic.xml:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/arsdkgen/xml/generic.xml xml/drone_manager.xml:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/arsdkgen/xml/drone_manager.xml xml/followme.xml:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/arsdkgen/xml/followme.xml xml/wifi.xml:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/arsdkgen/xml/wifi.xml xml/gimbal.xml:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/arsdkgen/xml/gimbal.xml xml/leds.xml:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/arsdkgen/xml/leds.xml xml/minidrone.xml:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/arsdkgen/xml/minidrone.xml xml/precise_home.xml:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/arsdkgen/xml/precise_home.xml xml/controller_info.xml:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/arsdkgen/xml/controller_info.xml xml/mapper_mini.xml:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/arsdkgen/xml/mapper_mini.xml xml/skyctrl.xml:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/arsdkgen/xml/skyctrl.xml xml/jpsumo.xml:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/arsdkgen/xml/jpsumo.xml xml/animation.xml:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/arsdkgen/xml/animation.xml xml/camera.xml:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/arsdkgen/xml/camera.xml xml/ardrone3.xml:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/arsdkgen/xml/ardrone3.xml xml/security_edition.xml:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/arsdkgen/xml/security_edition.xml xml/debug.xml:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/arsdkgen/xml/debug.xml xml/mapper.xml:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/arsdkgen/xml/mapper.xml xml/gauge_fw_updater.xml:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/arsdkgen/xml/gauge_fw_updater.xml xml/dri.xml:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/arsdkgen/xml/dri.xml xml/battery.xml:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/arsdkgen/xml/battery.xml xml/sequoia.xml:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/arsdkgen/xml/sequoia.xml xml/piloting_style.xml:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/arsdkgen/xml/piloting_style.xml xml/common.xml:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/arsdkgen/xml/common.xml xml/move.xml:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/arsdkgen/xml/move.xml xml/rc.xml:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/arsdkgen/xml/rc.xml</value>
         </field>
                                                                                                       <field name='REVISION'>
             <value>acbd609ba4af0534b39a486c93e06c5c05b3b976</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>acbd609</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/arsdk-xml</value>
         </field>
                                                             </module>
        <module name='host.mavgen' build='no'>
                                         <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/mavlink</value>
         </field>
             <field name='MODULE'>
             <value>host.mavgen</value>
         </field>
             <field name='HOST_MODULE'>
             <value>mavgen</value>
         </field>
             <field name='MODULE_FILENAME'>
             <value>host.mavgen.done</value>
         </field>
                                                                                                                                                                                                                                                                                              <field name='EXPORT_PREREQUISITES'>
             <value>/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/__init__.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/quaternion.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/mavwp.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/mavutil.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/DFReader.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/mavgen_c.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/mavparse.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/__init__.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/mavgen_javascript.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/mavgen_objc.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/mavgen_wlua.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/mavgen_swift.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/mavgen_java.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/mavgen_python.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/mavtemplate.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/mavgen.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/mavcrc.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/mavgen_cs.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/lib/__init__.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/lib/minixsv/pyxsval.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/lib/minixsv/minixsvWrapper.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/lib/minixsv/__init__.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/lib/minixsv/xsvalSimpleTypes.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/lib/minixsv/xsvalBase.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/lib/minixsv/xsvalSchema.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/lib/minixsv/xsvalErrorHandler.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/lib/minixsv/xsvalUtils.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/lib/minixsv/xsvalXmlIf.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/lib/genxmlif/xmliftest.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/lib/genxmlif/xmlifODict.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/lib/genxmlif/__init__.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/lib/genxmlif/xmlifBase.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/lib/genxmlif/xmlifElementTree.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/lib/genxmlif/xmlifMinidom.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/lib/genxmlif/xmlifUtils.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/lib/genxmlif/xmlif4Dom.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/lib/genxmlif/xmlifDom.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/lib/genxmlif/xmlifApi.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/mavtestgen.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/C/test/posix/sha256_test.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/rotmat.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/fgFDM.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/mavexpression.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/tools/mavloss.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/tools/magfit.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/tools/mavtomfile.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/tools/mavparmdiff.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/tools/__init__.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/tools/mavgpslag.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/tools/mavlogdump.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/tools/magfit_gps.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/tools/magfit_rotation_gyro.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/tools/mavsummarize.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/tools/mavextract.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/tools/mavparms.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/tools/mavmission.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/tools/mavfft.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/tools/mavplayback.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/tools/MPU6KSearch.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/tools/mavflighttime.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/tools/magfit_delta.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/tools/mavgen.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/tools/mavsigloss.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/tools/magfit_rotation_gps.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/tools/mavflightmodes.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/tools/mavgraph.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/tools/mavtogpx.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/tools/AccelSearch.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/tools/python_array_test_recv.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/tools/mavsearch.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/tools/quaterniontest.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/tools/mavkml.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/tools/magfit_motors.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/tools/mavgpslock.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/tools/python_array_test_send.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/dialects/__init__.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/dialects/v20/__init__.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/dialects/v10/__init__.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/dialects/v09/__init__.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/mavextra.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/mavparm.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/examples/mavtester.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/examples/mavgps.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/examples/__init__.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/examples/mavtcpsniff.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/examples/mav_accel.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/examples/wptogpx.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/examples/mavtest.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/examples/bwtest.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/examples/apmsetrate.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/examples/mav2pcap.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/examples/magtest.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/setup.py /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/mavschema.xsd /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/lib/minixsv/XMLSchema.xsd /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/lib/minixsv/datatypes.xsd /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/lib/minixsv/xml.xsd /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/lib/minixsv/XMLSchema-instance.xsd /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/lib/minixsv/XInclude.xsd /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/mavnative/mavlink_defaults.h /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/C/include_v0.9/mavlink_helpers.h /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/C/include_v0.9/mavlink_types.h /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/C/include_v0.9/checksum.h /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/C/include_v0.9/protocol.h /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/C/include_v0.9/test/testsuite.h /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/C/include_v0.9/test/test.h /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/C/include_v0.9/test/version.h /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/C/include_v0.9/test/mavlink.h /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/C/include_v0.9/test/mavlink_msg_test_types.h /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/C/include_v1.0/mavlink_conversions.h /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/C/include_v1.0/mavlink_helpers.h /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/C/include_v1.0/mavlink_types.h /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/C/include_v1.0/checksum.h /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/C/include_v1.0/protocol.h /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/C/include_v1.0/test/testsuite.h /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/C/include_v1.0/test/test.h /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/C/include_v1.0/test/version.h /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/C/include_v1.0/test/mavlink.h /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/C/include_v1.0/test/mavlink_msg_test_types.h /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/C/include_v2.0/mavlink_conversions.h /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/C/include_v2.0/mavlink_get_info.h /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/C/include_v2.0/mavlink_sha256.h /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/C/include_v2.0/mavlink_helpers.h /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/C/include_v2.0/mavlink_types.h /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/C/include_v2.0/checksum.h /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/C/include_v2.0/protocol.h /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/C/test/windows/stdafx.h /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/C/test/windows/targetver.h /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/message_definitions/v0.9/minimal.xml /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/message_definitions/v0.9/test.xml /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/message_definitions/v0.9/slugs.xml /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/message_definitions/v0.9/ualberta.xml /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/message_definitions/v0.9/ardupilotmega.xml /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/message_definitions/v0.9/common.xml /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/message_definitions/v1.0/python_array_test.xml /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/message_definitions/v1.0/paparazzi.xml /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/message_definitions/v1.0/minimal.xml /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/message_definitions/v1.0/test.xml /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/message_definitions/v1.0/slugs.xml /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/message_definitions/v1.0/ASLUAV.xml /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/message_definitions/v1.0/parrot.xml /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/message_definitions/v1.0/ualberta.xml /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/message_definitions/v1.0/ardupilotmega.xml /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/message_definitions/v1.0/common.xml /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/message_definitions/v1.0/autoquad.xml /home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/message_definitions/v1.0/matrixpilot.xml</value>
         </field>
                   <field name='MODULE_CLASS'>
             <value>CUSTOM</value>
         </field>
             <field name='COPY_FILES'>
             <value>pymavlink/__init__.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/__init__.py pymavlink/quaternion.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/quaternion.py pymavlink/mavwp.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/mavwp.py pymavlink/mavutil.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/mavutil.py pymavlink/DFReader.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/DFReader.py pymavlink/generator/mavgen_c.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/mavgen_c.py pymavlink/generator/mavparse.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/mavparse.py pymavlink/generator/__init__.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/__init__.py pymavlink/generator/mavgen_javascript.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/mavgen_javascript.py pymavlink/generator/mavgen_objc.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/mavgen_objc.py pymavlink/generator/mavgen_wlua.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/mavgen_wlua.py pymavlink/generator/mavgen_swift.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/mavgen_swift.py pymavlink/generator/mavgen_java.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/mavgen_java.py pymavlink/generator/mavgen_python.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/mavgen_python.py pymavlink/generator/mavtemplate.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/mavtemplate.py pymavlink/generator/mavgen.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/mavgen.py pymavlink/generator/mavcrc.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/mavcrc.py pymavlink/generator/mavgen_cs.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/mavgen_cs.py pymavlink/generator/lib/__init__.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/lib/__init__.py pymavlink/generator/lib/minixsv/pyxsval.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/lib/minixsv/pyxsval.py pymavlink/generator/lib/minixsv/minixsvWrapper.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/lib/minixsv/minixsvWrapper.py pymavlink/generator/lib/minixsv/__init__.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/lib/minixsv/__init__.py pymavlink/generator/lib/minixsv/xsvalSimpleTypes.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/lib/minixsv/xsvalSimpleTypes.py pymavlink/generator/lib/minixsv/xsvalBase.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/lib/minixsv/xsvalBase.py pymavlink/generator/lib/minixsv/xsvalSchema.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/lib/minixsv/xsvalSchema.py pymavlink/generator/lib/minixsv/xsvalErrorHandler.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/lib/minixsv/xsvalErrorHandler.py pymavlink/generator/lib/minixsv/xsvalUtils.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/lib/minixsv/xsvalUtils.py pymavlink/generator/lib/minixsv/xsvalXmlIf.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/lib/minixsv/xsvalXmlIf.py pymavlink/generator/lib/genxmlif/xmliftest.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/lib/genxmlif/xmliftest.py pymavlink/generator/lib/genxmlif/xmlifODict.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/lib/genxmlif/xmlifODict.py pymavlink/generator/lib/genxmlif/__init__.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/lib/genxmlif/__init__.py pymavlink/generator/lib/genxmlif/xmlifBase.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/lib/genxmlif/xmlifBase.py pymavlink/generator/lib/genxmlif/xmlifElementTree.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/lib/genxmlif/xmlifElementTree.py pymavlink/generator/lib/genxmlif/xmlifMinidom.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/lib/genxmlif/xmlifMinidom.py pymavlink/generator/lib/genxmlif/xmlifUtils.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/lib/genxmlif/xmlifUtils.py pymavlink/generator/lib/genxmlif/xmlif4Dom.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/lib/genxmlif/xmlif4Dom.py pymavlink/generator/lib/genxmlif/xmlifDom.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/lib/genxmlif/xmlifDom.py pymavlink/generator/lib/genxmlif/xmlifApi.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/lib/genxmlif/xmlifApi.py pymavlink/generator/mavtestgen.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/mavtestgen.py pymavlink/generator/C/test/posix/sha256_test.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/C/test/posix/sha256_test.py pymavlink/rotmat.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/rotmat.py pymavlink/fgFDM.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/fgFDM.py pymavlink/mavexpression.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/mavexpression.py pymavlink/tools/mavloss.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/tools/mavloss.py pymavlink/tools/magfit.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/tools/magfit.py pymavlink/tools/mavtomfile.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/tools/mavtomfile.py pymavlink/tools/mavparmdiff.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/tools/mavparmdiff.py pymavlink/tools/__init__.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/tools/__init__.py pymavlink/tools/mavgpslag.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/tools/mavgpslag.py pymavlink/tools/mavlogdump.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/tools/mavlogdump.py pymavlink/tools/magfit_gps.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/tools/magfit_gps.py pymavlink/tools/magfit_rotation_gyro.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/tools/magfit_rotation_gyro.py pymavlink/tools/mavsummarize.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/tools/mavsummarize.py pymavlink/tools/mavextract.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/tools/mavextract.py pymavlink/tools/mavparms.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/tools/mavparms.py pymavlink/tools/mavmission.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/tools/mavmission.py pymavlink/tools/mavfft.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/tools/mavfft.py pymavlink/tools/mavplayback.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/tools/mavplayback.py pymavlink/tools/MPU6KSearch.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/tools/MPU6KSearch.py pymavlink/tools/mavflighttime.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/tools/mavflighttime.py pymavlink/tools/magfit_delta.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/tools/magfit_delta.py pymavlink/tools/mavgen.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/tools/mavgen.py pymavlink/tools/mavsigloss.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/tools/mavsigloss.py pymavlink/tools/magfit_rotation_gps.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/tools/magfit_rotation_gps.py pymavlink/tools/mavflightmodes.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/tools/mavflightmodes.py pymavlink/tools/mavgraph.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/tools/mavgraph.py pymavlink/tools/mavtogpx.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/tools/mavtogpx.py pymavlink/tools/AccelSearch.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/tools/AccelSearch.py pymavlink/tools/python_array_test_recv.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/tools/python_array_test_recv.py pymavlink/tools/mavsearch.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/tools/mavsearch.py pymavlink/tools/quaterniontest.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/tools/quaterniontest.py pymavlink/tools/mavkml.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/tools/mavkml.py pymavlink/tools/magfit_motors.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/tools/magfit_motors.py pymavlink/tools/mavgpslock.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/tools/mavgpslock.py pymavlink/tools/python_array_test_send.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/tools/python_array_test_send.py pymavlink/dialects/__init__.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/dialects/__init__.py pymavlink/dialects/v20/__init__.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/dialects/v20/__init__.py pymavlink/dialects/v10/__init__.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/dialects/v10/__init__.py pymavlink/dialects/v09/__init__.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/dialects/v09/__init__.py pymavlink/mavextra.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/mavextra.py pymavlink/mavparm.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/mavparm.py pymavlink/examples/mavtester.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/examples/mavtester.py pymavlink/examples/mavgps.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/examples/mavgps.py pymavlink/examples/__init__.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/examples/__init__.py pymavlink/examples/mavtcpsniff.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/examples/mavtcpsniff.py pymavlink/examples/mav_accel.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/examples/mav_accel.py pymavlink/examples/wptogpx.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/examples/wptogpx.py pymavlink/examples/mavtest.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/examples/mavtest.py pymavlink/examples/bwtest.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/examples/bwtest.py pymavlink/examples/apmsetrate.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/examples/apmsetrate.py pymavlink/examples/mav2pcap.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/examples/mav2pcap.py pymavlink/examples/magtest.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/examples/magtest.py pymavlink/setup.py:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/setup.py pymavlink/generator/mavschema.xsd:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/mavschema.xsd pymavlink/generator/lib/minixsv/XMLSchema.xsd:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/lib/minixsv/XMLSchema.xsd pymavlink/generator/lib/minixsv/datatypes.xsd:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/lib/minixsv/datatypes.xsd pymavlink/generator/lib/minixsv/xml.xsd:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/lib/minixsv/xml.xsd pymavlink/generator/lib/minixsv/XMLSchema-instance.xsd:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/lib/minixsv/XMLSchema-instance.xsd pymavlink/generator/lib/minixsv/XInclude.xsd:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/lib/minixsv/XInclude.xsd pymavlink/mavnative/mavlink_defaults.h:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/mavnative/mavlink_defaults.h pymavlink/generator/C/include_v0.9/mavlink_helpers.h:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/C/include_v0.9/mavlink_helpers.h pymavlink/generator/C/include_v0.9/mavlink_types.h:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/C/include_v0.9/mavlink_types.h pymavlink/generator/C/include_v0.9/checksum.h:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/C/include_v0.9/checksum.h pymavlink/generator/C/include_v0.9/protocol.h:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/C/include_v0.9/protocol.h pymavlink/generator/C/include_v0.9/test/testsuite.h:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/C/include_v0.9/test/testsuite.h pymavlink/generator/C/include_v0.9/test/test.h:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/C/include_v0.9/test/test.h pymavlink/generator/C/include_v0.9/test/version.h:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/C/include_v0.9/test/version.h pymavlink/generator/C/include_v0.9/test/mavlink.h:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/C/include_v0.9/test/mavlink.h pymavlink/generator/C/include_v0.9/test/mavlink_msg_test_types.h:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/C/include_v0.9/test/mavlink_msg_test_types.h pymavlink/generator/C/include_v1.0/mavlink_conversions.h:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/C/include_v1.0/mavlink_conversions.h pymavlink/generator/C/include_v1.0/mavlink_helpers.h:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/C/include_v1.0/mavlink_helpers.h pymavlink/generator/C/include_v1.0/mavlink_types.h:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/C/include_v1.0/mavlink_types.h pymavlink/generator/C/include_v1.0/checksum.h:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/C/include_v1.0/checksum.h pymavlink/generator/C/include_v1.0/protocol.h:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/C/include_v1.0/protocol.h pymavlink/generator/C/include_v1.0/test/testsuite.h:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/C/include_v1.0/test/testsuite.h pymavlink/generator/C/include_v1.0/test/test.h:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/C/include_v1.0/test/test.h pymavlink/generator/C/include_v1.0/test/version.h:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/C/include_v1.0/test/version.h pymavlink/generator/C/include_v1.0/test/mavlink.h:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/C/include_v1.0/test/mavlink.h pymavlink/generator/C/include_v1.0/test/mavlink_msg_test_types.h:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/C/include_v1.0/test/mavlink_msg_test_types.h pymavlink/generator/C/include_v2.0/mavlink_conversions.h:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/C/include_v2.0/mavlink_conversions.h pymavlink/generator/C/include_v2.0/mavlink_get_info.h:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/C/include_v2.0/mavlink_get_info.h pymavlink/generator/C/include_v2.0/mavlink_sha256.h:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/C/include_v2.0/mavlink_sha256.h pymavlink/generator/C/include_v2.0/mavlink_helpers.h:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/C/include_v2.0/mavlink_helpers.h pymavlink/generator/C/include_v2.0/mavlink_types.h:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/C/include_v2.0/mavlink_types.h pymavlink/generator/C/include_v2.0/checksum.h:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/C/include_v2.0/checksum.h pymavlink/generator/C/include_v2.0/protocol.h:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/C/include_v2.0/protocol.h pymavlink/generator/C/test/windows/stdafx.h:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/C/test/windows/stdafx.h pymavlink/generator/C/test/windows/targetver.h:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/pymavlink/generator/C/test/windows/targetver.h message_definitions/v0.9/minimal.xml:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/message_definitions/v0.9/minimal.xml message_definitions/v0.9/test.xml:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/message_definitions/v0.9/test.xml message_definitions/v0.9/slugs.xml:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/message_definitions/v0.9/slugs.xml message_definitions/v0.9/ualberta.xml:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/message_definitions/v0.9/ualberta.xml message_definitions/v0.9/ardupilotmega.xml:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/message_definitions/v0.9/ardupilotmega.xml message_definitions/v0.9/common.xml:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/message_definitions/v0.9/common.xml message_definitions/v1.0/python_array_test.xml:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/message_definitions/v1.0/python_array_test.xml message_definitions/v1.0/paparazzi.xml:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/message_definitions/v1.0/paparazzi.xml message_definitions/v1.0/minimal.xml:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/message_definitions/v1.0/minimal.xml message_definitions/v1.0/test.xml:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/message_definitions/v1.0/test.xml message_definitions/v1.0/slugs.xml:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/message_definitions/v1.0/slugs.xml message_definitions/v1.0/ASLUAV.xml:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/message_definitions/v1.0/ASLUAV.xml message_definitions/v1.0/parrot.xml:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/message_definitions/v1.0/parrot.xml message_definitions/v1.0/ualberta.xml:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/message_definitions/v1.0/ualberta.xml message_definitions/v1.0/ardupilotmega.xml:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/message_definitions/v1.0/ardupilotmega.xml message_definitions/v1.0/common.xml:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/message_definitions/v1.0/common.xml message_definitions/v1.0/autoquad.xml:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/message_definitions/v1.0/autoquad.xml message_definitions/v1.0/matrixpilot.xml:/home/marlin/groundsdk/out/groundsdk-android/host/staging/usr/lib/mavgen/message_definitions/v1.0/matrixpilot.xml</value>
         </field>
                                                                                                       <field name='REVISION'>
             <value>ed9b5620b539729d0fd3cf1187e1d66047cbb574</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>ed9b562</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/mavlink</value>
         </field>
                                                             </module>
        <module name='host.pybinding' build='no'>
                                         <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/ctypeslib</value>
         </field>
             <field name='MODULE'>
             <value>host.pybinding</value>
         </field>
             <field name='HOST_MODULE'>
             <value>pybinding</value>
         </field>
             <field name='MODULE_FILENAME'>
             <value>host.pybinding.done</value>
         </field>
                                                                                                                                                                                                                                                                                                       <field name='MODULE_CLASS'>
             <value>CUSTOM</value>
         </field>
             <field name='COPY_FILES'>
             <value>ctypeslib/clang2py.py:usr/lib/python/site-packages/ctypeslib/ ctypeslib/library.py:usr/lib/python/site-packages/ctypeslib/ ctypeslib/codegen/clangparser.py:usr/lib/python/site-packages/ctypeslib/codegen/ ctypeslib/codegen/codegenerator.py:usr/lib/python/site-packages/ctypeslib/codegen/ ctypeslib/codegen/cursorhandler.py:usr/lib/python/site-packages/ctypeslib/codegen/ ctypeslib/codegen/handler.py:usr/lib/python/site-packages/ctypeslib/codegen/ ctypeslib/codegen/__init__.py:usr/lib/python/site-packages/ctypeslib/codegen/ ctypeslib/codegen/typedesc.py:usr/lib/python/site-packages/ctypeslib/codegen/ ctypeslib/codegen/typehandler.py:usr/lib/python/site-packages/ctypeslib/codegen/ ctypeslib/codegen/util.py:usr/lib/python/site-packages/ctypeslib/codegen/ ctypeslib/data/fundamental_type_name.tpl:usr/lib/python/site-packages/ctypeslib/data/ ctypeslib/data/headers.tpl:usr/lib/python/site-packages/ctypeslib/data/ ctypeslib/data/pointer_type.tpl:usr/lib/python/site-packages/ctypeslib/data/ ctypeslib/data/string_cast.tpl:usr/lib/python/site-packages/ctypeslib/data/ ctypeslib/data/structure_type.tpl:usr/lib/python/site-packages/ctypeslib/data/ ctypeslib/dynamic_module.py:usr/lib/python/site-packages/ctypeslib/ ctypeslib/experimental/byref_at.py:usr/lib/python/site-packages/ctypeslib/experimental/ ctypeslib/__init__.py:usr/lib/python/site-packages/ctypeslib/</value>
         </field>
                                                                                                       <field name='REVISION'>
             <value>421d35cac4a58ed65067cc0fa26e7d9825e7120c</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>2.2.2-26-g421d35c</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/ctypeslib</value>
         </field>
                                                             </module>
        <module name='json' build='yes'>
                                         <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/json</value>
         </field>
             <field name='MODULE'>
             <value>json</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>json.done</value>
         </field>
             <field name='DESCRIPTION'>
             <value>JSON-C</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>libs</value>
         </field>
             <field name='DONE_FILES'>
             <value>json.done</value>
         </field>
                                                                                                                <field name='CFLAGS'>
             <value>-Wno-error</value>
         </field>
                                                                                                                                                                            <field name='EXPORT_LDLIBS'>
             <value>-ljson-c</value>
         </field>
                      <field name='MODULE_CLASS'>
             <value>CMAKE</value>
         </field>
                   <field name='CREATE_LINKS'>
             <value>usr/include/json:json-c usr/lib/libjson.a:libjson-c.a</value>
         </field>
                                                                                                 <field name='REVISION'>
             <value>21eda43bdcc8f6f1c8a718c99ad2b65b5419414b</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>21eda43</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/json-c</value>
         </field>
                                                             </module>
        <module name='kmsgd' build='no'>
           <field name='depends'>
             <value>libulog</value>
         </field>
                      <field name='depends.STATIC_LIBRARIES'>
             <value>libulog</value>
         </field>
                         <field name='depends.all'>
             <value>libulog</value>
         </field>
             <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/ulog/kmsgd</value>
         </field>
             <field name='MODULE'>
             <value>kmsgd</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>kmsgd</value>
         </field>
             <field name='DESCRIPTION'>
             <value>A daemon logging kernel messages to a ulog buffer</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>utils</value>
         </field>
                      <field name='SRC_FILES'>
             <value>kmsgd.c</value>
         </field>
                <field name='STATIC_LIBRARIES'>
             <value>libulog</value>
         </field>
                                                          <field name='LIBRARIES'>
             <value>libulog</value>
         </field>
                                                                                                                                                                                                                               <field name='MODULE_CLASS'>
             <value>EXECUTABLE</value>
         </field>
             <field name='COPY_FILES'>
             <value>scripts/90-kmsgd.rc:etc/boxinit.d/</value>
         </field>
                                                                                                 <field name='DESTDIR'>
             <value>usr/bin</value>
         </field>
                <field name='REVISION'>
             <value>0389d243352255f6182326dccdae3d56dadc078f</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>0389d24</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/ulog</value>
         </field>
                                                             </module>
        <module name='libARMavlink' build='no'>
           <field name='depends'>
             <value>libulog</value>
         </field>
                      <field name='depends.STATIC_LIBRARIES'>
             <value>libulog</value>
         </field>
                         <field name='depends.all'>
             <value>libulog</value>
         </field>
             <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/libARMavlink</value>
         </field>
             <field name='MODULE'>
             <value>libARMavlink</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>libarmavlink.a</value>
         </field>
             <field name='DESCRIPTION'>
             <value>ARSDK Mavlink</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>dragon/libs</value>
         </field>
                <field name='CUSTOM_TARGETS'>
             <value>/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/build/libARMavlink/parrot.xml.done</value>
         </field>
             <field name='CUSTOM_MACROS'>
             <value>mavgen-macro:C,generated,/home/marlin/groundsdk/packages/common/libARMavlink/message_definitions/parrot.xml</value>
         </field>
             <field name='SRC_FILES'>
             <value>Sources/ARMAVLINK_FileGenerator.c Sources/ARMAVLINK_FileParser.c Sources/ARMAVLINK_ListUtils.c Sources/ARMAVLINK_Manager.c Sources/ARMAVLINK_MissionItemUtils.c gen/Sources/ARMAVLINK_Error.c</value>
         </field>
                <field name='STATIC_LIBRARIES'>
             <value>libulog</value>
         </field>
                                                          <field name='LIBRARIES'>
             <value>libulog</value>
         </field>
                                        <field name='DEPENDS_HOST_MODULES'>
             <value>host.mavgen</value>
         </field>
             <field name='C_INCLUDES'>
             <value>/home/marlin/groundsdk/packages/common/libARMavlink/Includes /home/marlin/groundsdk/packages/common/libARMavlink/Sources /home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/build/libARMavlink/generated</value>
         </field>
                <field name='CFLAGS'>
             <value>-DHAVE_CONFIG_H -Wno-address-of-packed-member</value>
         </field>
                                                                   <field name='CLEAN_FILES'>
             <value>/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/build/libARMavlink/parrot.xml.done /home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/build/libARMavlink/parrot.xml.d</value>
         </field>
                                                                                                          <field name='EXPORT_C_INCLUDES'>
             <value>/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/build/libARMavlink/generated</value>
         </field>
                      <field name='EXPORT_PREREQUISITES'>
             <value>/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/include/libARMavlink/libARMavlink.h /home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/include/libARMavlink/ARMAVLINK_Error.h /home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/include/libARMavlink/ARMAVLINK_FileGenerator.h /home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/include/libARMavlink/ARMAVLINK_FileParser.h /home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/include/libARMavlink/ARMAVLINK_ListUtils.h /home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/include/libARMavlink/ARMAVLINK_Manager.h /home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/include/libARMavlink/ARMAVLINK_MissionItemUtils.h /home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/build/libARMavlink/parrot.xml.done</value>
         </field>
                   <field name='MODULE_CLASS'>
             <value>STATIC_LIBRARY</value>
         </field>
             <field name='COPY_FILES'>
             <value>Includes/libARMavlink/libARMavlink.h:usr/include/libARMavlink/ Includes/libARMavlink/ARMAVLINK_Error.h:usr/include/libARMavlink/ Includes/libARMavlink/ARMAVLINK_FileGenerator.h:usr/include/libARMavlink/ Includes/libARMavlink/ARMAVLINK_FileParser.h:usr/include/libARMavlink/ Includes/libARMavlink/ARMAVLINK_ListUtils.h:usr/include/libARMavlink/ Includes/libARMavlink/ARMAVLINK_Manager.h:usr/include/libARMavlink/ Includes/libARMavlink/ARMAVLINK_MissionItemUtils.h:usr/include/libARMavlink/</value>
         </field>
                   <field name='INSTALL_HEADERS'>
             <value>Includes/libARMavlink/libARMavlink.h:usr/include/libARMavlink/ Includes/libARMavlink/ARMAVLINK_Error.h:usr/include/libARMavlink/ Includes/libARMavlink/ARMAVLINK_FileGenerator.h:usr/include/libARMavlink/ Includes/libARMavlink/ARMAVLINK_FileParser.h:usr/include/libARMavlink/ Includes/libARMavlink/ARMAVLINK_ListUtils.h:usr/include/libARMavlink/ Includes/libARMavlink/ARMAVLINK_Manager.h:usr/include/libARMavlink/ Includes/libARMavlink/ARMAVLINK_MissionItemUtils.h:usr/include/libARMavlink/</value>
         </field>
                                                                                        <field name='DESTDIR'>
             <value>usr/lib</value>
         </field>
                <field name='REVISION'>
             <value>41f616dd66982445eca6ffad326da83a4666f9ff</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>41f616d</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/libARMavlink</value>
         </field>
                         <field name='CMD_PRE_INSTALL'>
             <value>    $(Q) cp -Raf $(TARGET_OUT_BUILD)/libARMavlink/generated/* $(TARGET_OUT_STAGING)/usr/include/</value>
         </field>
                                              </module>
        <module name='libarsdk' build='yes'>
           <field name='depends'>
             <value>libpomp libfutils libulog libmux libarsdkgen json</value>
         </field>
                   <field name='depends.EXTERNAL_LIBRARIES'>
             <value>json</value>
         </field>
             <field name='depends.STATIC_LIBRARIES'>
             <value>libmux libfutils libpomp libulog</value>
         </field>
             <field name='depends.WHOLE_STATIC_LIBRARIES'>
             <value>libarsdkgen</value>
         </field>
                      <field name='depends.all'>
             <value>libmux libarsdkgen json libfutils libpomp libulog</value>
         </field>
             <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/arsdk-ng</value>
         </field>
             <field name='MODULE'>
             <value>libarsdk</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>libarsdk.a</value>
         </field>
                            <field name='SRC_FILES'>
             <value>libarsdk/src/arsdk_backend.c libarsdk/src/cmd_itf/arsdk_cmd_itf.c libarsdk/src/cmd_itf/arsdk_cmd_itf1.c libarsdk/src/cmd_itf/arsdk_cmd_itf2.c libarsdk/src/cmd_itf/arsdk_cmd_itf3.c libarsdk/src/arsdk_decoder.c libarsdk/src/arsdk_mngr.c libarsdk/src/arsdk_encoder.c libarsdk/src/arsdk_log.c libarsdk/src/arsdk_peer.c libarsdk/src/arsdk_transport.c libarsdk/src/net/arsdk_backend_net.c libarsdk/src/net/arsdk_publisher_avahi.c libarsdk/src/net/arsdk_publisher_net.c libarsdk/src/net/arsdk_transport_net.c libarsdk/src/mux/arsdk_backend_mux.c libarsdk/src/mux/arsdk_publisher_mux.c libarsdk/src/mux/arsdk_transport_mux.c</value>
         </field>
                <field name='STATIC_LIBRARIES'>
             <value>libpomp libfutils libulog libmux</value>
         </field>
                   <field name='WHOLE_STATIC_LIBRARIES'>
             <value>libarsdkgen</value>
         </field>
                            <field name='EXTERNAL_LIBRARIES'>
             <value>json</value>
         </field>
                               <field name='LIBRARIES'>
             <value>libpomp json libfutils libulog libmux</value>
         </field>
                      <field name='CONDITIONAL_LIBRARIES'>
             <value>OPTIONAL:libulog OPTIONAL:libmux</value>
         </field>
                               <field name='C_INCLUDES'>
             <value>/home/marlin/groundsdk/packages/common/arsdk-ng/libarsdk/src</value>
         </field>
                <field name='CFLAGS'>
             <value>-DARSDK_API_EXPORTS -fvisibility=hidden</value>
         </field>
                                                                                                                                                                   <field name='EXPORT_C_INCLUDES'>
             <value>/home/marlin/groundsdk/packages/common/arsdk-ng/libarsdk/include</value>
         </field>
                         <field name='EXPORT_CUSTOM_VARIABLES'>
             <value>LIBARSDK_HEADERS=/home/marlin/groundsdk/packages/common/arsdk-ng/libarsdk/include/arsdk/arsdk.h:/home/marlin/groundsdk/packages/common/arsdk-ng/libarsdk/include/arsdk/arsdk_desc.h:/home/marlin/groundsdk/packages/common/arsdk-ng/libarsdk/include/arsdk/arsdk_cmd_itf.h:/home/marlin/groundsdk/packages/common/arsdk-ng/libarsdk/include/arsdk/arsdk_mngr.h:/home/marlin/groundsdk/packages/common/arsdk-ng/libarsdk/include/arsdk/arsdk_backend.h:/home/marlin/groundsdk/packages/common/arsdk-ng/libarsdk/include/arsdk/arsdk_backend_net.h:/home/marlin/groundsdk/packages/common/arsdk-ng/libarsdk/include/arsdk/arsdk_backend_mux.h:/home/marlin/groundsdk/packages/common/arsdk-ng/libarsdk/include/arsdk/arsdk_publisher_avahi.h:/home/marlin/groundsdk/packages/common/arsdk-ng/libarsdk/include/arsdk/arsdk_publisher_net.h:/home/marlin/groundsdk/packages/common/arsdk-ng/libarsdk/include/arsdk/arsdk_publisher_mux.h:/home/marlin/groundsdk/packages/common/arsdk-ng/libarsdk/include/arsdk/arsdk_peer.h;;</value>
         </field>
                <field name='MODULE_CLASS'>
             <value>STATIC_LIBRARY</value>
         </field>
                                                                                                    <field name='DESTDIR'>
             <value>usr/lib</value>
         </field>
                <field name='REVISION'>
             <value>da8ebf5394f837809bdbdfb503baa23f714b7763</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>da8ebf5</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/arsdk-ng</value>
         </field>
                                                             </module>
        <module name='libarsdkctrl' build='yes'>
           <field name='depends'>
             <value>libarsdk libulog libpomp libfutils libmux libpuf json</value>
         </field>
                <field name='depends.PREBUILT_LIBRARIES'>
             <value>zlib</value>
         </field>
             <field name='depends.EXTERNAL_LIBRARIES'>
             <value>json libtar</value>
         </field>
             <field name='depends.STATIC_LIBRARIES'>
             <value>libarsdk libpuf libmux libpomp libfutils libulog</value>
         </field>
             <field name='depends.WHOLE_STATIC_LIBRARIES'>
             <value>libarsdkgen</value>
         </field>
                      <field name='depends.all'>
             <value>libarsdk libpuf libmux libarsdkgen json libpomp libfutils libulog zlib libtar</value>
         </field>
             <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/arsdk-ng</value>
         </field>
             <field name='MODULE'>
             <value>libarsdkctrl</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>libarsdkctrl.a</value>
         </field>
                            <field name='SRC_FILES'>
             <value>libarsdkctrl/src/arsdkctrl_log.c libarsdkctrl/src/arsdk_discovery.c libarsdkctrl/src/arsdk_ctrl.c libarsdkctrl/src/arsdkctrl_backend.c libarsdkctrl/src/arsdk_media_itf.c libarsdkctrl/src/arsdk_updater_itf.c libarsdkctrl/src/arsdk_blackbox_itf.c libarsdkctrl/src/arsdk_crashml_itf.c libarsdkctrl/src/arsdk_flight_log_itf.c libarsdkctrl/src/arsdk_pud_itf.c libarsdkctrl/src/arsdk_ephemeris_itf.c libarsdkctrl/src/arsdk_md5.c libarsdkctrl/src/updater/arsdk_updater_transport.c libarsdkctrl/src/updater/arsdk_updater_transport_ftp.c libarsdkctrl/src/updater/arsdk_updater_transport_mux.c libarsdkctrl/src/arsdk_ftp_itf.c libarsdkctrl/src/arsdk_device.c libarsdkctrl/src/net/arsdkctrl_backend_net.c libarsdkctrl/src/net/arsdk_avahi_loop.c libarsdkctrl/src/net/arsdk_discovery_avahi.c libarsdkctrl/src/net/arsdk_discovery_net.c libarsdkctrl/src/mux/arsdkctrl_backend_mux.c libarsdkctrl/src/mux/arsdk_discovery_mux.c libarsdkctrl/src/ftp/arsdk_ftp.c libarsdkctrl/src/ftp/arsdk_ftp_conn.c libarsdkctrl/src/ftp/arsdk_ftp_seq.c libarsdkctrl/src/ftp/arsdk_ftp_cmd.c</value>
         </field>
                <field name='STATIC_LIBRARIES'>
             <value>libarsdk libulog libpomp libfutils libmux libpuf</value>
         </field>
                                     <field name='EXTERNAL_LIBRARIES'>
             <value>json</value>
         </field>
                               <field name='LIBRARIES'>
             <value>libarsdk libulog libpomp json libfutils libmux libpuf</value>
         </field>
                      <field name='CONDITIONAL_LIBRARIES'>
             <value>OPTIONAL:avahi-client OPTIONAL:libpuf</value>
         </field>
                               <field name='C_INCLUDES'>
             <value>/home/marlin/groundsdk/packages/common/arsdk-ng/libarsdk/include /home/marlin/groundsdk/packages/common/arsdk-ng/libarsdk/src /home/marlin/groundsdk/packages/common/arsdk-ng/libarsdkctrl/src</value>
         </field>
                <field name='CFLAGS'>
             <value>-DARSDK_API_EXPORTS -fvisibility=hidden</value>
         </field>
                                                                                                                                                                   <field name='EXPORT_C_INCLUDES'>
             <value>/home/marlin/groundsdk/packages/common/arsdk-ng/libarsdkctrl/include</value>
         </field>
                         <field name='EXPORT_CUSTOM_VARIABLES'>
             <value>LIBARSDKCTRL_HEADERS=/home/marlin/groundsdk/packages/common/arsdk-ng/libarsdkctrl/include/arsdkctrl/arsdkctrl.h:/home/marlin/groundsdk/packages/common/arsdk-ng/libarsdk/include/arsdk/arsdk.h:/home/marlin/groundsdk/packages/common/arsdk-ng/libarsdkctrl/include/arsdkctrl/arsdk_ctrl.h:/home/marlin/groundsdk/packages/common/arsdk-ng/libarsdk/include/arsdk/arsdk_backend.h:/home/marlin/groundsdk/packages/common/arsdk-ng/libarsdkctrl/include/arsdkctrl/arsdkctrl_backend.h:/home/marlin/groundsdk/packages/common/arsdk-ng/libarsdkctrl/include/arsdkctrl/arsdkctrl_backend_net.h:/home/marlin/groundsdk/packages/common/arsdk-ng/libarsdkctrl/include/arsdkctrl/arsdkctrl_backend_mux.h:/home/marlin/groundsdk/packages/common/arsdk-ng/libarsdkctrl/include/arsdkctrl/arsdk_discovery_avahi.h:/home/marlin/groundsdk/packages/common/arsdk-ng/libarsdkctrl/include/arsdkctrl/arsdk_discovery_net.h:/home/marlin/groundsdk/packages/common/arsdk-ng/libarsdkctrl/include/arsdkctrl/arsdk_discovery_mux.h:/home/marlin/groundsdk/packages/common/arsdk-ng/libarsdkctrl/include/arsdkctrl/arsdk_ftp_itf.h:/home/marlin/groundsdk/packages/common/arsdk-ng/libarsdkctrl/include/arsdkctrl/arsdk_media_itf.h:/home/marlin/groundsdk/packages/common/arsdk-ng/libarsdkctrl/include/arsdkctrl/arsdk_updater_itf.h:/home/marlin/groundsdk/packages/common/arsdk-ng/libarsdkctrl/include/arsdkctrl/arsdk_blackbox_itf.h:/home/marlin/groundsdk/packages/common/arsdk-ng/libarsdkctrl/include/arsdkctrl/arsdk_crashml_itf.h:/home/marlin/groundsdk/packages/common/arsdk-ng/libarsdkctrl/include/arsdkctrl/arsdk_pud_itf.h:/home/marlin/groundsdk/packages/common/arsdk-ng/libarsdkctrl/include/arsdkctrl/arsdk_ephemeris_itf.h:/home/marlin/groundsdk/packages/common/arsdk-ng/libarsdkctrl/include/arsdkctrl/arsdk_device.h:/home/marlin/groundsdk/packages/common/arsdk-ng/libarsdkctrl/include/arsdkctrl/internal/arsdk_discovery_internal.h;;</value>
         </field>
                <field name='MODULE_CLASS'>
             <value>STATIC_LIBRARY</value>
         </field>
                                                                                                    <field name='DESTDIR'>
             <value>usr/lib</value>
         </field>
                <field name='REVISION'>
             <value>da8ebf5394f837809bdbdfb503baa23f714b7763</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>da8ebf5</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/arsdk-ng</value>
         </field>
                                                             </module>
        <module name='libarsdkgen' build='yes'>
           <field name='depends'>
             <value>libpomp</value>
         </field>
                      <field name='depends.STATIC_LIBRARIES'>
             <value>libpomp libulog</value>
         </field>
                      <field name='depends.headers'>
             <value>libarsdk</value>
         </field>
             <field name='depends.all'>
             <value>libpomp libulog</value>
         </field>
             <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/arsdk-ng</value>
         </field>
             <field name='MODULE'>
             <value>libarsdkgen</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>libarsdkgen.a</value>
         </field>
                   <field name='DONE_FILES'>
             <value>libarsdkgen-arsdkgen.done</value>
         </field>
             <field name='CUSTOM_TARGETS'>
             <value>/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/build/libarsdkgen/libarsdkgen-arsdkgen.done</value>
         </field>
             <field name='CUSTOM_MACROS'>
             <value>arsdkgen-macro:/home/marlin/groundsdk/packages/common/arsdk-ng/tools/libarsdkgen.py,/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/build/libarsdkgen/gen</value>
         </field>
                <field name='GENERATED_SRC_FILES'>
             <value>gen/arsdk_cmd_desc.c gen/arsdk_cmd_dec.c gen/arsdk_cmd_enc.c</value>
         </field>
             <field name='STATIC_LIBRARIES'>
             <value>libpomp</value>
         </field>
                                                          <field name='LIBRARIES'>
             <value>libpomp</value>
         </field>
                               <field name='DEPENDS_HEADERS'>
             <value>libarsdk</value>
         </field>
                   <field name='DEPENDS_HOST_MODULES'>
             <value>host.arsdkgen</value>
         </field>
             <field name='C_INCLUDES'>
             <value>/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/build/libarsdkgen/gen</value>
         </field>
                <field name='CFLAGS'>
             <value>-DARSDK_API_EXPORTS -fvisibility=hidden</value>
         </field>
                                              <field name='PREREQUISITES'>
             <value>/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/build/libarsdkgen/gen/arsdk_ids.h /home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/build/libarsdkgen/gen/arsdk_enums.h /home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/build/libarsdkgen/gen/arsdk_cmd_desc.h /home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/build/libarsdkgen/gen/arsdk_cmd_desc.c /home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/build/libarsdkgen/gen/arsdk_cmd_dec.h /home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/build/libarsdkgen/gen/arsdk_cmd_dec.c /home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/build/libarsdkgen/gen/arsdk_cmd_enc.h /home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/build/libarsdkgen/gen/arsdk_cmd_enc.c /home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/build/libarsdkgen/gen/arsdk_cmd_send.h</value>
         </field>
                               <field name='CLEAN_FILES'>
             <value>/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/build/libarsdkgen/libarsdkgen-arsdkgen.done</value>
         </field>
                                                                                                          <field name='EXPORT_C_INCLUDES'>
             <value>/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/build/libarsdkgen/gen</value>
         </field>
                      <field name='EXPORT_PREREQUISITES'>
             <value>/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/build/libarsdkgen/gen/arsdk_ids.h /home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/build/libarsdkgen/gen/arsdk_enums.h /home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/build/libarsdkgen/gen/arsdk_cmd_desc.h /home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/build/libarsdkgen/gen/arsdk_cmd_desc.c /home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/build/libarsdkgen/gen/arsdk_cmd_dec.h /home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/build/libarsdkgen/gen/arsdk_cmd_dec.c /home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/build/libarsdkgen/gen/arsdk_cmd_enc.h /home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/build/libarsdkgen/gen/arsdk_cmd_enc.c /home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/build/libarsdkgen/gen/arsdk_cmd_send.h</value>
         </field>
                   <field name='MODULE_CLASS'>
             <value>STATIC_LIBRARY</value>
         </field>
                                                                                                    <field name='DESTDIR'>
             <value>usr/lib</value>
         </field>
                <field name='REVISION'>
             <value>da8ebf5394f837809bdbdfb503baa23f714b7763</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>da8ebf5</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/arsdk-ng</value>
         </field>
                                                             </module>
        <module name='libfutils' build='yes'>
           <field name='depends'>
             <value>libulog libulog</value>
         </field>
                      <field name='depends.STATIC_LIBRARIES'>
             <value>libulog</value>
         </field>
                         <field name='depends.all'>
             <value>libulog</value>
         </field>
             <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/libfutils</value>
         </field>
             <field name='MODULE'>
             <value>libfutils</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>libfutils.a</value>
         </field>
             <field name='DESCRIPTION'>
             <value>c utility functions</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>libs</value>
         </field>
                      <field name='SRC_FILES'>
             <value>src/hash.c src/mbox.c src/systimetools.c src/timetools.c src/random.c src/varint.c src/inotify.c src/fdutils.c src/fs.c src/safew.c src/synctools.c</value>
         </field>
                <field name='STATIC_LIBRARIES'>
             <value>libulog libulog</value>
         </field>
                                                          <field name='LIBRARIES'>
             <value>libulog libulog</value>
         </field>
                <field name='PRIVATE_LIBRARIES'>
             <value>libulog</value>
         </field>
                <field name='CONDITIONAL_LIBRARIES'>
             <value>OPTIONAL:libputils OPTIONAL:libputils</value>
         </field>
                <field name='CONDITIONAL_PRIVATE_LIBRARIES'>
             <value>OPTIONAL:libputils</value>
         </field>
                               <field name='CFLAGS'>
             <value>-D_FILE_OFFSET_BITS=64</value>
         </field>
                                                                                                                                                                   <field name='EXPORT_C_INCLUDES'>
             <value>/home/marlin/groundsdk/packages/common/libfutils/include</value>
         </field>
                               <field name='MODULE_CLASS'>
             <value>STATIC_LIBRARY</value>
         </field>
                                                                                                    <field name='DESTDIR'>
             <value>usr/lib</value>
         </field>
                <field name='REVISION'>
             <value>c326ce0cc2a7354381265a7664bb215be587fac6</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>c326ce0</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/libfutils</value>
         </field>
                                                             </module>
        <module name='libh264' build='yes'>
           <field name='depends'>
             <value>libulog json</value>
         </field>
                   <field name='depends.EXTERNAL_LIBRARIES'>
             <value>json</value>
         </field>
             <field name='depends.STATIC_LIBRARIES'>
             <value>libulog</value>
         </field>
                         <field name='depends.all'>
             <value>libulog json</value>
         </field>
             <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/libh264</value>
         </field>
             <field name='MODULE'>
             <value>libh264</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>libh264.a</value>
         </field>
             <field name='DESCRIPTION'>
             <value>H.264 bitstream reader/writer library</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>libs</value>
         </field>
                      <field name='SRC_FILES'>
             <value>src/h264.c src/h264_bac.c src/h264_bitstream.c src/h264_cabac.c src/h264_cabac_ctx_tables.c src/h264_ctx.c src/h264_dump.c src/h264_fmo.c src/h264_macroblock.c src/h264_reader.c src/h264_slice_data.c src/h264_types.c src/h264_writer.c</value>
         </field>
                <field name='STATIC_LIBRARIES'>
             <value>libulog</value>
         </field>
                                     <field name='EXTERNAL_LIBRARIES'>
             <value>json</value>
         </field>
                               <field name='LIBRARIES'>
             <value>json libulog</value>
         </field>
                                                 <field name='CFLAGS'>
             <value>-DH264_API_EXPORTS -fvisibility=hidden -std=gnu99</value>
         </field>
                                                                                                                                                                   <field name='EXPORT_C_INCLUDES'>
             <value>/home/marlin/groundsdk/packages/common/libh264/include</value>
         </field>
                               <field name='MODULE_CLASS'>
             <value>STATIC_LIBRARY</value>
         </field>
                                                                                                    <field name='DESTDIR'>
             <value>usr/lib</value>
         </field>
                <field name='REVISION'>
             <value>1f8f14b645a569304951270d19c7c4a24629c9a8</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>1f8f14b</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/libh264</value>
         </field>
                                                             </module>
        <module name='liblog2gutma' build='yes'>
           <field name='depends'>
             <value>libfutils liblogextract libulog json</value>
         </field>
                   <field name='depends.EXTERNAL_LIBRARIES'>
             <value>json liblogger-headers liblz4</value>
         </field>
             <field name='depends.STATIC_LIBRARIES'>
             <value>liblogextract libfutils libulog</value>
         </field>
                         <field name='depends.all'>
             <value>liblogextract json libfutils liblogger-headers liblz4 libulog</value>
         </field>
             <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/logger/liblog2gutma</value>
         </field>
             <field name='MODULE'>
             <value>liblog2gutma</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>liblog2gutma.a</value>
         </field>
             <field name='DESCRIPTION'>
             <value>library to convert log files to gutma format</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>liblog2gutma</value>
         </field>
                      <field name='SRC_FILES'>
             <value>src/log2gutma.cpp src/sections.cpp src/wrappers.cpp</value>
         </field>
                <field name='STATIC_LIBRARIES'>
             <value>libfutils liblogextract libulog</value>
         </field>
                                     <field name='EXTERNAL_LIBRARIES'>
             <value>json</value>
         </field>
                               <field name='LIBRARIES'>
             <value>json libfutils liblogextract libulog</value>
         </field>
                                                                                                                                                                                                          <field name='EXPORT_C_INCLUDES'>
             <value>/home/marlin/groundsdk/packages/common/logger/liblog2gutma/include</value>
         </field>
                <field name='EXPORT_CXXFLAGS'>
             <value>-std=c++11 -D__STDC_FORMAT_MACROS</value>
         </field>
                         <field name='MODULE_CLASS'>
             <value>STATIC_LIBRARY</value>
         </field>
                                                                                                    <field name='DESTDIR'>
             <value>usr/lib</value>
         </field>
                <field name='REVISION'>
             <value>72fb80c027f4c022b73ac890beba1aa226927489</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>72fb80c</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/logger</value>
         </field>
                                                             </module>
        <module name='liblogextract' build='yes'>
           <field name='depends'>
             <value>libulog libfutils liblogger-headers liblz4</value>
         </field>
                   <field name='depends.EXTERNAL_LIBRARIES'>
             <value>liblogger-headers liblz4</value>
         </field>
             <field name='depends.STATIC_LIBRARIES'>
             <value>libfutils libulog</value>
         </field>
                         <field name='depends.all'>
             <value>libfutils liblogger-headers liblz4 libulog</value>
         </field>
             <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/logger/liblogextract</value>
         </field>
             <field name='MODULE'>
             <value>liblogextract</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>liblogextract.a</value>
         </field>
             <field name='DESCRIPTION'>
             <value>library to process log file extraction</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>liblogextract</value>
         </field>
                      <field name='SRC_FILES'>
             <value>src/logger_file_reader.cpp src/event_data_source.cpp src/telemetry_data_source.cpp</value>
         </field>
                <field name='STATIC_LIBRARIES'>
             <value>libulog libfutils</value>
         </field>
                                     <field name='EXTERNAL_LIBRARIES'>
             <value>liblogger-headers liblz4</value>
         </field>
                               <field name='LIBRARIES'>
             <value>liblogger-headers liblz4 libulog libfutils</value>
         </field>
                                                                                                                                                                                                          <field name='EXPORT_C_INCLUDES'>
             <value>/home/marlin/groundsdk/packages/common/logger/liblogextract/include</value>
         </field>
                <field name='EXPORT_CXXFLAGS'>
             <value>-std=c++11 -D__STDC_FORMAT_MACROS</value>
         </field>
                         <field name='MODULE_CLASS'>
             <value>STATIC_LIBRARY</value>
         </field>
                                                                                                    <field name='DESTDIR'>
             <value>usr/lib</value>
         </field>
                <field name='REVISION'>
             <value>72fb80c027f4c022b73ac890beba1aa226927489</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>72fb80c</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/logger</value>
         </field>
                                                             </module>
        <module name='liblogger' build='no'>
           <field name='depends'>
             <value>libfutils libloghdr libpomp libfutils libulog libcrypto liblz4 liblogger-headers</value>
         </field>
                   <field name='depends.EXTERNAL_LIBRARIES'>
             <value>libcrypto liblz4 liblogger-headers libloghdr-header</value>
         </field>
             <field name='depends.STATIC_LIBRARIES'>
             <value>libloghdr libpomp libfutils libulog</value>
         </field>
                         <field name='depends.all'>
             <value>libloghdr libpomp libfutils libcrypto liblz4 liblogger-headers libloghdr-header libulog</value>
         </field>
             <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/logger/liblogger</value>
         </field>
             <field name='MODULE'>
             <value>liblogger</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>liblogger.a</value>
         </field>
             <field name='DESCRIPTION'>
             <value>Logger library</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>liblogger</value>
         </field>
                      <field name='SRC_FILES'>
             <value>liblogger.cpp buffer.cpp backend-file.cpp frontend.cpp plugin.cpp source.cpp</value>
         </field>
                <field name='STATIC_LIBRARIES'>
             <value>libfutils libloghdr libpomp libfutils libulog</value>
         </field>
                                     <field name='EXTERNAL_LIBRARIES'>
             <value>libcrypto liblz4 liblogger-headers</value>
         </field>
                               <field name='LIBRARIES'>
             <value>libcrypto libfutils libloghdr liblz4 libpomp libfutils libulog liblogger-headers</value>
         </field>
                                                                         <field name='LDLIBS'>
             <value>-ldl</value>
         </field>
                                                                                                                                                 <field name='EXPORT_CXXFLAGS'>
             <value>-std=c++11 -D__STDC_FORMAT_MACROS</value>
         </field>
             <field name='EXPORT_LDLIBS'>
             <value>-ldl</value>
         </field>
                      <field name='MODULE_CLASS'>
             <value>STATIC_LIBRARY</value>
         </field>
                                                                                                    <field name='DESTDIR'>
             <value>usr/lib</value>
         </field>
                <field name='REVISION'>
             <value>72fb80c027f4c022b73ac890beba1aa226927489</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>72fb80c</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/logger</value>
         </field>
                                                             </module>
        <module name='liblogger-headers' build='yes'>
                                         <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/logger/liblogger</value>
         </field>
             <field name='MODULE'>
             <value>liblogger-headers</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>liblogger-headers.done</value>
         </field>
                                                                                                                                                                                                                                                                                  <field name='EXPORT_C_INCLUDES'>
             <value>/home/marlin/groundsdk/packages/common/logger/liblogger/include</value>
         </field>
                               <field name='MODULE_CLASS'>
             <value>CUSTOM</value>
         </field>
                                                                                                          <field name='REVISION'>
             <value>72fb80c027f4c022b73ac890beba1aa226927489</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>72fb80c</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/logger</value>
         </field>
                                                             </module>
        <module name='libloghdr' build='no'>
           <field name='depends'>
             <value>libulog liblogger-headers libloghdr-header</value>
         </field>
                   <field name='depends.EXTERNAL_LIBRARIES'>
             <value>liblogger-headers libloghdr-header</value>
         </field>
             <field name='depends.STATIC_LIBRARIES'>
             <value>libulog</value>
         </field>
                         <field name='depends.all'>
             <value>libulog liblogger-headers libloghdr-header</value>
         </field>
             <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/logger/libloghdr</value>
         </field>
             <field name='MODULE'>
             <value>libloghdr</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>libloghdr.a</value>
         </field>
             <field name='DESCRIPTION'>
             <value>Extract and parse log header</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>libloghdr</value>
         </field>
                      <field name='SRC_FILES'>
             <value>libloghdr.cpp</value>
         </field>
                <field name='STATIC_LIBRARIES'>
             <value>libulog</value>
         </field>
                                     <field name='EXTERNAL_LIBRARIES'>
             <value>liblogger-headers libloghdr-header</value>
         </field>
                               <field name='LIBRARIES'>
             <value>liblogger-headers libloghdr-header libulog</value>
         </field>
                                                    <field name='CXXFLAGS'>
             <value>-std=c++11</value>
         </field>
                                                                                                                                                                                     <field name='MODULE_CLASS'>
             <value>STATIC_LIBRARY</value>
         </field>
                                                                                                    <field name='DESTDIR'>
             <value>usr/lib</value>
         </field>
                <field name='REVISION'>
             <value>72fb80c027f4c022b73ac890beba1aa226927489</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>72fb80c</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/logger</value>
         </field>
                                                             </module>
        <module name='libloghdr-header' build='no'>
                                         <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/logger/libloghdr</value>
         </field>
             <field name='MODULE'>
             <value>libloghdr-header</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>libloghdr-header.done</value>
         </field>
                                                                                                                                                                                                                                                                                  <field name='EXPORT_C_INCLUDES'>
             <value>/home/marlin/groundsdk/packages/common/logger/libloghdr/include</value>
         </field>
                               <field name='MODULE_CLASS'>
             <value>CUSTOM</value>
         </field>
                                                                                                          <field name='REVISION'>
             <value>72fb80c027f4c022b73ac890beba1aa226927489</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>72fb80c</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/logger</value>
         </field>
                                                             </module>
        <module name='liblz4' build='yes'>
                                         <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/lz4</value>
         </field>
             <field name='MODULE'>
             <value>liblz4</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>liblz4.done</value>
         </field>
             <field name='DESCRIPTION'>
             <value>Extremely Fast Compression algorithm</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>libs</value>
         </field>
             <field name='DONE_FILES'>
             <value>liblz4.done</value>
         </field>
                                                                                                                                                                                  <field name='ARCHIVE'>
             <value>lz4-r131.tar.gz</value>
         </field>
             <field name='ARCHIVE_VERSION'>
             <value>r131</value>
         </field>
             <field name='ARCHIVE_SUBDIR'>
             <value>lz4-r131</value>
         </field>
             <field name='ARCHIVE_PATCHES'>
             <value>cmake.patch 0001-android_avoid_so_version.patch</value>
         </field>
                                                                                                 <field name='EXPORT_LDLIBS'>
             <value>-llz4</value>
         </field>
                      <field name='MODULE_CLASS'>
             <value>CMAKE</value>
         </field>
                                                                                                          <field name='REVISION'>
             <value>1114967101628f3a6995d56a7aa0881f90d5135c</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>1114967</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/lz4</value>
         </field>
                                  <field name='ARCHIVE_CMD_POST_UNPACK'>
             <value>	$(Q) cp -af $(PRIVATE_PATH)/.MODULE_LICENSE_GPL.programs $(PRIVATE_SRC_DIR)/programs/.MODULE_LICENSE_GPL</value>
         </field>
                                     </module>
        <module name='libmediacodec-wrapper' build='yes'>
           <field name='depends'>
             <value>libulog</value>
         </field>
                      <field name='depends.STATIC_LIBRARIES'>
             <value>libulog</value>
         </field>
                         <field name='depends.all'>
             <value>libulog</value>
         </field>
             <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/libmediacodec-wrapper</value>
         </field>
             <field name='MODULE'>
             <value>libmediacodec-wrapper</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>libmediacodec-wrapper.a</value>
         </field>
             <field name='DESCRIPTION'>
             <value>Android MediaCodec API wrapper library</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>libs</value>
         </field>
                      <field name='SRC_FILES'>
             <value>src/mcw.c src/mcw_jni.c src/mcw_ndk.c</value>
         </field>
                <field name='STATIC_LIBRARIES'>
             <value>libulog</value>
         </field>
                                                          <field name='LIBRARIES'>
             <value>libulog</value>
         </field>
                                                 <field name='CFLAGS'>
             <value>-DMCW_API_EXPORTS -fvisibility=hidden -std=gnu99</value>
         </field>
                                                                                                                                                                   <field name='EXPORT_C_INCLUDES'>
             <value>/home/marlin/groundsdk/packages/common/libmediacodec-wrapper/include</value>
         </field>
                               <field name='MODULE_CLASS'>
             <value>STATIC_LIBRARY</value>
         </field>
                                                                                                    <field name='DESTDIR'>
             <value>usr/lib</value>
         </field>
                <field name='REVISION'>
             <value>4146384997d8cd1c24f11d079e3651352ad7d57e</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>4146384</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/libmediacodec-wrapper</value>
         </field>
                                                             </module>
        <module name='libmp4' build='yes'>
           <field name='depends'>
             <value>libfutils libulog</value>
         </field>
                      <field name='depends.STATIC_LIBRARIES'>
             <value>libfutils libulog</value>
         </field>
                         <field name='depends.all'>
             <value>libfutils libulog</value>
         </field>
             <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/libmp4</value>
         </field>
             <field name='MODULE'>
             <value>libmp4</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>libmp4.a</value>
         </field>
             <field name='DESCRIPTION'>
             <value>MP4 file library</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>libs</value>
         </field>
                      <field name='SRC_FILES'>
             <value>src/mp4.c src/mp4_box.c src/mp4_demux.c src/mp4_track.c</value>
         </field>
                <field name='STATIC_LIBRARIES'>
             <value>libfutils libulog</value>
         </field>
                                                          <field name='LIBRARIES'>
             <value>libfutils libulog</value>
         </field>
                                                 <field name='CFLAGS'>
             <value>-DMP4_API_EXPORTS -fvisibility=hidden -std=gnu99</value>
         </field>
                                                                                                                                                                   <field name='EXPORT_C_INCLUDES'>
             <value>/home/marlin/groundsdk/packages/common/libmp4/include</value>
         </field>
                               <field name='MODULE_CLASS'>
             <value>STATIC_LIBRARY</value>
         </field>
                                                                                                    <field name='DESTDIR'>
             <value>usr/lib</value>
         </field>
                <field name='REVISION'>
             <value>fcdb94c17e5a3c08c3fbd0f7f6af76cae55981b8</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>fcdb94c</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/libmp4</value>
         </field>
                                                             </module>
        <module name='libmux' build='yes'>
           <field name='depends'>
             <value>libpomp libfutils libulog</value>
         </field>
                      <field name='depends.STATIC_LIBRARIES'>
             <value>libpomp libfutils libulog</value>
         </field>
                         <field name='depends.all'>
             <value>libpomp libfutils libulog</value>
         </field>
             <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/libmux</value>
         </field>
             <field name='MODULE'>
             <value>libmux</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>libmux.a</value>
         </field>
                            <field name='SRC_FILES'>
             <value>src/mux.c src/mux_channel.c src/mux_log.c src/mux_queue.c src/mux_ip_proxy.c</value>
         </field>
                <field name='STATIC_LIBRARIES'>
             <value>libpomp libfutils libulog</value>
         </field>
                                                          <field name='LIBRARIES'>
             <value>libpomp libfutils libulog</value>
         </field>
                      <field name='CONDITIONAL_LIBRARIES'>
             <value>OPTIONAL:libulog</value>
         </field>
                                     <field name='CFLAGS'>
             <value>-DMUX_API_EXPORTS -fvisibility=hidden</value>
         </field>
                                                                                                                                                                   <field name='EXPORT_C_INCLUDES'>
             <value>/home/marlin/groundsdk/packages/common/libmux/include/</value>
         </field>
                               <field name='MODULE_CLASS'>
             <value>STATIC_LIBRARY</value>
         </field>
                                                                                                    <field name='DESTDIR'>
             <value>usr/lib</value>
         </field>
                <field name='REVISION'>
             <value>eb845ce70109c41e5fd013b37949719668368ecb</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>eb845ce</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/libmux</value>
         </field>
                                                             </module>
        <module name='libpdraw' build='yes'>
           <field name='depends'>
             <value>libfutils libh264 libmp4 libpomp librtsp libsdp libulog libvideo-buffers libvideo-buffers-generic libvideo-decode libvideo-metadata libvideo-streaming libmux eigen json</value>
         </field>
                   <field name='depends.EXTERNAL_LIBRARIES'>
             <value>eigen json</value>
         </field>
             <field name='depends.STATIC_LIBRARIES'>
             <value>libmp4 librtsp libsdp libvideo-decode libvideo-streaming libmux libmediacodec-wrapper libvideo-buffers-generic libvideo-buffers libh264 librtp libvideo-metadata libpomp libfutils libulog</value>
         </field>
                         <field name='depends.all'>
             <value>libmp4 librtsp libsdp libvideo-decode libvideo-streaming libmux eigen libmediacodec-wrapper libvideo-buffers-generic libvideo-buffers libh264 librtp libvideo-metadata json libpomp libfutils libulog</value>
         </field>
             <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/pdraw/libpdraw</value>
         </field>
             <field name='MODULE'>
             <value>libpdraw</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>libpdraw.a</value>
         </field>
             <field name='DESCRIPTION'>
             <value>Parrot Drones Awesome Video Viewer library</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>libs</value>
         </field>
                      <field name='SRC_FILES'>
             <value>src/pdraw_avcdecoder.cpp src/pdraw_channel.cpp src/pdraw_demuxer_record.cpp src/pdraw_demuxer_stream.cpp src/pdraw_demuxer_stream_mux.cpp src/pdraw_demuxer_stream_net.cpp src/pdraw_element.cpp src/pdraw_gles2_hmd.cpp src/pdraw_gles2_hmd_colors.cpp src/pdraw_gles2_hmd_indices.cpp src/pdraw_gles2_hmd_positions_cockpitglasses.cpp src/pdraw_gles2_hmd_positions_cockpitglasses2.cpp src/pdraw_gles2_hmd_shaders.cpp src/pdraw_gles2_hmd_texcoords.cpp src/pdraw_gles2_hmd_texcoords_cockpitglasses_blue.cpp src/pdraw_gles2_hmd_texcoords_cockpitglasses_red.cpp src/pdraw_gles2_video.cpp src/pdraw_media.cpp src/pdraw_metadata_session.cpp src/pdraw_renderer.cpp src/pdraw_renderer_gles2.cpp src/pdraw_renderer_videocoreegl.cpp src/pdraw_session.cpp src/pdraw_settings.cpp src/pdraw_sink.cpp src/pdraw_sink_video.cpp src/pdraw_socket_inet.cpp src/pdraw_source.cpp src/pdraw_utils.cpp src/pdraw_wrapper.cpp</value>
         </field>
                <field name='STATIC_LIBRARIES'>
             <value>libfutils libh264 libmp4 libpomp librtsp libsdp libulog libvideo-buffers libvideo-buffers-generic libvideo-decode libvideo-metadata libvideo-streaming libmux</value>
         </field>
                                     <field name='EXTERNAL_LIBRARIES'>
             <value>eigen json</value>
         </field>
                               <field name='LIBRARIES'>
             <value>eigen libfutils libh264 libmp4 libpomp librtsp libsdp libulog libvideo-buffers libvideo-buffers-generic libvideo-decode libvideo-metadata libvideo-streaming json libmux</value>
         </field>
                      <field name='CONDITIONAL_LIBRARIES'>
             <value>OPTIONAL:json OPTIONAL:libmux</value>
         </field>
                                     <field name='CFLAGS'>
             <value>-DPDRAW_API_EXPORTS -fvisibility=hidden -D_USE_MATH_DEFINES -DUSE_GLES2</value>
         </field>
                                  <field name='LDLIBS'>
             <value>-lEGL -lGLESv2 -landroid</value>
         </field>
                                                                                                                                           <field name='EXPORT_C_INCLUDES'>
             <value>/home/marlin/groundsdk/packages/pdraw/libpdraw/include</value>
         </field>
                <field name='EXPORT_CXXFLAGS'>
             <value>-std=c++11</value>
         </field>
             <field name='EXPORT_LDLIBS'>
             <value>-lEGL -lGLESv2 -landroid</value>
         </field>
                <field name='EXPORT_CUSTOM_VARIABLES'>
             <value>LIBPDRAW_HEADERS=/home/marlin/groundsdk/packages/pdraw/libpdraw/include/pdraw/pdraw.h:/home/marlin/groundsdk/packages/pdraw/libpdraw/include/pdraw/pdraw_defs.h;;</value>
         </field>
                <field name='MODULE_CLASS'>
             <value>STATIC_LIBRARY</value>
         </field>
                                                                                                    <field name='DESTDIR'>
             <value>usr/lib</value>
         </field>
                <field name='REVISION'>
             <value>75757183c7f4dfc0bf8886e17a94b4599550b8de</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>7575718</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/pdraw</value>
         </field>
                                                             </module>
        <module name='libpdraw-backend' build='no'>
           <field name='depends'>
             <value>libfutils libpdraw libpomp libulog</value>
         </field>
                   <field name='depends.EXTERNAL_LIBRARIES'>
             <value>eigen json</value>
         </field>
             <field name='depends.STATIC_LIBRARIES'>
             <value>libpdraw libmp4 librtsp libsdp libvideo-decode libvideo-streaming libmux libmediacodec-wrapper libvideo-buffers-generic libvideo-buffers libh264 librtp libvideo-metadata libpomp libfutils libulog</value>
         </field>
                         <field name='depends.all'>
             <value>libpdraw libmp4 librtsp libsdp libvideo-decode libvideo-streaming libmux eigen libmediacodec-wrapper libvideo-buffers-generic libvideo-buffers libh264 librtp libvideo-metadata json libpomp libfutils libulog</value>
         </field>
             <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/pdraw/libpdraw-backend</value>
         </field>
             <field name='MODULE'>
             <value>libpdraw-backend</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>libpdraw-backend.a</value>
         </field>
             <field name='DESCRIPTION'>
             <value>Parrot Drones Awesome Video Viewer back-end library</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>libs</value>
         </field>
                      <field name='SRC_FILES'>
             <value>src/pdraw_backend_impl.cpp src/pdraw_backend_wrapper.cpp</value>
         </field>
                <field name='STATIC_LIBRARIES'>
             <value>libfutils libpdraw libpomp libulog</value>
         </field>
                                                          <field name='LIBRARIES'>
             <value>libfutils libpdraw libpomp libulog</value>
         </field>
                                                 <field name='CFLAGS'>
             <value>-DPDRAW_BACKEND_API_EXPORTS -fvisibility=hidden -std=gnu99</value>
         </field>
                                                                                                                                                                   <field name='EXPORT_C_INCLUDES'>
             <value>/home/marlin/groundsdk/packages/pdraw/libpdraw-backend/include</value>
         </field>
                               <field name='MODULE_CLASS'>
             <value>STATIC_LIBRARY</value>
         </field>
                                                                                                    <field name='DESTDIR'>
             <value>usr/lib</value>
         </field>
                <field name='REVISION'>
             <value>75757183c7f4dfc0bf8886e17a94b4599550b8de</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>7575718</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/pdraw</value>
         </field>
                                                             </module>
        <module name='libpdraw-gles2hud' build='no'>
           <field name='depends'>
             <value>libpdraw libulog libvideo-metadata eigen</value>
         </field>
                   <field name='depends.EXTERNAL_LIBRARIES'>
             <value>eigen json</value>
         </field>
             <field name='depends.STATIC_LIBRARIES'>
             <value>libpdraw libmp4 librtsp libsdp libvideo-decode libvideo-streaming libmux libmediacodec-wrapper libvideo-buffers-generic libvideo-buffers libh264 librtp libvideo-metadata libpomp libfutils libulog</value>
         </field>
                         <field name='depends.all'>
             <value>libpdraw libmp4 librtsp libsdp libvideo-decode libvideo-streaming libmux eigen libmediacodec-wrapper libvideo-buffers-generic libvideo-buffers libh264 librtp libvideo-metadata libpomp libfutils json libulog</value>
         </field>
             <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/pdraw/libpdraw-gles2hud</value>
         </field>
             <field name='MODULE'>
             <value>libpdraw-gles2hud</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>libpdraw-gles2hud.a</value>
         </field>
             <field name='DESCRIPTION'>
             <value>Parrot Drones Awesome Video Viewer OpenGL ES 2.0 HUD rendering library</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>libs</value>
         </field>
                      <field name='SRC_FILES'>
             <value>src/pdraw_gles2hud.cpp src/pdraw_gles2hud_icons.cpp src/pdraw_gles2hud_icons_data.cpp src/pdraw_gles2hud_instruments.cpp src/pdraw_gles2hud_shaders.cpp src/pdraw_gles2hud_shapes.cpp src/pdraw_gles2hud_text.cpp src/pdraw_gles2hud_text_profont36.cpp</value>
         </field>
                <field name='STATIC_LIBRARIES'>
             <value>libpdraw libulog libvideo-metadata</value>
         </field>
                                     <field name='EXTERNAL_LIBRARIES'>
             <value>eigen</value>
         </field>
                               <field name='LIBRARIES'>
             <value>eigen libpdraw libulog libvideo-metadata</value>
         </field>
                                                 <field name='CFLAGS'>
             <value>-DPDRAW_GLES2HUD_API_EXPORTS -fvisibility=hidden -std=gnu99 -D_USE_MATH_DEFINES</value>
         </field>
                                  <field name='LDLIBS'>
             <value>-lGLESv2</value>
         </field>
                                                                                                                                           <field name='EXPORT_C_INCLUDES'>
             <value>/home/marlin/groundsdk/packages/pdraw/libpdraw-gles2hud/include</value>
         </field>
                   <field name='EXPORT_LDLIBS'>
             <value>-lGLESv2</value>
         </field>
                      <field name='MODULE_CLASS'>
             <value>STATIC_LIBRARY</value>
         </field>
                                                                                                    <field name='DESTDIR'>
             <value>usr/lib</value>
         </field>
                <field name='REVISION'>
             <value>75757183c7f4dfc0bf8886e17a94b4599550b8de</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>7575718</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/pdraw</value>
         </field>
                                                             </module>
        <module name='libpdraw-vsink' build='no'>
           <field name='depends'>
             <value>libfutils libpdraw libpomp libulog libvideo-buffers libvideo-buffers-generic libvideo-metadata</value>
         </field>
                   <field name='depends.EXTERNAL_LIBRARIES'>
             <value>eigen json</value>
         </field>
             <field name='depends.STATIC_LIBRARIES'>
             <value>libpdraw libmp4 librtsp libsdp libvideo-decode libvideo-streaming libmux libmediacodec-wrapper libvideo-buffers-generic libh264 librtp libvideo-metadata libvideo-buffers libpomp libfutils libulog</value>
         </field>
                         <field name='depends.all'>
             <value>libpdraw libmp4 librtsp libsdp libvideo-decode libvideo-streaming libmux eigen libmediacodec-wrapper libvideo-buffers-generic libh264 librtp libvideo-metadata libvideo-buffers libpomp libfutils json libulog</value>
         </field>
             <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/pdraw/libpdraw-vsink</value>
         </field>
             <field name='MODULE'>
             <value>libpdraw-vsink</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>libpdraw-vsink.a</value>
         </field>
             <field name='DESCRIPTION'>
             <value>Parrot Drones Awesome Video Viewer video sink wrapper library</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>libs</value>
         </field>
                      <field name='SRC_FILES'>
             <value>src/pdraw_vsink.c</value>
         </field>
                <field name='STATIC_LIBRARIES'>
             <value>libfutils libpdraw libpomp libulog libvideo-buffers libvideo-buffers-generic libvideo-metadata</value>
         </field>
                                                          <field name='LIBRARIES'>
             <value>libfutils libpdraw libpomp libulog libvideo-buffers libvideo-buffers-generic libvideo-metadata</value>
         </field>
                                                 <field name='CFLAGS'>
             <value>-DPDRAW_VSINK_API_EXPORTS -fvisibility=hidden -std=gnu99</value>
         </field>
                                                                                                                                                                   <field name='EXPORT_C_INCLUDES'>
             <value>/home/marlin/groundsdk/packages/pdraw/libpdraw-vsink/include</value>
         </field>
                               <field name='MODULE_CLASS'>
             <value>STATIC_LIBRARY</value>
         </field>
                                                                                                    <field name='DESTDIR'>
             <value>usr/lib</value>
         </field>
                <field name='REVISION'>
             <value>75757183c7f4dfc0bf8886e17a94b4599550b8de</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>7575718</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/pdraw</value>
         </field>
                                                             </module>
        <module name='libpomp' build='yes'>
           <field name='depends'>
             <value>libulog libulog</value>
         </field>
                      <field name='depends.STATIC_LIBRARIES'>
             <value>libulog</value>
         </field>
                         <field name='depends.all'>
             <value>libulog</value>
         </field>
             <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/libpomp</value>
         </field>
             <field name='MODULE'>
             <value>libpomp</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>libpomp.a</value>
         </field>
             <field name='DESCRIPTION'>
             <value>Printf Oriented Message Protocol</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>libs</value>
         </field>
                      <field name='SRC_FILES'>
             <value>src/pomp_addr.c src/pomp_buffer.c src/pomp_conn.c src/pomp_ctx.c src/pomp_decoder.c src/pomp_encoder.c src/pomp_evt.c src/pomp_log.c src/pomp_loop.c src/pomp_msg.c src/pomp_prot.c src/pomp_timer.c src/pomp_watchdog.c</value>
         </field>
                <field name='STATIC_LIBRARIES'>
             <value>libulog libulog</value>
         </field>
                                                          <field name='LIBRARIES'>
             <value>libulog libulog</value>
         </field>
                      <field name='CONDITIONAL_LIBRARIES'>
             <value>OPTIONAL:libulog OPTIONAL:libulog</value>
         </field>
                <field name='CONDITIONAL_PRIVATE_LIBRARIES'>
             <value>OPTIONAL:libulog</value>
         </field>
                               <field name='CFLAGS'>
             <value>-fvisibility=hidden -DPOMP_API_EXPORTS</value>
         </field>
                                  <field name='LDLIBS'>
             <value>-llog</value>
         </field>
                                                                                                                                           <field name='EXPORT_C_INCLUDES'>
             <value>/home/marlin/groundsdk/packages/common/libpomp/include</value>
         </field>
                   <field name='EXPORT_LDLIBS'>
             <value>-llog</value>
         </field>
                <field name='EXPORT_CUSTOM_VARIABLES'>
             <value>LIBPOMP_HEADERS=/home/marlin/groundsdk/packages/common/libpomp/include/libpomp.h;;</value>
         </field>
                <field name='MODULE_CLASS'>
             <value>STATIC_LIBRARY</value>
         </field>
                               <field name='DOXYFILE'>
             <value>Doxyfile</value>
         </field>
                                                                               <field name='DESTDIR'>
             <value>usr/lib</value>
         </field>
                <field name='REVISION'>
             <value>92792ab5ea7f477534428473b35916acd2f035f5</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>92792ab</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/libpomp</value>
         </field>
                                                             </module>
        <module name='libpomp-py' build='no'>
           <field name='depends'>
             <value>libpomp python</value>
         </field>
                      <field name='depends.STATIC_LIBRARIES'>
             <value>libpomp libulog</value>
         </field>
                         <field name='depends.all'>
             <value>libpomp python libulog</value>
         </field>
             <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/libpomp</value>
         </field>
             <field name='MODULE'>
             <value>libpomp-py</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>libpomp-py.done</value>
         </field>
             <field name='DESCRIPTION'>
             <value>Python binding for libpomp</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>libs</value>
         </field>
                   <field name='CUSTOM_MACROS'>
             <value>pybinding-macro:libpomp,libpomp,/home/marlin/groundsdk/packages/common/libpomp/include/libpomp.h,/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/libpomp.so</value>
         </field>
                   <field name='STATIC_LIBRARIES'>
             <value>libpomp</value>
         </field>
                                                          <field name='LIBRARIES'>
             <value>libpomp</value>
         </field>
                                     <field name='DEPENDS_MODULES'>
             <value>python</value>
         </field>
             <field name='DEPENDS_HOST_MODULES'>
             <value>host.pybinding</value>
         </field>
                                                                            <field name='CLEAN_FILES'>
             <value>/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/build/libpomp-py/libpomp.py</value>
         </field>
                                                                                                                               <field name='MODULE_CLASS'>
             <value>CUSTOM</value>
         </field>
             <field name='COPY_FILES'>
             <value>/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/build/libpomp-py/libpomp.py:usr/lib/python/site-packages/</value>
         </field>
                                                                                                       <field name='REVISION'>
             <value>92792ab5ea7f477534428473b35916acd2f035f5</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>92792ab</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/libpomp</value>
         </field>
                                                             </module>
        <module name='libpomp-vala' build='no'>
                                         <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/libpomp</value>
         </field>
             <field name='MODULE'>
             <value>libpomp-vala</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>libpomp-vala.done</value>
         </field>
             <field name='DESCRIPTION'>
             <value>Vala binding for libpomp</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>libs</value>
         </field>
                                                                                                                                                                                                                                                                                        <field name='EXPORT_PREREQUISITES'>
             <value>/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/share/vala/vapi/libpomp.vapi</value>
         </field>
                   <field name='MODULE_CLASS'>
             <value>CUSTOM</value>
         </field>
             <field name='COPY_FILES'>
             <value>libpomp.vapi:usr/share/vala/vapi/</value>
         </field>
                   <field name='INSTALL_HEADERS'>
             <value>libpomp.vapi:usr/share/vala/vapi/</value>
         </field>
                                                                                              <field name='REVISION'>
             <value>92792ab5ea7f477534428473b35916acd2f035f5</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>92792ab</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/libpomp</value>
         </field>
                                                             </module>
        <module name='libpuf' build='yes'>
           <field name='depends'>
             <value>libulog zlib libtar</value>
         </field>
                <field name='depends.PREBUILT_LIBRARIES'>
             <value>zlib</value>
         </field>
             <field name='depends.EXTERNAL_LIBRARIES'>
             <value>libtar</value>
         </field>
             <field name='depends.STATIC_LIBRARIES'>
             <value>libulog</value>
         </field>
                         <field name='depends.all'>
             <value>libulog zlib libtar</value>
         </field>
             <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/libpuf</value>
         </field>
             <field name='MODULE'>
             <value>libpuf</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>libpuf.a</value>
         </field>
             <field name='DESCRIPTION'>
             <value>Helper library for accessing parrot firmware files</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>libs</value>
         </field>
                      <field name='SRC_FILES'>
             <value>src/libpuf.c src/libpuf_plf.c src/libpuf_tar.c</value>
         </field>
                <field name='STATIC_LIBRARIES'>
             <value>libulog</value>
         </field>
                                     <field name='EXTERNAL_LIBRARIES'>
             <value>libtar</value>
         </field>
                   <field name='PREBUILT_LIBRARIES'>
             <value>zlib</value>
         </field>
                      <field name='LIBRARIES'>
             <value>zlib libtar libulog</value>
         </field>
                      <field name='CONDITIONAL_LIBRARIES'>
             <value>OPTIONAL:libplfng OPTIONAL:libulog</value>
         </field>
                                     <field name='CFLAGS'>
             <value>-fvisibility=hidden -std=gnu99</value>
         </field>
                                                                                                                                                                   <field name='EXPORT_C_INCLUDES'>
             <value>/home/marlin/groundsdk/packages/common/libpuf/include</value>
         </field>
                               <field name='MODULE_CLASS'>
             <value>STATIC_LIBRARY</value>
         </field>
                                                                                                    <field name='DESTDIR'>
             <value>usr/lib</value>
         </field>
                <field name='REVISION'>
             <value>a35ed88f49864d337c4077f20ac0a9117c5eef09</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>a35ed88</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/libpuf</value>
         </field>
                                                             </module>
        <module name='librtp' build='yes'>
           <field name='depends'>
             <value>libfutils libpomp libulog</value>
         </field>
                      <field name='depends.STATIC_LIBRARIES'>
             <value>libfutils libpomp libulog</value>
         </field>
                         <field name='depends.all'>
             <value>libfutils libpomp libulog</value>
         </field>
             <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/librtp</value>
         </field>
             <field name='MODULE'>
             <value>librtp</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>librtp.a</value>
         </field>
             <field name='DESCRIPTION'>
             <value>RTP (Real-time Transport Protocol) library</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>libs</value>
         </field>
                      <field name='SRC_FILES'>
             <value>src/rtcp_pkt.c src/rtp_jitter.c src/rtp_pkt.c</value>
         </field>
                <field name='STATIC_LIBRARIES'>
             <value>libfutils libpomp libulog</value>
         </field>
                                                          <field name='LIBRARIES'>
             <value>libfutils libpomp libulog</value>
         </field>
                                                 <field name='CFLAGS'>
             <value>-DRTP_API_EXPORTS -fvisibility=hidden -std=gnu99</value>
         </field>
                                                                                                                                                                   <field name='EXPORT_C_INCLUDES'>
             <value>/home/marlin/groundsdk/packages/common/librtp/include</value>
         </field>
                               <field name='MODULE_CLASS'>
             <value>STATIC_LIBRARY</value>
         </field>
                                                                                                    <field name='DESTDIR'>
             <value>usr/lib</value>
         </field>
                <field name='REVISION'>
             <value>bf391071f75243290341b506282675fe09eae18a</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>bf39107</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/librtp</value>
         </field>
                                                             </module>
        <module name='librtsp' build='yes'>
           <field name='depends'>
             <value>libfutils libpomp libulog</value>
         </field>
                      <field name='depends.STATIC_LIBRARIES'>
             <value>libfutils libpomp libulog</value>
         </field>
                         <field name='depends.all'>
             <value>libfutils libpomp libulog</value>
         </field>
             <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/librtsp</value>
         </field>
             <field name='MODULE'>
             <value>librtsp</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>librtsp.a</value>
         </field>
             <field name='DESCRIPTION'>
             <value>Real Time Streaming Protocol library</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>libs</value>
         </field>
                      <field name='SRC_FILES'>
             <value>src/rtsp.c src/rtsp_client.c src/rtsp_client_session.c src/rtsp_server.c src/rtsp_server_request.c src/rtsp_server_session.c</value>
         </field>
                <field name='STATIC_LIBRARIES'>
             <value>libfutils libpomp libulog</value>
         </field>
                                                          <field name='LIBRARIES'>
             <value>libfutils libpomp libulog</value>
         </field>
                                                 <field name='CFLAGS'>
             <value>-DRTSP_API_EXPORTS -fvisibility=hidden -std=gnu99</value>
         </field>
                                                                                                                                                                   <field name='EXPORT_C_INCLUDES'>
             <value>/home/marlin/groundsdk/packages/common/librtsp/include</value>
         </field>
                               <field name='MODULE_CLASS'>
             <value>STATIC_LIBRARY</value>
         </field>
                                                                                                    <field name='DESTDIR'>
             <value>usr/lib</value>
         </field>
                <field name='REVISION'>
             <value>8644e955557d4bc9660df47929e8d7fefb3bd0e7</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>8644e95</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/librtsp</value>
         </field>
                                                             </module>
        <module name='libsdp' build='yes'>
           <field name='depends'>
             <value>libfutils libulog</value>
         </field>
                      <field name='depends.STATIC_LIBRARIES'>
             <value>libfutils libulog</value>
         </field>
                         <field name='depends.all'>
             <value>libfutils libulog</value>
         </field>
             <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/libsdp</value>
         </field>
             <field name='MODULE'>
             <value>libsdp</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>libsdp.a</value>
         </field>
             <field name='DESCRIPTION'>
             <value>Session Description Protocol library</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>libs</value>
         </field>
                      <field name='SRC_FILES'>
             <value>src/sdp.c src/sdp_base64.c</value>
         </field>
                <field name='STATIC_LIBRARIES'>
             <value>libfutils libulog</value>
         </field>
                                                          <field name='LIBRARIES'>
             <value>libfutils libulog</value>
         </field>
                                                 <field name='CFLAGS'>
             <value>-DSDP_API_EXPORTS -fvisibility=hidden -std=gnu99</value>
         </field>
                                                                                                                                                                   <field name='EXPORT_C_INCLUDES'>
             <value>/home/marlin/groundsdk/packages/common/libsdp/include</value>
         </field>
                               <field name='MODULE_CLASS'>
             <value>STATIC_LIBRARY</value>
         </field>
                                                                                                    <field name='DESTDIR'>
             <value>usr/lib</value>
         </field>
                <field name='REVISION'>
             <value>2a294af9e1bcbdc58b0917d580cb583614b6cbfd</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>2a294af</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/libsdp</value>
         </field>
                                                             </module>
        <module name='libtar' build='yes'>
                                         <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/libtar</value>
         </field>
             <field name='MODULE'>
             <value>libtar</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>libtar.done</value>
         </field>
             <field name='DESCRIPTION'>
             <value>tar library</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>libs</value>
         </field>
             <field name='DONE_FILES'>
             <value>libtar.done</value>
         </field>
                                                                                                                                                                                                 <field name='AUTOTOOLS_CONFIGURE_ARGS'>
             <value>--without-zlib</value>
         </field>
                                                                                           <field name='EXPORT_LDLIBS'>
             <value>-ltar</value>
         </field>
             <field name='EXPORT_PREREQUISITES'>
             <value>/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/include/tar.h</value>
         </field>
                   <field name='MODULE_CLASS'>
             <value>AUTOTOOLS</value>
         </field>
             <field name='COPY_FILES'>
             <value>compat/tar.h:usr/include/tar.h</value>
         </field>
                   <field name='INSTALL_HEADERS'>
             <value>compat/tar.h:usr/include/tar.h</value>
         </field>
                                                                                              <field name='REVISION'>
             <value>da7b886f0af9742653a176006c782af75f2164dd</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>da7b886</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/libtar</value>
         </field>
                                                             </module>
        <module name='libulog' build='yes'>
                                         <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/ulog/libulog</value>
         </field>
             <field name='MODULE'>
             <value>libulog</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>libulog.a</value>
         </field>
             <field name='DESCRIPTION'>
             <value>A minimalistic logging library derived from Android logger</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>libs</value>
         </field>
                      <field name='SRC_FILES'>
             <value>ulog_read.c ulog_write.c ulog.cpp ulog_write_android.c ulog_write_bin.c ulog_write_raw.c</value>
         </field>
                                                                                                       <field name='CFLAGS'>
             <value>-fvisibility=hidden</value>
         </field>
                                  <field name='LDLIBS'>
             <value>-llog</value>
         </field>
                                                                                                                                           <field name='EXPORT_C_INCLUDES'>
             <value>/home/marlin/groundsdk/packages/common/ulog/libulog/include</value>
         </field>
                   <field name='EXPORT_LDLIBS'>
             <value>-llog</value>
         </field>
                <field name='EXPORT_CUSTOM_VARIABLES'>
             <value>LIBULOG_HEADERS=/home/marlin/groundsdk/packages/common/ulog/libulog/include/ulog.h:/home/marlin/groundsdk/packages/common/ulog/libulog/include/ulograw.h;;</value>
         </field>
                <field name='MODULE_CLASS'>
             <value>STATIC_LIBRARY</value>
         </field>
                                                                                                    <field name='DESTDIR'>
             <value>usr/lib</value>
         </field>
                <field name='REVISION'>
             <value>0389d243352255f6182326dccdae3d56dadc078f</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>0389d24</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/ulog</value>
         </field>
                                                             </module>
        <module name='libulog-glib' build='no'>
           <field name='depends'>
             <value>libulog libulog glib glib</value>
         </field>
                   <field name='depends.EXTERNAL_LIBRARIES'>
             <value>glib</value>
         </field>
             <field name='depends.STATIC_LIBRARIES'>
             <value>libulog</value>
         </field>
                         <field name='depends.all'>
             <value>libulog glib</value>
         </field>
             <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/ulog/libulog-redirect</value>
         </field>
             <field name='MODULE'>
             <value>libulog-glib</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>libulog-glib.a</value>
         </field>
             <field name='DESCRIPTION'>
             <value>Redirect glib logging to ulog</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>libs</value>
         </field>
                      <field name='SRC_FILES'>
             <value>ulog_glib.c</value>
         </field>
                <field name='STATIC_LIBRARIES'>
             <value>libulog libulog</value>
         </field>
                                     <field name='EXTERNAL_LIBRARIES'>
             <value>glib glib</value>
         </field>
                               <field name='LIBRARIES'>
             <value>libulog glib libulog glib</value>
         </field>
                <field name='PRIVATE_LIBRARIES'>
             <value>libulog glib</value>
         </field>
                                                                                                                                                                                                    <field name='EXPORT_C_INCLUDES'>
             <value>/home/marlin/groundsdk/packages/common/ulog/libulog-redirect/include</value>
         </field>
                               <field name='MODULE_CLASS'>
             <value>STATIC_LIBRARY</value>
         </field>
                                                                                                    <field name='DESTDIR'>
             <value>usr/lib</value>
         </field>
                <field name='REVISION'>
             <value>0389d243352255f6182326dccdae3d56dadc078f</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>0389d24</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/ulog</value>
         </field>
                                                             </module>
        <module name='libulog-gst' build='no'>
           <field name='depends'>
             <value>libulog libulog gstreamer gstreamer</value>
         </field>
                   <field name='depends.EXTERNAL_LIBRARIES'>
             <value>gstreamer</value>
         </field>
             <field name='depends.STATIC_LIBRARIES'>
             <value>libulog</value>
         </field>
                         <field name='depends.all'>
             <value>libulog gstreamer</value>
         </field>
             <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/ulog/libulog-redirect</value>
         </field>
             <field name='MODULE'>
             <value>libulog-gst</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>libulog-gst.a</value>
         </field>
             <field name='DESCRIPTION'>
             <value>Redirect gstreamer logging to ulog</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>libs</value>
         </field>
                      <field name='SRC_FILES'>
             <value>ulog_gst.c</value>
         </field>
                <field name='STATIC_LIBRARIES'>
             <value>libulog libulog</value>
         </field>
                                     <field name='EXTERNAL_LIBRARIES'>
             <value>gstreamer gstreamer</value>
         </field>
                               <field name='LIBRARIES'>
             <value>libulog gstreamer libulog gstreamer</value>
         </field>
                <field name='PRIVATE_LIBRARIES'>
             <value>libulog gstreamer</value>
         </field>
                                                                                                                                                                                                    <field name='EXPORT_C_INCLUDES'>
             <value>/home/marlin/groundsdk/packages/common/ulog/libulog-redirect/include</value>
         </field>
                               <field name='MODULE_CLASS'>
             <value>STATIC_LIBRARY</value>
         </field>
                                                                                                    <field name='DESTDIR'>
             <value>usr/lib</value>
         </field>
                <field name='REVISION'>
             <value>0389d243352255f6182326dccdae3d56dadc078f</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>0389d24</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/ulog</value>
         </field>
                                                             </module>
        <module name='libulog-obus' build='no'>
           <field name='depends'>
             <value>libulog libulog libobus libobus</value>
         </field>
                   <field name='depends.EXTERNAL_LIBRARIES'>
             <value>libobus</value>
         </field>
             <field name='depends.STATIC_LIBRARIES'>
             <value>libulog</value>
         </field>
                         <field name='depends.all'>
             <value>libulog libobus</value>
         </field>
             <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/ulog/libulog-redirect</value>
         </field>
             <field name='MODULE'>
             <value>libulog-obus</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>libulog-obus.a</value>
         </field>
             <field name='DESCRIPTION'>
             <value>Redirect obus logging to ulog</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>libs</value>
         </field>
                      <field name='SRC_FILES'>
             <value>ulog_obus.c</value>
         </field>
                <field name='STATIC_LIBRARIES'>
             <value>libulog libulog</value>
         </field>
                                     <field name='EXTERNAL_LIBRARIES'>
             <value>libobus libobus</value>
         </field>
                               <field name='LIBRARIES'>
             <value>libulog libobus libulog libobus</value>
         </field>
                <field name='PRIVATE_LIBRARIES'>
             <value>libulog libobus</value>
         </field>
                                                                                                                                                                                                    <field name='EXPORT_C_INCLUDES'>
             <value>/home/marlin/groundsdk/packages/common/ulog/libulog-redirect/include</value>
         </field>
                               <field name='MODULE_CLASS'>
             <value>STATIC_LIBRARY</value>
         </field>
                                                                                                    <field name='DESTDIR'>
             <value>usr/lib</value>
         </field>
                <field name='REVISION'>
             <value>0389d243352255f6182326dccdae3d56dadc078f</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>0389d24</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/ulog</value>
         </field>
                                                             </module>
        <module name='libulog-py' build='no'>
           <field name='depends'>
             <value>libulog libulog python</value>
         </field>
                      <field name='depends.STATIC_LIBRARIES'>
             <value>libulog</value>
         </field>
                         <field name='depends.all'>
             <value>libulog python</value>
         </field>
             <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/ulog/ulogpy</value>
         </field>
             <field name='MODULE'>
             <value>libulog-py</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>libulog-py.done</value>
         </field>
             <field name='DESCRIPTION'>
             <value>Python ulog logging integration</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>libs</value>
         </field>
                   <field name='CUSTOM_MACROS'>
             <value>pybinding-macro:_ulog,libulog,LIBULOG_HEADERS,/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/libulog.so</value>
         </field>
                   <field name='STATIC_LIBRARIES'>
             <value>libulog libulog</value>
         </field>
                                                          <field name='LIBRARIES'>
             <value>libulog libulog</value>
         </field>
                                     <field name='DEPENDS_MODULES'>
             <value>python</value>
         </field>
             <field name='DEPENDS_HOST_MODULES'>
             <value>host.pybinding</value>
         </field>
                                                                            <field name='CLEAN_FILES'>
             <value>/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/build/libulog-py/_ulog.py</value>
         </field>
                                                                                                                            <field name='EXPAND_CUSTOM_VARIABLES'>
             <value>1</value>
         </field>
             <field name='MODULE_CLASS'>
             <value>CUSTOM</value>
         </field>
             <field name='COPY_FILES'>
             <value>ulog.py:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/ulog.py /home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/build/libulog-py/_ulog.py:usr/lib/python/site-packages/</value>
         </field>
                                                                                                       <field name='REVISION'>
             <value>0389d243352255f6182326dccdae3d56dadc078f</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>0389d24</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/ulog</value>
         </field>
                                                             </module>
        <module name='libulog-shd' build='no'>
           <field name='depends'>
             <value>libfutils libulog libshdata</value>
         </field>
                   <field name='depends.EXTERNAL_LIBRARIES'>
             <value>libshdata</value>
         </field>
             <field name='depends.STATIC_LIBRARIES'>
             <value>libfutils libulog</value>
         </field>
                         <field name='depends.all'>
             <value>libfutils libshdata libulog</value>
         </field>
             <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/ulog/ulog_shd</value>
         </field>
             <field name='MODULE'>
             <value>libulog-shd</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>libulog-shd.a</value>
         </field>
             <field name='DESCRIPTION'>
             <value>shared memory redirection of ulog messages</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>ulog</value>
         </field>
                      <field name='SRC_FILES'>
             <value>src/ulog.c</value>
         </field>
                <field name='STATIC_LIBRARIES'>
             <value>libfutils libulog</value>
         </field>
                                     <field name='EXTERNAL_LIBRARIES'>
             <value>libshdata</value>
         </field>
                               <field name='LIBRARIES'>
             <value>libfutils libshdata libulog</value>
         </field>
                                           <field name='C_INCLUDES'>
             <value>/home/marlin/groundsdk/packages/common/ulog/ulog_shd/include</value>
         </field>
                                                                                                                                                                         <field name='EXPORT_C_INCLUDES'>
             <value>/home/marlin/groundsdk/packages/common/ulog/ulog_shd/include</value>
         </field>
                               <field name='MODULE_CLASS'>
             <value>STATIC_LIBRARY</value>
         </field>
                                                                                                    <field name='DESTDIR'>
             <value>usr/lib</value>
         </field>
                <field name='REVISION'>
             <value>0389d243352255f6182326dccdae3d56dadc078f</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>0389d24</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/ulog</value>
         </field>
                                                             </module>
        <module name='libulog-shd-headers' build='no'>
                                         <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/ulog/ulog_shd</value>
         </field>
             <field name='MODULE'>
             <value>libulog-shd-headers</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>libulog-shd-headers.done</value>
         </field>
             <field name='DESCRIPTION'>
             <value>shared memory blob description for ulog messages</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>ulog</value>
         </field>
                                                                                                             <field name='C_INCLUDES'>
             <value>/home/marlin/groundsdk/packages/common/ulog/ulog_shd/include</value>
         </field>
                                                                                                                                                                         <field name='EXPORT_C_INCLUDES'>
             <value>/home/marlin/groundsdk/packages/common/ulog/ulog_shd/include</value>
         </field>
                               <field name='MODULE_CLASS'>
             <value>CUSTOM</value>
         </field>
                                                                                                          <field name='REVISION'>
             <value>0389d243352255f6182326dccdae3d56dadc078f</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>0389d24</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/ulog</value>
         </field>
                                                             </module>
        <module name='libulog-stdcerr' build='no'>
           <field name='depends'>
             <value>libulog libulog</value>
         </field>
                      <field name='depends.STATIC_LIBRARIES'>
             <value>libulog</value>
         </field>
                         <field name='depends.all'>
             <value>libulog</value>
         </field>
             <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/ulog/libulog-redirect</value>
         </field>
             <field name='MODULE'>
             <value>libulog-stdcerr</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>libulog-stdcerr.a</value>
         </field>
             <field name='DESCRIPTION'>
             <value>Redirect std cerr logging to ulog</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>libs</value>
         </field>
                      <field name='SRC_FILES'>
             <value>ulog_stdcerr.cpp</value>
         </field>
                <field name='STATIC_LIBRARIES'>
             <value>libulog libulog</value>
         </field>
                                                          <field name='LIBRARIES'>
             <value>libulog libulog</value>
         </field>
                <field name='PRIVATE_LIBRARIES'>
             <value>libulog</value>
         </field>
                                                                                                                                                                                                    <field name='EXPORT_C_INCLUDES'>
             <value>/home/marlin/groundsdk/packages/common/ulog/libulog-redirect/include</value>
         </field>
                               <field name='MODULE_CLASS'>
             <value>STATIC_LIBRARY</value>
         </field>
                                                                                                    <field name='DESTDIR'>
             <value>usr/lib</value>
         </field>
                <field name='REVISION'>
             <value>0389d243352255f6182326dccdae3d56dadc078f</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>0389d24</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/ulog</value>
         </field>
                                                             </module>
        <module name='libulog-testc' build='no'>
           <field name='depends'>
             <value>libulog</value>
         </field>
                      <field name='depends.STATIC_LIBRARIES'>
             <value>libulog</value>
         </field>
                         <field name='depends.all'>
             <value>libulog</value>
         </field>
             <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/ulog/libulog</value>
         </field>
             <field name='MODULE'>
             <value>libulog-testc</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>libulog-testc</value>
         </field>
             <field name='DESCRIPTION'>
             <value>libulog test of C API</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>test</value>
         </field>
                      <field name='SRC_FILES'>
             <value>tests/ulogtest.c</value>
         </field>
                <field name='STATIC_LIBRARIES'>
             <value>libulog</value>
         </field>
                                                          <field name='LIBRARIES'>
             <value>libulog</value>
         </field>
                                                 <field name='CFLAGS'>
             <value>-Wno-format-security -Wno-format-nonliteral</value>
         </field>
                                                                                                                                                                                        <field name='MODULE_CLASS'>
             <value>EXECUTABLE</value>
         </field>
                                                                                                    <field name='DESTDIR'>
             <value>usr/bin</value>
         </field>
                <field name='REVISION'>
             <value>0389d243352255f6182326dccdae3d56dadc078f</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>0389d24</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/ulog</value>
         </field>
                                                             </module>
        <module name='libulog-testcpp' build='no'>
           <field name='depends'>
             <value>libulog libulog-stdcerr</value>
         </field>
                      <field name='depends.STATIC_LIBRARIES'>
             <value>libulog-stdcerr libulog</value>
         </field>
                         <field name='depends.all'>
             <value>libulog-stdcerr libulog</value>
         </field>
             <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/ulog/libulog</value>
         </field>
             <field name='MODULE'>
             <value>libulog-testcpp</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>libulog-testcpp</value>
         </field>
             <field name='DESCRIPTION'>
             <value>libulog test of C++ API</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>test</value>
         </field>
                      <field name='SRC_FILES'>
             <value>tests/ulogtest.cpp</value>
         </field>
                <field name='STATIC_LIBRARIES'>
             <value>libulog libulog-stdcerr</value>
         </field>
                                                          <field name='LIBRARIES'>
             <value>libulog libulog-stdcerr</value>
         </field>
                                                                                                                                                                                                                               <field name='MODULE_CLASS'>
             <value>EXECUTABLE</value>
         </field>
                                                                                                    <field name='DESTDIR'>
             <value>usr/bin</value>
         </field>
                <field name='REVISION'>
             <value>0389d243352255f6182326dccdae3d56dadc078f</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>0389d24</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/ulog</value>
         </field>
                                                             </module>
        <module name='libulog-vala' build='no'>
                                         <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/ulog/libulog</value>
         </field>
             <field name='MODULE'>
             <value>libulog-vala</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>libulog-vala.done</value>
         </field>
                                                                                                                                                                                                                                                                                              <field name='EXPORT_PREREQUISITES'>
             <value>/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/share/vala/vapi/libulog.vapi</value>
         </field>
                   <field name='MODULE_CLASS'>
             <value>CUSTOM</value>
         </field>
             <field name='COPY_FILES'>
             <value>libulog.vapi:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/share/vala/vapi/</value>
         </field>
                   <field name='INSTALL_HEADERS'>
             <value>libulog.vapi:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/share/vala/vapi/</value>
         </field>
                                                                                              <field name='REVISION'>
             <value>0389d243352255f6182326dccdae3d56dadc078f</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>0389d24</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/ulog</value>
         </field>
                                                             </module>
        <module name='libulog_syslogwrap' build='no'>
           <field name='depends'>
             <value>libulog</value>
         </field>
                      <field name='depends.STATIC_LIBRARIES'>
             <value>libulog</value>
         </field>
                         <field name='depends.all'>
             <value>libulog</value>
         </field>
             <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/ulog/ulogwrapper</value>
         </field>
             <field name='MODULE'>
             <value>libulog_syslogwrap</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>libulog_syslogwrap.a</value>
         </field>
             <field name='DESCRIPTION'>
             <value>A small wrapper library for redirecting syslog to ulog</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>libs</value>
         </field>
                      <field name='SRC_FILES'>
             <value>ulog_syslog.c</value>
         </field>
                <field name='STATIC_LIBRARIES'>
             <value>libulog</value>
         </field>
                                                          <field name='LIBRARIES'>
             <value>libulog</value>
         </field>
                                                 <field name='CFLAGS'>
             <value>-Wextra</value>
         </field>
                                                                                                                                                                                        <field name='MODULE_CLASS'>
             <value>STATIC_LIBRARY</value>
         </field>
                                                                                                    <field name='DESTDIR'>
             <value>usr/lib</value>
         </field>
                <field name='REVISION'>
             <value>0389d243352255f6182326dccdae3d56dadc078f</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>0389d24</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/ulog</value>
         </field>
                                                             </module>
        <module name='libulogcat' build='no'>
           <field name='depends'>
             <value>libulog</value>
         </field>
                      <field name='depends.STATIC_LIBRARIES'>
             <value>libulog</value>
         </field>
                         <field name='depends.all'>
             <value>libulog</value>
         </field>
             <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/ulog/ulogcat</value>
         </field>
             <field name='MODULE'>
             <value>libulogcat</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>libulogcat.a</value>
         </field>
             <field name='DESCRIPTION'>
             <value>A reader library for ulogger/kernel buffers</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>libs</value>
         </field>
                      <field name='SRC_FILES'>
             <value>libulogcat_core.c libulogcat_klog.c libulogcat_text.c libulogcat_compat.c libulogcat_ulog.c</value>
         </field>
                <field name='STATIC_LIBRARIES'>
             <value>libulog</value>
         </field>
                                                          <field name='LIBRARIES'>
             <value>libulog</value>
         </field>
                                                 <field name='CFLAGS'>
             <value>-Wextra -fvisibility=hidden</value>
         </field>
                                                                                                                                                                   <field name='EXPORT_C_INCLUDES'>
             <value>/home/marlin/groundsdk/packages/common/ulog/ulogcat/include</value>
         </field>
                               <field name='MODULE_CLASS'>
             <value>STATIC_LIBRARY</value>
         </field>
                                                                                                    <field name='DESTDIR'>
             <value>usr/lib</value>
         </field>
                <field name='REVISION'>
             <value>0389d243352255f6182326dccdae3d56dadc078f</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>0389d24</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/ulog</value>
         </field>
                                                             </module>
        <module name='libulogctl' build='no'>
           <field name='depends'>
             <value>libpomp libulog</value>
         </field>
                      <field name='depends.STATIC_LIBRARIES'>
             <value>libpomp libulog</value>
         </field>
                         <field name='depends.all'>
             <value>libpomp libulog</value>
         </field>
             <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/ulog/libulogctl</value>
         </field>
             <field name='MODULE'>
             <value>libulogctl</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>libulogctl.a</value>
         </field>
             <field name='DESCRIPTION'>
             <value>Ulog controller in run time.</value>
         </field>
                         <field name='SRC_FILES'>
             <value>src/ulogctl_srv.c src/ulogctl_cli.c src/ulogctl_log.c</value>
         </field>
                <field name='STATIC_LIBRARIES'>
             <value>libpomp libulog</value>
         </field>
                                                          <field name='LIBRARIES'>
             <value>libpomp libulog</value>
         </field>
                                                 <field name='CFLAGS'>
             <value>-DULOGCTL_API_EXPORTS -fvisibility=hidden</value>
         </field>
                                                                                                                                                                   <field name='EXPORT_C_INCLUDES'>
             <value>/home/marlin/groundsdk/packages/common/ulog/libulogctl/include/</value>
         </field>
                               <field name='MODULE_CLASS'>
             <value>STATIC_LIBRARY</value>
         </field>
                                                                                                    <field name='DESTDIR'>
             <value>usr/lib</value>
         </field>
                <field name='REVISION'>
             <value>0389d243352255f6182326dccdae3d56dadc078f</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>0389d24</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/ulog</value>
         </field>
                                                             </module>
        <module name='libvideo-buffers' build='yes'>
           <field name='depends'>
             <value>libfutils libpomp libulog</value>
         </field>
                      <field name='depends.STATIC_LIBRARIES'>
             <value>libfutils libpomp libulog</value>
         </field>
                         <field name='depends.all'>
             <value>libfutils libpomp libulog</value>
         </field>
             <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/libvideo-buffers</value>
         </field>
             <field name='MODULE'>
             <value>libvideo-buffers</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>libvideo-buffers.a</value>
         </field>
             <field name='DESCRIPTION'>
             <value>Video buffers library</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>libs</value>
         </field>
                      <field name='SRC_FILES'>
             <value>src/vbuf.c src/vbuf_pool.c src/vbuf_queue.c</value>
         </field>
                <field name='STATIC_LIBRARIES'>
             <value>libfutils libpomp libulog</value>
         </field>
                                                          <field name='LIBRARIES'>
             <value>libfutils libpomp libulog</value>
         </field>
                                                 <field name='CFLAGS'>
             <value>-DVBUF_API_EXPORTS -fvisibility=hidden -std=gnu99</value>
         </field>
                                                                                                                                                                   <field name='EXPORT_C_INCLUDES'>
             <value>/home/marlin/groundsdk/packages/common/libvideo-buffers/include</value>
         </field>
                         <field name='EXPORT_CUSTOM_VARIABLES'>
             <value>LIBVIDEOBUFFERS_HEADERS=/home/marlin/groundsdk/packages/common/libvideo-buffers/include/video-buffers/vbuf.h;;</value>
         </field>
                <field name='MODULE_CLASS'>
             <value>STATIC_LIBRARY</value>
         </field>
                                                                                                    <field name='DESTDIR'>
             <value>usr/lib</value>
         </field>
                <field name='REVISION'>
             <value>aa20044772c5bcc4ccacc50944144c2393917498</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>aa20044</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/libvideo-buffers</value>
         </field>
                                                             </module>
        <module name='libvideo-buffers-generic' build='yes'>
           <field name='depends'>
             <value>libfutils libulog libvideo-buffers</value>
         </field>
                      <field name='depends.STATIC_LIBRARIES'>
             <value>libvideo-buffers libfutils libpomp libulog</value>
         </field>
                         <field name='depends.all'>
             <value>libvideo-buffers libfutils libpomp libulog</value>
         </field>
             <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/libvideo-buffers</value>
         </field>
             <field name='MODULE'>
             <value>libvideo-buffers-generic</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>libvideo-buffers-generic.a</value>
         </field>
             <field name='DESCRIPTION'>
             <value>Video buffers library, generic implementation</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>libs</value>
         </field>
                      <field name='SRC_FILES'>
             <value>implem/generic/src/vbuf_generic.c</value>
         </field>
                <field name='STATIC_LIBRARIES'>
             <value>libfutils libulog libvideo-buffers</value>
         </field>
                                                          <field name='LIBRARIES'>
             <value>libfutils libulog libvideo-buffers</value>
         </field>
                                                 <field name='CFLAGS'>
             <value>-DVBUF_API_EXPORTS -fvisibility=hidden -std=gnu99</value>
         </field>
                                                                                                                                                                   <field name='EXPORT_C_INCLUDES'>
             <value>/home/marlin/groundsdk/packages/common/libvideo-buffers/implem/generic/include</value>
         </field>
                         <field name='EXPORT_CUSTOM_VARIABLES'>
             <value>LIBVIDEOBUFFERSGENERIC_HEADERS=/home/marlin/groundsdk/packages/common/libvideo-buffers/implem/generic/include/video-buffers/vbuf_generic.h;;</value>
         </field>
                <field name='MODULE_CLASS'>
             <value>STATIC_LIBRARY</value>
         </field>
                                                                                                    <field name='DESTDIR'>
             <value>usr/lib</value>
         </field>
                <field name='REVISION'>
             <value>aa20044772c5bcc4ccacc50944144c2393917498</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>aa20044</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/libvideo-buffers</value>
         </field>
                                                             </module>
        <module name='libvideo-decode' build='yes'>
           <field name='depends'>
             <value>libfutils libh264 libulog libvideo-buffers libmediacodec-wrapper libvideo-buffers-generic</value>
         </field>
                   <field name='depends.EXTERNAL_LIBRARIES'>
             <value>json</value>
         </field>
             <field name='depends.STATIC_LIBRARIES'>
             <value>libh264 libmediacodec-wrapper libvideo-buffers-generic libvideo-buffers libfutils libpomp libulog</value>
         </field>
                         <field name='depends.all'>
             <value>libh264 libmediacodec-wrapper libvideo-buffers-generic json libvideo-buffers libfutils libpomp libulog</value>
         </field>
             <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/libvideo-decode</value>
         </field>
             <field name='MODULE'>
             <value>libvideo-decode</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>libvideo-decode.a</value>
         </field>
             <field name='DESCRIPTION'>
             <value>Video decoding library</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>libs</value>
         </field>
                      <field name='SRC_FILES'>
             <value>src/vdec.c src/vdec_dbg.c src/vdec_ffmpeg.c src/vdec_h264.c src/vdec_mediacodec.c src/vdec_videocoremmal.c src/vdec_videotoolbox.c</value>
         </field>
                <field name='STATIC_LIBRARIES'>
             <value>libfutils libh264 libulog libvideo-buffers libmediacodec-wrapper libvideo-buffers-generic</value>
         </field>
                                                          <field name='LIBRARIES'>
             <value>libfutils libh264 libulog libvideo-buffers libmediacodec-wrapper libvideo-buffers-generic</value>
         </field>
                      <field name='CONDITIONAL_LIBRARIES'>
             <value>OPTIONAL:ffmpeg-libav OPTIONAL:libmediacodec-wrapper OPTIONAL:libvideo-buffers-generic OPTIONAL:mmal</value>
         </field>
                                     <field name='CFLAGS'>
             <value>-DVDEC_API_EXPORTS -fvisibility=hidden -std=gnu99</value>
         </field>
                                                                                                                                                                   <field name='EXPORT_C_INCLUDES'>
             <value>/home/marlin/groundsdk/packages/common/libvideo-decode/include</value>
         </field>
                               <field name='MODULE_CLASS'>
             <value>STATIC_LIBRARY</value>
         </field>
                                                                                                    <field name='DESTDIR'>
             <value>usr/lib</value>
         </field>
                <field name='REVISION'>
             <value>bd672b81b801f4f7569d7485fe2868bbbdb31895</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>bd672b8</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/libvideo-decode</value>
         </field>
                                                             </module>
        <module name='libvideo-metadata' build='yes'>
           <field name='depends'>
             <value>libfutils libulog json</value>
         </field>
                   <field name='depends.EXTERNAL_LIBRARIES'>
             <value>json</value>
         </field>
             <field name='depends.STATIC_LIBRARIES'>
             <value>libfutils libulog</value>
         </field>
                         <field name='depends.all'>
             <value>libfutils json libulog</value>
         </field>
             <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/libvideo-metadata</value>
         </field>
             <field name='MODULE'>
             <value>libvideo-metadata</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>libvideo-metadata.a</value>
         </field>
             <field name='DESCRIPTION'>
             <value>Parrot Drones video metadata library</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>libs</value>
         </field>
                      <field name='SRC_FILES'>
             <value>src/vmeta_session.c src/vmeta_frame.c src/vmeta_json.c src/vmeta_csv.c src/vmeta_frame_v1.c src/vmeta_frame_v2.c src/vmeta_frame_v3.c src/vmeta_utils.c</value>
         </field>
                <field name='STATIC_LIBRARIES'>
             <value>libfutils libulog</value>
         </field>
                                     <field name='EXTERNAL_LIBRARIES'>
             <value>json</value>
         </field>
                               <field name='LIBRARIES'>
             <value>libfutils libulog json</value>
         </field>
                      <field name='CONDITIONAL_LIBRARIES'>
             <value>OPTIONAL:json</value>
         </field>
                                     <field name='CFLAGS'>
             <value>-DVMETA_API_EXPORTS -fvisibility=hidden -std=gnu99</value>
         </field>
                                                                                                                                                                   <field name='EXPORT_C_INCLUDES'>
             <value>/home/marlin/groundsdk/packages/common/libvideo-metadata/include</value>
         </field>
                         <field name='EXPORT_CUSTOM_VARIABLES'>
             <value>LIBVIDEOMETADATA_HEADERS=/home/marlin/groundsdk/packages/common/libvideo-metadata/include/video-metadata/vmeta.h:/home/marlin/groundsdk/packages/common/libvideo-metadata/include/video-metadata/vmeta_frame.h:/home/marlin/groundsdk/packages/common/libvideo-metadata/include/video-metadata/vmeta_frame_v1.h:/home/marlin/groundsdk/packages/common/libvideo-metadata/include/video-metadata/vmeta_frame_v2.h:/home/marlin/groundsdk/packages/common/libvideo-metadata/include/video-metadata/vmeta_frame_v3.h:/home/marlin/groundsdk/packages/common/libvideo-metadata/include/video-metadata/vmeta_session.h;;</value>
         </field>
                <field name='MODULE_CLASS'>
             <value>STATIC_LIBRARY</value>
         </field>
                                                                                                    <field name='DESTDIR'>
             <value>usr/lib</value>
         </field>
                <field name='REVISION'>
             <value>6f1f9af4d0a56a337740dd3d462848f909b9d814</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>6f1f9af</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/libvideo-metadata</value>
         </field>
                                                             </module>
        <module name='libvideo-streaming' build='yes'>
           <field name='depends'>
             <value>libfutils libh264 libpomp librtp libulog libvideo-metadata</value>
         </field>
                   <field name='depends.EXTERNAL_LIBRARIES'>
             <value>json</value>
         </field>
             <field name='depends.STATIC_LIBRARIES'>
             <value>libh264 librtp libvideo-metadata libpomp libfutils libulog</value>
         </field>
                         <field name='depends.all'>
             <value>libh264 librtp libvideo-metadata libpomp libfutils json libulog</value>
         </field>
             <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/libvideo-streaming</value>
         </field>
             <field name='MODULE'>
             <value>libvideo-streaming</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>libvideo-streaming.a</value>
         </field>
             <field name='DESCRIPTION'>
             <value>Video streaming library</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>libs</value>
         </field>
                      <field name='SRC_FILES'>
             <value>src/vstrm_clock_delta.c src/vstrm_dbg.c src/vstrm_frame.c src/vstrm_h264_sei_streaming.c src/vstrm_receiver.c src/vstrm_rtp_h264_rx.c src/vstrm_rtp_h264_tx.c src/vstrm_sender.c src/vstrm_session_metadata.c src/vstrm_video_stats.c</value>
         </field>
                <field name='STATIC_LIBRARIES'>
             <value>libfutils libh264 libpomp librtp libulog libvideo-metadata</value>
         </field>
                                                          <field name='LIBRARIES'>
             <value>libfutils libh264 libpomp librtp libulog libvideo-metadata</value>
         </field>
                                                 <field name='CFLAGS'>
             <value>-DVSTRM_API_EXPORTS -fvisibility=hidden -std=gnu99</value>
         </field>
                                                                                                                                                                   <field name='EXPORT_C_INCLUDES'>
             <value>/home/marlin/groundsdk/packages/common/libvideo-streaming/include</value>
         </field>
                               <field name='MODULE_CLASS'>
             <value>STATIC_LIBRARY</value>
         </field>
                                                                                                    <field name='DESTDIR'>
             <value>usr/lib</value>
         </field>
                <field name='REVISION'>
             <value>748d3d17cf05512f86254f9a7be1373a65afb958</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>748d3d1</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/libvideo-streaming</value>
         </field>
                                                             </module>
        <module name='log2gutma' build='no'>
           <field name='depends'>
             <value>libfutils liblog2gutma liblogextract libulog json</value>
         </field>
                   <field name='depends.EXTERNAL_LIBRARIES'>
             <value>json liblogger-headers liblz4</value>
         </field>
             <field name='depends.STATIC_LIBRARIES'>
             <value>liblog2gutma liblogextract libfutils libulog</value>
         </field>
                         <field name='depends.all'>
             <value>liblog2gutma liblogextract json libfutils liblogger-headers liblz4 libulog</value>
         </field>
             <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/logger/liblog2gutma</value>
         </field>
             <field name='MODULE'>
             <value>log2gutma</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>log2gutma</value>
         </field>
             <field name='DESCRIPTION'>
             <value>Commandline tool to convert ulogbin to gutma format</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>logger-tools</value>
         </field>
                      <field name='SRC_FILES'>
             <value>src/log2gutma-cli.cpp</value>
         </field>
                <field name='STATIC_LIBRARIES'>
             <value>libfutils liblog2gutma liblogextract libulog</value>
         </field>
                                     <field name='EXTERNAL_LIBRARIES'>
             <value>json</value>
         </field>
                               <field name='LIBRARIES'>
             <value>json libfutils liblog2gutma liblogextract libulog</value>
         </field>
                                                                                                                                                                                                                               <field name='MODULE_CLASS'>
             <value>EXECUTABLE</value>
         </field>
                                                                                                    <field name='DESTDIR'>
             <value>usr/bin</value>
         </field>
                <field name='REVISION'>
             <value>72fb80c027f4c022b73ac890beba1aa226927489</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>72fb80c</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/logger</value>
         </field>
                                                             </module>
        <module name='log2gutma-py' build='no'>
           <field name='depends'>
             <value>python logextract-py</value>
         </field>
                                     <field name='depends.all'>
             <value>logextract-py python</value>
         </field>
             <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/logger/tools</value>
         </field>
             <field name='MODULE'>
             <value>log2gutma-py</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>log2gutma-py.done</value>
         </field>
             <field name='DESCRIPTION'>
             <value>Python log2gutma tool</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>libs</value>
         </field>
                                                                                                       <field name='DEPENDS_MODULES'>
             <value>python logextract-py</value>
         </field>
                                                                                                                                                                                                    <field name='MODULE_CLASS'>
             <value>CUSTOM</value>
         </field>
             <field name='COPY_FILES'>
             <value>log2gutma.py:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/ gutma/flight_data.py:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/gutma/ gutma/flight_events.py:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/gutma/ gutma/flight_logging_geojson.py:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/gutma/ gutma/flight_logging.py:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/gutma/ gutma/ulog_reader.py:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/gutma/ gutma/fdrlite_extract.py:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/gutma/ gutma/fdrlite_reader.py:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/gutma/</value>
         </field>
                                                                                                       <field name='REVISION'>
             <value>72fb80c027f4c022b73ac890beba1aa226927489</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>72fb80c</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/logger</value>
         </field>
                                                             </module>
        <module name='logextract-py' build='no'>
           <field name='depends'>
             <value>python</value>
         </field>
                                     <field name='depends.all'>
             <value>python</value>
         </field>
             <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/logger/tools</value>
         </field>
             <field name='MODULE'>
             <value>logextract-py</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>logextract-py.done</value>
         </field>
             <field name='DESCRIPTION'>
             <value>Python logextract tool</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>libs</value>
         </field>
                                                                                                       <field name='DEPENDS_MODULES'>
             <value>python</value>
         </field>
                                                                                                                                                                                                    <field name='MODULE_CLASS'>
             <value>CUSTOM</value>
         </field>
             <field name='COPY_FILES'>
             <value>logextract.py:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/ ulogbin2txt.py:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/ sysmon.py:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/</value>
         </field>
                                                                                                       <field name='REVISION'>
             <value>72fb80c027f4c022b73ac890beba1aa226927489</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>72fb80c</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/logger</value>
         </field>
                                                             </module>
        <module name='loggerd' build='no'>
           <field name='depends'>
             <value>libfutils liblogger libloghdr libpomp libulog libputils libschedcfg libshs</value>
         </field>
                   <field name='depends.EXTERNAL_LIBRARIES'>
             <value>libputils libschedcfg libshs libcrypto liblz4 liblogger-headers libloghdr-header</value>
         </field>
             <field name='depends.STATIC_LIBRARIES'>
             <value>liblogger libloghdr libpomp libfutils libulog</value>
         </field>
                         <field name='depends.all'>
             <value>liblogger libputils libschedcfg libshs libloghdr libpomp libfutils libcrypto liblz4 liblogger-headers libloghdr-header libulog</value>
         </field>
             <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/logger/loggerd</value>
         </field>
             <field name='MODULE'>
             <value>loggerd</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>loggerd</value>
         </field>
             <field name='DESCRIPTION'>
             <value>Loggerd daemon</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>loggerd</value>
         </field>
                      <field name='SRC_FILES'>
             <value>loggerd.cpp</value>
         </field>
                <field name='STATIC_LIBRARIES'>
             <value>libfutils liblogger libloghdr libpomp libulog</value>
         </field>
                                     <field name='EXTERNAL_LIBRARIES'>
             <value>libputils libschedcfg libshs</value>
         </field>
                               <field name='LIBRARIES'>
             <value>libfutils liblogger libloghdr libpomp libputils libschedcfg libshs libulog</value>
         </field>
                                                    <field name='CXXFLAGS'>
             <value>-std=c++11</value>
         </field>
                                                                                                                                                                                     <field name='MODULE_CLASS'>
             <value>EXECUTABLE</value>
         </field>
                                                                                                    <field name='DESTDIR'>
             <value>usr/bin</value>
         </field>
                <field name='REVISION'>
             <value>72fb80c027f4c022b73ac890beba1aa226927489</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>72fb80c</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/logger</value>
         </field>
                                                             </module>
        <module name='loggerd-file' build='no'>
           <field name='depends'>
             <value>libfutils libpomp libulog liblogger-headers</value>
         </field>
                   <field name='depends.EXTERNAL_LIBRARIES'>
             <value>liblogger-headers</value>
         </field>
             <field name='depends.STATIC_LIBRARIES'>
             <value>libfutils libpomp libulog</value>
         </field>
                         <field name='depends.all'>
             <value>libfutils libpomp liblogger-headers libulog</value>
         </field>
             <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/logger/plugins</value>
         </field>
             <field name='MODULE'>
             <value>loggerd-file</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>libloggerd-file.a</value>
         </field>
             <field name='DESCRIPTION'>
             <value>Loggerd plugin for file dump</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>liblogger-plugins</value>
         </field>
                      <field name='SRC_FILES'>
             <value>file/file.cpp</value>
         </field>
                <field name='STATIC_LIBRARIES'>
             <value>libfutils libpomp libulog</value>
         </field>
                                     <field name='EXTERNAL_LIBRARIES'>
             <value>liblogger-headers</value>
         </field>
                               <field name='LIBRARIES'>
             <value>liblogger-headers libfutils libpomp libulog</value>
         </field>
                                                    <field name='CXXFLAGS'>
             <value>-std=c++11</value>
         </field>
                                                                                                                                                                                     <field name='MODULE_CLASS'>
             <value>STATIC_LIBRARY</value>
         </field>
                                                                                                    <field name='DESTDIR'>
             <value>usr/lib/loggerd-plugins</value>
         </field>
                <field name='REVISION'>
             <value>72fb80c027f4c022b73ac890beba1aa226927489</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>72fb80c</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/logger</value>
         </field>
                                                             </module>
        <module name='loggerd-properties' build='no'>
           <field name='depends'>
             <value>libfutils libulog libpomp liblogger-headers libputils</value>
         </field>
                   <field name='depends.EXTERNAL_LIBRARIES'>
             <value>liblogger-headers libputils</value>
         </field>
             <field name='depends.STATIC_LIBRARIES'>
             <value>libfutils libpomp libulog</value>
         </field>
                         <field name='depends.all'>
             <value>libfutils libpomp liblogger-headers libputils libulog</value>
         </field>
             <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/logger/plugins</value>
         </field>
             <field name='MODULE'>
             <value>loggerd-properties</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>libloggerd-properties.a</value>
         </field>
             <field name='DESCRIPTION'>
             <value>Loggerd plugin for properties</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>liblogger-plugins</value>
         </field>
                      <field name='SRC_FILES'>
             <value>properties/properties.cpp</value>
         </field>
                <field name='STATIC_LIBRARIES'>
             <value>libfutils libulog libpomp</value>
         </field>
                                     <field name='EXTERNAL_LIBRARIES'>
             <value>liblogger-headers libputils</value>
         </field>
                               <field name='LIBRARIES'>
             <value>liblogger-headers libfutils libputils libulog libpomp</value>
         </field>
                      <field name='CONDITIONAL_LIBRARIES'>
             <value>OPTIONAL:libautopilot</value>
         </field>
                                        <field name='CXXFLAGS'>
             <value>-std=c++11</value>
         </field>
                                                                                                                                                                                     <field name='MODULE_CLASS'>
             <value>STATIC_LIBRARY</value>
         </field>
                                                                                                    <field name='DESTDIR'>
             <value>usr/lib/loggerd-plugins</value>
         </field>
                <field name='REVISION'>
             <value>72fb80c027f4c022b73ac890beba1aa226927489</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>72fb80c</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/logger</value>
         </field>
                                                             </module>
        <module name='loggerd-settings' build='no'>
           <field name='depends'>
             <value>libfutils libulog libpomp liblogger-headers libshs</value>
         </field>
                   <field name='depends.EXTERNAL_LIBRARIES'>
             <value>liblogger-headers libshs</value>
         </field>
             <field name='depends.STATIC_LIBRARIES'>
             <value>libfutils libpomp libulog</value>
         </field>
                         <field name='depends.all'>
             <value>libfutils libpomp liblogger-headers libshs libulog</value>
         </field>
             <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/logger/plugins</value>
         </field>
             <field name='MODULE'>
             <value>loggerd-settings</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>libloggerd-settings.a</value>
         </field>
             <field name='DESCRIPTION'>
             <value>Loggerd plugin for shared settings</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>liblogger-plugins</value>
         </field>
                      <field name='SRC_FILES'>
             <value>settings/settings.cpp</value>
         </field>
                <field name='STATIC_LIBRARIES'>
             <value>libfutils libulog libpomp</value>
         </field>
                                     <field name='EXTERNAL_LIBRARIES'>
             <value>liblogger-headers libshs</value>
         </field>
                               <field name='LIBRARIES'>
             <value>liblogger-headers libfutils libshs libulog libpomp</value>
         </field>
                                                    <field name='CXXFLAGS'>
             <value>-std=c++11</value>
         </field>
                                                                                                                                                                                     <field name='MODULE_CLASS'>
             <value>STATIC_LIBRARY</value>
         </field>
                                                                                                    <field name='DESTDIR'>
             <value>usr/lib/loggerd-plugins</value>
         </field>
                <field name='REVISION'>
             <value>72fb80c027f4c022b73ac890beba1aa226927489</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>72fb80c</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/logger</value>
         </field>
                                                             </module>
        <module name='loggerd-sysmon' build='no'>
           <field name='depends'>
             <value>libfutils libpomp libulog liblogger-headers</value>
         </field>
                   <field name='depends.EXTERNAL_LIBRARIES'>
             <value>liblogger-headers</value>
         </field>
             <field name='depends.STATIC_LIBRARIES'>
             <value>libfutils libpomp libulog</value>
         </field>
                         <field name='depends.all'>
             <value>libfutils libpomp liblogger-headers libulog</value>
         </field>
             <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/logger/plugins</value>
         </field>
             <field name='MODULE'>
             <value>loggerd-sysmon</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>libloggerd-sysmon.a</value>
         </field>
             <field name='DESCRIPTION'>
             <value>Loggerd plugin for system monitoring</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>liblogger-plugins</value>
         </field>
                      <field name='SRC_FILES'>
             <value>sysmon/sysmon.cpp</value>
         </field>
                <field name='STATIC_LIBRARIES'>
             <value>libfutils libpomp libulog</value>
         </field>
                                     <field name='EXTERNAL_LIBRARIES'>
             <value>liblogger-headers</value>
         </field>
                               <field name='LIBRARIES'>
             <value>liblogger-headers libfutils libpomp libulog</value>
         </field>
                                                    <field name='CXXFLAGS'>
             <value>-std=c++11</value>
         </field>
                                                                                                                                                                                     <field name='MODULE_CLASS'>
             <value>STATIC_LIBRARY</value>
         </field>
                                                                                                    <field name='DESTDIR'>
             <value>usr/lib/loggerd-plugins</value>
         </field>
                <field name='REVISION'>
             <value>72fb80c027f4c022b73ac890beba1aa226927489</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>72fb80c</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/logger</value>
         </field>
                                                             </module>
        <module name='loggerd-telemetry' build='no'>
           <field name='depends'>
             <value>libulog libpomp liblogger-headers libshdata</value>
         </field>
                   <field name='depends.EXTERNAL_LIBRARIES'>
             <value>liblogger-headers libshdata</value>
         </field>
             <field name='depends.STATIC_LIBRARIES'>
             <value>libpomp libulog</value>
         </field>
                         <field name='depends.all'>
             <value>libpomp liblogger-headers libshdata libulog</value>
         </field>
             <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/logger/plugins</value>
         </field>
             <field name='MODULE'>
             <value>loggerd-telemetry</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>libloggerd-telemetry.a</value>
         </field>
             <field name='DESCRIPTION'>
             <value>Loggerd plugin for telemetry sections</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>liblogger-plugins</value>
         </field>
                      <field name='SRC_FILES'>
             <value>telemetry/telemetry.cpp</value>
         </field>
                <field name='STATIC_LIBRARIES'>
             <value>libulog libpomp</value>
         </field>
                                     <field name='EXTERNAL_LIBRARIES'>
             <value>liblogger-headers libshdata</value>
         </field>
                               <field name='LIBRARIES'>
             <value>liblogger-headers libshdata libulog libpomp</value>
         </field>
                                                    <field name='CXXFLAGS'>
             <value>-std=c++11</value>
         </field>
                                                                                                                                                                                     <field name='MODULE_CLASS'>
             <value>STATIC_LIBRARY</value>
         </field>
                                                                                                    <field name='DESTDIR'>
             <value>usr/lib/loggerd-plugins</value>
         </field>
                <field name='REVISION'>
             <value>72fb80c027f4c022b73ac890beba1aa226927489</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>72fb80c</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/logger</value>
         </field>
                                                             </module>
        <module name='loggerd-ulog' build='no'>
           <field name='depends'>
             <value>ulog-helper liblogger-headers</value>
         </field>
                   <field name='depends.EXTERNAL_LIBRARIES'>
             <value>liblogger-headers</value>
         </field>
             <field name='depends.STATIC_LIBRARIES'>
             <value>ulog-helper libulog</value>
         </field>
                         <field name='depends.all'>
             <value>ulog-helper libulog liblogger-headers</value>
         </field>
             <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/logger/plugins</value>
         </field>
             <field name='MODULE'>
             <value>loggerd-ulog</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>libloggerd-ulog.a</value>
         </field>
             <field name='DESCRIPTION'>
             <value>Loggerd plugin for ulog devices</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>liblogger-plugins</value>
         </field>
                      <field name='SRC_FILES'>
             <value>ulog/ulog.cpp</value>
         </field>
                <field name='STATIC_LIBRARIES'>
             <value>ulog-helper</value>
         </field>
                                     <field name='EXTERNAL_LIBRARIES'>
             <value>liblogger-headers</value>
         </field>
                               <field name='LIBRARIES'>
             <value>liblogger-headers ulog-helper</value>
         </field>
                                                    <field name='CXXFLAGS'>
             <value>-std=c++11</value>
         </field>
                                                                                                                                                                                     <field name='MODULE_CLASS'>
             <value>STATIC_LIBRARY</value>
         </field>
                                                                                                    <field name='DESTDIR'>
             <value>usr/lib/loggerd-plugins</value>
         </field>
                <field name='REVISION'>
             <value>72fb80c027f4c022b73ac890beba1aa226927489</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>72fb80c</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/logger</value>
         </field>
                                                             </module>
        <module name='loghdr' build='no'>
           <field name='depends'>
             <value>libloghdr libulog liblogger-headers</value>
         </field>
                   <field name='depends.EXTERNAL_LIBRARIES'>
             <value>liblogger-headers libloghdr-header</value>
         </field>
             <field name='depends.STATIC_LIBRARIES'>
             <value>libloghdr libulog</value>
         </field>
                         <field name='depends.all'>
             <value>libloghdr libulog liblogger-headers libloghdr-header</value>
         </field>
             <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/logger/tools</value>
         </field>
             <field name='MODULE'>
             <value>loghdr</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>loghdr</value>
         </field>
             <field name='DESCRIPTION'>
             <value>Commandline tool to extract log header</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>loghdr</value>
         </field>
                      <field name='SRC_FILES'>
             <value>loghdr.c</value>
         </field>
                <field name='STATIC_LIBRARIES'>
             <value>libloghdr libulog</value>
         </field>
                                     <field name='EXTERNAL_LIBRARIES'>
             <value>liblogger-headers</value>
         </field>
                               <field name='LIBRARIES'>
             <value>liblogger-headers libloghdr libulog</value>
         </field>
                                                                                                                                                                                                                               <field name='MODULE_CLASS'>
             <value>EXECUTABLE</value>
         </field>
                                                                                                    <field name='DESTDIR'>
             <value>usr/bin</value>
         </field>
                <field name='REVISION'>
             <value>72fb80c027f4c022b73ac890beba1aa226927489</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>72fb80c</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/logger</value>
         </field>
                                                             </module>
        <module name='mavlink-parrot' build='no'>
                                         <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/mavlink</value>
         </field>
             <field name='MODULE'>
             <value>mavlink-parrot</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>mavlink-parrot.done</value>
         </field>
             <field name='DESCRIPTION'>
             <value>Mavlink generated files for Parrot drones</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>libs</value>
         </field>
                <field name='CUSTOM_TARGETS'>
             <value>/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/build/mavlink-parrot/parrot.xml.done</value>
         </field>
             <field name='CUSTOM_MACROS'>
             <value>mavgen-macro:C,generated,/home/marlin/groundsdk/packages/common/mavlink/message_definitions/v1.0/parrot.xml</value>
         </field>
                                                                                                 <field name='DEPENDS_HOST_MODULES'>
             <value>host.mavgen</value>
         </field>
             <field name='C_INCLUDES'>
             <value>/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/build/mavlink-parrot/generated</value>
         </field>
                                                                         <field name='CLEAN_FILES'>
             <value>/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/build/mavlink-parrot/parrot.xml.done /home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/build/mavlink-parrot/parrot.xml.d</value>
         </field>
                                                                                                          <field name='EXPORT_C_INCLUDES'>
             <value>/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/build/mavlink-parrot/generated</value>
         </field>
                      <field name='EXPORT_PREREQUISITES'>
             <value>/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/build/mavlink-parrot/parrot.xml.done</value>
         </field>
                   <field name='MODULE_CLASS'>
             <value>CUSTOM</value>
         </field>
                                                                                                          <field name='REVISION'>
             <value>ed9b5620b539729d0fd3cf1187e1d66047cbb574</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>ed9b562</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/mavlink</value>
         </field>
                                                             </module>
        <module name='mp4-demux-test' build='no'>
           <field name='depends'>
             <value>libfutils libmp4 libulog</value>
         </field>
                      <field name='depends.STATIC_LIBRARIES'>
             <value>libmp4 libfutils libulog</value>
         </field>
                         <field name='depends.all'>
             <value>libmp4 libfutils libulog</value>
         </field>
             <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/libmp4</value>
         </field>
             <field name='MODULE'>
             <value>mp4-demux-test</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>mp4-demux-test</value>
         </field>
             <field name='DESCRIPTION'>
             <value>MP4 file library demuxer test program</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>multimedia</value>
         </field>
                      <field name='SRC_FILES'>
             <value>tests/mp4_demux_test.c</value>
         </field>
                <field name='STATIC_LIBRARIES'>
             <value>libfutils libmp4 libulog</value>
         </field>
                                                          <field name='LIBRARIES'>
             <value>libfutils libmp4 libulog</value>
         </field>
                                                                                                                                                                                                                               <field name='MODULE_CLASS'>
             <value>EXECUTABLE</value>
         </field>
                                                                                                    <field name='DESTDIR'>
             <value>usr/bin</value>
         </field>
                <field name='REVISION'>
             <value>fcdb94c17e5a3c08c3fbd0f7f6af76cae55981b8</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>fcdb94c</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/libmp4</value>
         </field>
                                                             </module>
        <module name='olympe' build='no'>
           <field name='depends'>
             <value>python arsdkparser olympe-base olympe-deps</value>
         </field>
                                     <field name='depends.all'>
             <value>olympe-base olympe-deps arsdkparser libpdraw libarsdkctrl libulog-py libmp4 librtsp libsdp libvideo-decode libvideo-streaming eigen libmediacodec-wrapper libvideo-buffers-generic libh264 librtp libvideo-metadata libvideo-buffers libarsdk libpuf libmux libarsdkgen json libpomp libfutils zlib libtar libulog python</value>
         </field>
             <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/olympe</value>
         </field>
             <field name='MODULE'>
             <value>olympe</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>olympe.done</value>
         </field>
             <field name='DESCRIPTION'>
             <value>Drone controller python library based on ctypes bindings of libpdraw and arsdk-ng</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>libs</value>
         </field>
                                                                                                       <field name='DEPENDS_MODULES'>
             <value>python arsdkparser olympe-base olympe-deps</value>
         </field>
                                                                                                                                                                                                    <field name='MODULE_CLASS'>
             <value>CUSTOM</value>
         </field>
                                                                                                          <field name='REVISION'>
             <value>65cbf56e242d91c32e8080ff9e7afc7dd761fe19</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>65cbf56</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/olympe</value>
         </field>
                                                             </module>
        <module name='olympe-base' build='no'>
           <field name='depends'>
             <value>python arsdkparser</value>
         </field>
                                     <field name='depends.all'>
             <value>arsdkparser python</value>
         </field>
             <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/olympe</value>
         </field>
             <field name='MODULE'>
             <value>olympe-base</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>olympe-base.done</value>
         </field>
             <field name='DESCRIPTION'>
             <value>Olympe pure python module</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>libs</value>
         </field>
                                                                                                       <field name='DEPENDS_MODULES'>
             <value>python arsdkparser</value>
         </field>
                                                                                                                                                                                                    <field name='MODULE_CLASS'>
             <value>CUSTOM</value>
         </field>
             <field name='COPY_FILES'>
             <value>src/olympe/doc/conf.py:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/doc/conf.py src/olympe/doc/examples/subscriber.py:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/doc/examples/subscriber.py src/olympe/doc/examples/physical_skyctrl.py:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/doc/examples/physical_skyctrl.py src/olympe/doc/examples/enums.py:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/doc/examples/enums.py src/olympe/doc/examples/takeoff_if_necessary_2.py:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/doc/examples/takeoff_if_necessary_2.py src/olympe/doc/examples/pdraw.py:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/doc/examples/pdraw.py src/olympe/doc/examples/moveby2.py:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/doc/examples/moveby2.py src/olympe/doc/examples/listener.py:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/doc/examples/listener.py src/olympe/doc/examples/takeoff.py:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/doc/examples/takeoff.py src/olympe/doc/examples/maxtilt.py:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/doc/examples/maxtilt.py src/olympe/doc/examples/log.py:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/doc/examples/log.py src/olympe/doc/examples/maxtiltget.py:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/doc/examples/maxtiltget.py src/olympe/doc/examples/asyncaction.py:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/doc/examples/asyncaction.py src/olympe/doc/examples/skyctrl_drone_pairing.py:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/doc/examples/skyctrl_drone_pairing.py src/olympe/doc/examples/takeoff_if_necessary_1.py:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/doc/examples/takeoff_if_necessary_1.py src/olympe/doc/examples/streaming.py:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/doc/examples/streaming.py src/olympe/doc/examples/moveby.py:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/doc/examples/moveby.py src/olympe/doc/examples/bitfields.py:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/doc/examples/bitfields.py src/olympe/doc/examples/photo.py:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/doc/examples/photo.py src/olympe/doc/examples/media.py:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/doc/examples/media.py src/olympe/doc/examples/physical_drone.py:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/doc/examples/physical_drone.py src/olympe/sphinx_doc.py:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/sphinx_doc.py src/olympe/arsdkng/events.py:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/arsdkng/events.py src/olympe/arsdkng/enums.py:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/arsdkng/enums.py src/olympe/arsdkng/__init__.py:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/arsdkng/__init__.py src/olympe/arsdkng/pdraw.py:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/arsdkng/pdraw.py src/olympe/arsdkng/json.py:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/arsdkng/json.py src/olympe/arsdkng/drone.py:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/arsdkng/drone.py src/olympe/arsdkng/listener.py:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/arsdkng/listener.py src/olympe/arsdkng/expectations.py:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/arsdkng/expectations.py src/olympe/arsdkng/messages.py:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/arsdkng/messages.py src/olympe/arsdkng/discovery.py:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/arsdkng/discovery.py src/olympe/arsdkng/backend.py:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/arsdkng/backend.py src/olympe/arsdkng/event_marker.py:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/arsdkng/event_marker.py src/olympe/arsdkng/module_loader.py:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/arsdkng/module_loader.py src/olympe/arsdkng/xml.py:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/arsdkng/xml.py src/olympe/__init__.py:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/__init__.py src/olympe/_private/pomp_loop_thread.py:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/_private/pomp_loop_thread.py src/olympe/_private/__init__.py:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/_private/__init__.py src/olympe/_private/__version__.py:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/_private/__version__.py src/olympe/_private/format.py:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/_private/format.py src/olympe/_private/return_tuple.py:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/_private/return_tuple.py src/olympe/_private/controller_state.py:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/_private/controller_state.py src/olympe/app.py:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/app.py src/olympe/tools/__init__.py:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/tools/__init__.py src/olympe/tools/error.py:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/tools/error.py src/olympe/log/__init__.py:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/log/__init__.py src/olympe/media.py:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/media.py src/olympe/doc/arsdkng_controller_info.rst:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/doc/arsdkng_controller_info.rst src/olympe/doc/arsdkng_animation.rst:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/doc/arsdkng_animation.rst src/olympe/doc/arsdkng_skyctrl_settings.rst:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/doc/arsdkng_skyctrl_settings.rst src/olympe/doc/overview.rst:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/doc/overview.rst src/olympe/doc/arsdkng_debug.rst:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/doc/arsdkng_debug.rst src/olympe/doc/arsdkng_mediastore.rst:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/doc/arsdkng_mediastore.rst src/olympe/doc/arsdkng_common_controller.rst:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/doc/arsdkng_common_controller.rst src/olympe/doc/arsdkng_leds.rst:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/doc/arsdkng_leds.rst src/olympe/doc/arsdkng_ardrone3_sound.rst:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/doc/arsdkng_ardrone3_sound.rst src/olympe/doc/arsdkng_camera.rst:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/doc/arsdkng_camera.rst src/olympe/doc/arsdkng_ardrone3_settings_state.rst:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/doc/arsdkng_ardrone3_settings_state.rst src/olympe/doc/arsdkng_skyctrl_factory.rst:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/doc/arsdkng_skyctrl_factory.rst src/olympe/doc/arsdkng_common_flightplan.rst:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/doc/arsdkng_common_flightplan.rst src/olympe/doc/arsdkng_skyctrl_copiloting.rst:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/doc/arsdkng_skyctrl_copiloting.rst src/olympe/doc/arsdkng.rst:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/doc/arsdkng.rst src/olympe/doc/arsdkng_thermal.rst:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/doc/arsdkng_thermal.rst src/olympe/doc/arsdkng_rth.rst:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/doc/arsdkng_rth.rst src/olympe/doc/arsdkng_move.rst:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/doc/arsdkng_move.rst src/olympe/doc/arsdkng_wifi.rst:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/doc/arsdkng_wifi.rst src/olympe/doc/arsdkng_mapper.rst:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/doc/arsdkng_mapper.rst src/olympe/doc/arsdkng_common_calibration.rst:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/doc/arsdkng_common_calibration.rst src/olympe/doc/arsdkng_common_updatestate.rst:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/doc/arsdkng_common_updatestate.rst src/olympe/doc/userguide.rst:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/doc/userguide.rst src/olympe/doc/arsdkng_common_network.rst:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/doc/arsdkng_common_network.rst src/olympe/doc/arsdkng_common_common.rst:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/doc/arsdkng_common_common.rst src/olympe/doc/arsdkng_common_mavlink.rst:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/doc/arsdkng_common_mavlink.rst src/olympe/doc/olympeapi.rst:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/doc/olympeapi.rst src/olympe/doc/arsdkng_common.rst:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/doc/arsdkng_common.rst src/olympe/doc/arsdkng_skyctrl_skycontrollerstate.rst:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/doc/arsdkng_skyctrl_skycontrollerstate.rst src/olympe/doc/arsdkng_ardrone3_gps.rst:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/doc/arsdkng_ardrone3_gps.rst src/olympe/doc/installation.rst:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/doc/installation.rst src/olympe/doc/arsdkng_common_factory.rst:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/doc/arsdkng_common_factory.rst src/olympe/doc/arsdkng_battery.rst:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/doc/arsdkng_battery.rst src/olympe/doc/arsdkng_followme.rst:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/doc/arsdkng_followme.rst src/olympe/doc/arsdkng_ardrone3_piloting.rst:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/doc/arsdkng_ardrone3_piloting.rst src/olympe/doc/arsdkng_piloting_style.rst:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/doc/arsdkng_piloting_style.rst src/olympe/doc/arsdkng_user_storage.rst:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/doc/arsdkng_user_storage.rst src/olympe/doc/arsdkng_skyctrl_calibration.rst:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/doc/arsdkng_skyctrl_calibration.rst src/olympe/doc/index.rst:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/doc/index.rst src/olympe/doc/arsdkng_drone_manager.rst:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/doc/arsdkng_drone_manager.rst src/olympe/doc/arsdkng_skyctrl.rst:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/doc/arsdkng_skyctrl.rst src/olympe/doc/arsdkng_ardrone3_animations.rst:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/doc/arsdkng_ardrone3_animations.rst src/olympe/doc/arsdkng_common_runstate.rst:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/doc/arsdkng_common_runstate.rst src/olympe/doc/arsdkng_precise_home.rst:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/doc/arsdkng_precise_home.rst src/olympe/doc/arsdkng_common_settings.rst:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/doc/arsdkng_common_settings.rst src/olympe/doc/arsdkng_gimbal.rst:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/doc/arsdkng_gimbal.rst src/olympe/doc/arsdkng_skyctrl_commoneventstate.rst:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/doc/arsdkng_skyctrl_commoneventstate.rst src/olympe/doc/arsdkng_skyctrl_common.rst:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/doc/arsdkng_skyctrl_common.rst src/olympe/doc/arsdkng_ardrone3.rst:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/doc/arsdkng_ardrone3.rst src/olympe/doc/sphinx-doc.yaml:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/python/site-packages/olympe/doc/sphinx-doc.yaml</value>
         </field>
                                                                                                       <field name='REVISION'>
             <value>65cbf56e242d91c32e8080ff9e7afc7dd761fe19</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>65cbf56</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/olympe</value>
         </field>
                                                             </module>
        <module name='olympe-deps' build='no'>
           <field name='depends'>
             <value>libpomp libpdraw libvideo-buffers libvideo-buffers-generic libvideo-metadata libarsdk libarsdkctrl libulog-py python</value>
         </field>
                <field name='depends.PREBUILT_LIBRARIES'>
             <value>zlib</value>
         </field>
             <field name='depends.EXTERNAL_LIBRARIES'>
             <value>libulog-py eigen json libtar</value>
         </field>
             <field name='depends.STATIC_LIBRARIES'>
             <value>libpdraw libarsdkctrl libmp4 librtsp libsdp libvideo-decode libvideo-streaming libmediacodec-wrapper libvideo-buffers-generic libh264 librtp libvideo-metadata libvideo-buffers libarsdk libpuf libmux libpomp libfutils libulog</value>
         </field>
             <field name='depends.WHOLE_STATIC_LIBRARIES'>
             <value>libarsdkgen</value>
         </field>
                      <field name='depends.all'>
             <value>libpdraw libarsdkctrl libulog-py libmp4 librtsp libsdp libvideo-decode libvideo-streaming eigen libmediacodec-wrapper libvideo-buffers-generic libh264 librtp libvideo-metadata libvideo-buffers libarsdk libpuf libmux libarsdkgen json libpomp libfutils zlib libtar libulog python</value>
         </field>
             <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/olympe-deps</value>
         </field>
             <field name='MODULE'>
             <value>olympe-deps</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>olympe-deps.done</value>
         </field>
             <field name='DESCRIPTION'>
             <value>Python ctypes bindings for olympe dependencies (libpdraw, ....)</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>libs</value>
         </field>
                   <field name='CUSTOM_MACROS'>
             <value>pybinding-macro:olympe_deps,libpomp:libpdraw:libvideo-buffers:libvideo-buffers-generic:libvideo-metadata:libarsdk:libarsdkctrl,LIBPOMP_HEADERS:LIBPDRAW_HEADERS:LIBVIDEOBUFFERS_HEADERS:LIBVIDEOBUFFERSGENERIC_HEADERS:LIBVIDEOMETADATA_HEADERS:LIBARSDK_HEADERS:LIBARSDKCTRL_HEADERS,/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/libpomp.so:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/libpdraw.so:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/libvideo-buffers.so:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/libvideo-buffers-generic.so:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/libvideo-metadata.so:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/libarsdk.so:/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/staging/usr/lib/libarsdkctrl.so</value>
         </field>
                   <field name='STATIC_LIBRARIES'>
             <value>libpomp libpdraw libvideo-buffers libvideo-buffers-generic libvideo-metadata libarsdk libarsdkctrl</value>
         </field>
                                     <field name='EXTERNAL_LIBRARIES'>
             <value>libulog-py</value>
         </field>
                               <field name='LIBRARIES'>
             <value>libulog-py libpomp libpdraw libvideo-buffers libvideo-buffers-generic libvideo-metadata libarsdk libarsdkctrl</value>
         </field>
                                     <field name='DEPENDS_MODULES'>
             <value>python</value>
         </field>
             <field name='DEPENDS_HOST_MODULES'>
             <value>host.pybinding</value>
         </field>
                                                                            <field name='CLEAN_FILES'>
             <value>/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/build/olympe-deps/olympe_deps.py</value>
         </field>
                                                                                                                            <field name='EXPAND_CUSTOM_VARIABLES'>
             <value>1</value>
         </field>
             <field name='MODULE_CLASS'>
             <value>CUSTOM</value>
         </field>
             <field name='COPY_FILES'>
             <value>/home/marlin/groundsdk/out/groundsdk-android/arm64-v8a/build/olympe-deps/olympe_deps.py:usr/lib/python/site-packages/</value>
         </field>
                                                                                                       <field name='REVISION'>
             <value>24b5fa603cdabf62576cdd511a502f418f32fb29</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>24b5fa6</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/olympe-deps</value>
         </field>
                                                             </module>
        <module name='pdraw' build='no'>
           <field name='depends'>
             <value>libpdraw libpdraw-backend libpdraw-gles2hud libpomp libulog libvideo-metadata eigen sdl2</value>
         </field>
                   <field name='depends.EXTERNAL_LIBRARIES'>
             <value>sdl2 eigen json</value>
         </field>
             <field name='depends.STATIC_LIBRARIES'>
             <value>libpdraw-backend libpdraw-gles2hud libpdraw libmp4 librtsp libsdp libvideo-decode libvideo-streaming libmux libmediacodec-wrapper libvideo-buffers-generic libvideo-buffers libh264 librtp libvideo-metadata libpomp libfutils libulog</value>
         </field>
                         <field name='depends.all'>
             <value>libpdraw-backend libpdraw-gles2hud sdl2 libpdraw libmp4 librtsp libsdp libvideo-decode libvideo-streaming libmux eigen libmediacodec-wrapper libvideo-buffers-generic libvideo-buffers libh264 librtp libvideo-metadata libpomp libfutils json libulog</value>
         </field>
             <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/pdraw/apps/pdraw_desktop</value>
         </field>
             <field name='MODULE'>
             <value>pdraw</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>pdraw</value>
         </field>
             <field name='DESCRIPTION'>
             <value>Parrot Drones Awesome Video Viewer desktop application</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>multimedia</value>
         </field>
                      <field name='SRC_FILES'>
             <value>pdraw_desktop.c pdraw_desktop_ext_tex.c pdraw_desktop_ui.c pdraw_desktop_view.cpp</value>
         </field>
                <field name='STATIC_LIBRARIES'>
             <value>libpdraw libpdraw-backend libpdraw-gles2hud libpomp libulog libvideo-metadata</value>
         </field>
                                     <field name='EXTERNAL_LIBRARIES'>
             <value>eigen sdl2</value>
         </field>
                               <field name='LIBRARIES'>
             <value>eigen libpdraw libpdraw-backend libpdraw-gles2hud libpomp libulog libvideo-metadata sdl2</value>
         </field>
                                                 <field name='CFLAGS'>
             <value>-D_USE_MATH_DEFINES</value>
         </field>
                                                                                                                                                                                        <field name='MODULE_CLASS'>
             <value>EXECUTABLE</value>
         </field>
                                                                                                    <field name='DESTDIR'>
             <value>usr/bin</value>
         </field>
                <field name='REVISION'>
             <value>75757183c7f4dfc0bf8886e17a94b4599550b8de</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>7575718</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/pdraw</value>
         </field>
                                                             </module>
        <module name='pdraw_backend_test' build='no'>
           <field name='depends'>
             <value>libpdraw libpdraw-backend libulog</value>
         </field>
                   <field name='depends.EXTERNAL_LIBRARIES'>
             <value>eigen json</value>
         </field>
             <field name='depends.STATIC_LIBRARIES'>
             <value>libpdraw-backend libpdraw libmp4 librtsp libsdp libvideo-decode libvideo-streaming libmux libmediacodec-wrapper libvideo-buffers-generic libvideo-buffers libh264 librtp libvideo-metadata libpomp libfutils libulog</value>
         </field>
                         <field name='depends.all'>
             <value>libpdraw-backend libpdraw libmp4 librtsp libsdp libvideo-decode libvideo-streaming libmux eigen libmediacodec-wrapper libvideo-buffers-generic libvideo-buffers libh264 librtp libvideo-metadata json libpomp libfutils libulog</value>
         </field>
             <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/pdraw/libpdraw-backend</value>
         </field>
             <field name='MODULE'>
             <value>pdraw_backend_test</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>pdraw_backend_test</value>
         </field>
             <field name='DESCRIPTION'>
             <value>Parrot Drones Awesome Video Viewer back-end library test program</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>multimedia</value>
         </field>
                      <field name='SRC_FILES'>
             <value>tests/pdraw_backend_test.c</value>
         </field>
                <field name='STATIC_LIBRARIES'>
             <value>libpdraw libpdraw-backend libulog</value>
         </field>
                                                          <field name='LIBRARIES'>
             <value>libpdraw libpdraw-backend libulog</value>
         </field>
                                                                                                                                                                                                                               <field name='MODULE_CLASS'>
             <value>EXECUTABLE</value>
         </field>
                                                                                                    <field name='DESTDIR'>
             <value>usr/bin</value>
         </field>
                <field name='REVISION'>
             <value>75757183c7f4dfc0bf8886e17a94b4599550b8de</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>7575718</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/pdraw</value>
         </field>
                                                             </module>
        <module name='pdraw_vsink_test' build='no'>
           <field name='depends'>
             <value>libpdraw-vsink libulog libvideo-buffers libvideo-buffers-generic</value>
         </field>
                   <field name='depends.EXTERNAL_LIBRARIES'>
             <value>eigen json</value>
         </field>
             <field name='depends.STATIC_LIBRARIES'>
             <value>libpdraw-vsink libpdraw libmp4 librtsp libsdp libvideo-decode libvideo-streaming libmux libmediacodec-wrapper libvideo-buffers-generic libh264 librtp libvideo-metadata libvideo-buffers libfutils libpomp libulog</value>
         </field>
                         <field name='depends.all'>
             <value>libpdraw-vsink libpdraw libmp4 librtsp libsdp libvideo-decode libvideo-streaming libmux eigen libmediacodec-wrapper libvideo-buffers-generic libh264 librtp libvideo-metadata json libvideo-buffers libfutils libpomp libulog</value>
         </field>
             <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/pdraw/libpdraw-vsink</value>
         </field>
             <field name='MODULE'>
             <value>pdraw_vsink_test</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>pdraw_vsink_test</value>
         </field>
             <field name='DESCRIPTION'>
             <value>Parrot Drones Awesome Video Viewer video sink wrapper library test program</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>multimedia</value>
         </field>
                      <field name='SRC_FILES'>
             <value>tests/pdraw_vsink_test.c</value>
         </field>
                <field name='STATIC_LIBRARIES'>
             <value>libpdraw-vsink libulog libvideo-buffers libvideo-buffers-generic</value>
         </field>
                                                          <field name='LIBRARIES'>
             <value>libpdraw-vsink libulog libvideo-buffers libvideo-buffers-generic</value>
         </field>
                                                                                                                                                                                                                               <field name='MODULE_CLASS'>
             <value>EXECUTABLE</value>
         </field>
                                                                                                    <field name='DESTDIR'>
             <value>usr/bin</value>
         </field>
                <field name='REVISION'>
             <value>75757183c7f4dfc0bf8886e17a94b4599550b8de</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>7575718</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/pdraw</value>
         </field>
                                                             </module>
        <module name='pomp-cli' build='no'>
           <field name='depends'>
             <value>libpomp</value>
         </field>
                      <field name='depends.STATIC_LIBRARIES'>
             <value>libpomp libulog</value>
         </field>
                         <field name='depends.all'>
             <value>libpomp libulog</value>
         </field>
             <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/libpomp</value>
         </field>
             <field name='MODULE'>
             <value>pomp-cli</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>pomp-cli</value>
         </field>
             <field name='DESCRIPTION'>
             <value>Command line tool for libpomp</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>libs/pomp/tools</value>
         </field>
                      <field name='SRC_FILES'>
             <value>tools/pomp_cli.c</value>
         </field>
                <field name='STATIC_LIBRARIES'>
             <value>libpomp</value>
         </field>
                                                          <field name='LIBRARIES'>
             <value>libpomp</value>
         </field>
                                                                                                                                                                                                                               <field name='MODULE_CLASS'>
             <value>EXECUTABLE</value>
         </field>
                                                                                                    <field name='DESTDIR'>
             <value>usr/bin</value>
         </field>
                <field name='REVISION'>
             <value>92792ab5ea7f477534428473b35916acd2f035f5</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>92792ab</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/libpomp</value>
         </field>
                                                             </module>
        <module name='pomp-ping' build='no'>
           <field name='depends'>
             <value>libpomp</value>
         </field>
                      <field name='depends.STATIC_LIBRARIES'>
             <value>libpomp libulog</value>
         </field>
                         <field name='depends.all'>
             <value>libpomp libulog</value>
         </field>
             <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/libpomp</value>
         </field>
             <field name='MODULE'>
             <value>pomp-ping</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>pomp-ping</value>
         </field>
             <field name='DESCRIPTION'>
             <value>Example code for libpomp</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>libs/pomp/examples</value>
         </field>
                      <field name='SRC_FILES'>
             <value>examples/ping.c</value>
         </field>
                <field name='STATIC_LIBRARIES'>
             <value>libpomp</value>
         </field>
                                                          <field name='LIBRARIES'>
             <value>libpomp</value>
         </field>
                                                                                                                                                                                                                               <field name='MODULE_CLASS'>
             <value>EXECUTABLE</value>
         </field>
                                                                                                    <field name='DESTDIR'>
             <value>usr/bin</value>
         </field>
                <field name='REVISION'>
             <value>92792ab5ea7f477534428473b35916acd2f035f5</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>92792ab</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/libpomp</value>
         </field>
                                                             </module>
        <module name='pomp-ping-cpp' build='no'>
           <field name='depends'>
             <value>libpomp</value>
         </field>
                      <field name='depends.STATIC_LIBRARIES'>
             <value>libpomp libulog</value>
         </field>
                         <field name='depends.all'>
             <value>libpomp libulog</value>
         </field>
             <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/libpomp</value>
         </field>
             <field name='MODULE'>
             <value>pomp-ping-cpp</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>pomp-ping-cpp</value>
         </field>
             <field name='DESCRIPTION'>
             <value>Example code for libpomp written in c++</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>libs/pomp/examples</value>
         </field>
                      <field name='SRC_FILES'>
             <value>examples/ping.cpp</value>
         </field>
                <field name='STATIC_LIBRARIES'>
             <value>libpomp</value>
         </field>
                                                          <field name='LIBRARIES'>
             <value>libpomp</value>
         </field>
                                                    <field name='CXXFLAGS'>
             <value>-std=c++0x</value>
         </field>
                                                                                                                                                                                     <field name='MODULE_CLASS'>
             <value>EXECUTABLE</value>
         </field>
                                                                                                    <field name='DESTDIR'>
             <value>usr/bin</value>
         </field>
                <field name='REVISION'>
             <value>92792ab5ea7f477534428473b35916acd2f035f5</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>92792ab</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/libpomp</value>
         </field>
                                                             </module>
        <module name='pomp-ping-vala' build='no'>
           <field name='depends'>
             <value>libpomp glib libpomp-vala</value>
         </field>
                   <field name='depends.EXTERNAL_LIBRARIES'>
             <value>glib libpomp-vala</value>
         </field>
             <field name='depends.STATIC_LIBRARIES'>
             <value>libpomp libulog</value>
         </field>
                         <field name='depends.all'>
             <value>libpomp glib libpomp-vala libulog</value>
         </field>
             <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/libpomp</value>
         </field>
             <field name='MODULE'>
             <value>pomp-ping-vala</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>pomp-ping-vala</value>
         </field>
             <field name='DESCRIPTION'>
             <value>Example code for libpomp written in vala</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>libs/pomp/examples</value>
         </field>
                      <field name='SRC_FILES'>
             <value>examples/ping.vala</value>
         </field>
                <field name='STATIC_LIBRARIES'>
             <value>libpomp</value>
         </field>
                                     <field name='EXTERNAL_LIBRARIES'>
             <value>glib libpomp-vala</value>
         </field>
                               <field name='LIBRARIES'>
             <value>glib libpomp libpomp-vala</value>
         </field>
                                        <field name='DEPENDS_HOST_MODULES'>
             <value>host.vala</value>
         </field>
                   <field name='CFLAGS'>
             <value>-D_GNU_SOURCE</value>
         </field>
                         <field name='VALAFLAGS'>
             <value>--pkg gio-2.0 --pkg posix --pkg libpomp</value>
         </field>
                   <field name='LDLIBS'>
             <value>-lglib-2.0 -lgio-2.0 -lgobject-2.0</value>
         </field>
                                                                                                                                                                <field name='MODULE_CLASS'>
             <value>EXECUTABLE</value>
         </field>
                                                                                                    <field name='DESTDIR'>
             <value>usr/bin</value>
         </field>
                <field name='REVISION'>
             <value>92792ab5ea7f477534428473b35916acd2f035f5</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>92792ab</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/libpomp</value>
         </field>
                                                             </module>
        <module name='rtsp-client-test' build='no'>
           <field name='depends'>
             <value>libpomp librtsp libsdp libulog</value>
         </field>
                      <field name='depends.STATIC_LIBRARIES'>
             <value>librtsp libsdp libpomp libfutils libulog</value>
         </field>
                         <field name='depends.all'>
             <value>librtsp libsdp libpomp libfutils libulog</value>
         </field>
             <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/librtsp</value>
         </field>
             <field name='MODULE'>
             <value>rtsp-client-test</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>rtsp-client-test</value>
         </field>
             <field name='DESCRIPTION'>
             <value>Real Time Streaming Protocol library client test program</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>multimedia</value>
         </field>
                      <field name='SRC_FILES'>
             <value>tests/rtsp_client_test.c</value>
         </field>
                <field name='STATIC_LIBRARIES'>
             <value>libpomp librtsp libsdp libulog</value>
         </field>
                                                          <field name='LIBRARIES'>
             <value>libpomp librtsp libsdp libulog</value>
         </field>
                                                                                                                                                                                                                               <field name='MODULE_CLASS'>
             <value>EXECUTABLE</value>
         </field>
                                                                                                    <field name='DESTDIR'>
             <value>usr/bin</value>
         </field>
                <field name='REVISION'>
             <value>8644e955557d4bc9660df47929e8d7fefb3bd0e7</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>8644e95</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/librtsp</value>
         </field>
                                                             </module>
        <module name='rtsp-server-test' build='no'>
           <field name='depends'>
             <value>libfutils libpomp librtsp libsdp libulog</value>
         </field>
                      <field name='depends.STATIC_LIBRARIES'>
             <value>librtsp libsdp libpomp libfutils libulog</value>
         </field>
                         <field name='depends.all'>
             <value>librtsp libsdp libpomp libfutils libulog</value>
         </field>
             <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/librtsp</value>
         </field>
             <field name='MODULE'>
             <value>rtsp-server-test</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>rtsp-server-test</value>
         </field>
             <field name='DESCRIPTION'>
             <value>Real Time Streaming Protocol library server test program</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>multimedia</value>
         </field>
                      <field name='SRC_FILES'>
             <value>tests/rtsp_server_test.c</value>
         </field>
                <field name='STATIC_LIBRARIES'>
             <value>libfutils libpomp librtsp libsdp libulog</value>
         </field>
                                                          <field name='LIBRARIES'>
             <value>libfutils libpomp librtsp libsdp libulog</value>
         </field>
                                                                                                                                                                                                                               <field name='MODULE_CLASS'>
             <value>EXECUTABLE</value>
         </field>
                                                                                                    <field name='DESTDIR'>
             <value>usr/bin</value>
         </field>
                <field name='REVISION'>
             <value>8644e955557d4bc9660df47929e8d7fefb3bd0e7</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>8644e95</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/librtsp</value>
         </field>
                                                             </module>
        <module name='sdp-test' build='no'>
           <field name='depends'>
             <value>libsdp libulog</value>
         </field>
                      <field name='depends.STATIC_LIBRARIES'>
             <value>libsdp libfutils libulog</value>
         </field>
                         <field name='depends.all'>
             <value>libsdp libfutils libulog</value>
         </field>
             <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/libsdp</value>
         </field>
             <field name='MODULE'>
             <value>sdp-test</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>sdp-test</value>
         </field>
             <field name='DESCRIPTION'>
             <value>Session Description Protocol library test program</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>multimedia</value>
         </field>
                      <field name='SRC_FILES'>
             <value>tests/sdp_test.c</value>
         </field>
                <field name='STATIC_LIBRARIES'>
             <value>libsdp libulog</value>
         </field>
                                                          <field name='LIBRARIES'>
             <value>libsdp libulog</value>
         </field>
                                                                                                                                                                                                                               <field name='MODULE_CLASS'>
             <value>EXECUTABLE</value>
         </field>
                                                                                                    <field name='DESTDIR'>
             <value>usr/bin</value>
         </field>
                <field name='REVISION'>
             <value>2a294af9e1bcbdc58b0917d580cb583614b6cbfd</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>2a294af</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/libsdp</value>
         </field>
                                                             </module>
        <module name='shdlogd' build='no'>
           <field name='depends'>
             <value>libpomp libulog libfutils libshdata libulog-shd-headers</value>
         </field>
                   <field name='depends.EXTERNAL_LIBRARIES'>
             <value>libshdata libulog-shd-headers</value>
         </field>
             <field name='depends.STATIC_LIBRARIES'>
             <value>libpomp libfutils libulog</value>
         </field>
                         <field name='depends.all'>
             <value>libpomp libfutils libshdata libulog-shd-headers libulog</value>
         </field>
             <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/ulog/shdlogd</value>
         </field>
             <field name='MODULE'>
             <value>shdlogd</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>shdlogd</value>
         </field>
             <field name='DESCRIPTION'>
             <value>daemon reading ulogs in the shared memory</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>ulog</value>
         </field>
                      <field name='SRC_FILES'>
             <value>src/shdlogd.c</value>
         </field>
                <field name='STATIC_LIBRARIES'>
             <value>libpomp libulog libfutils</value>
         </field>
                                     <field name='EXTERNAL_LIBRARIES'>
             <value>libshdata libulog-shd-headers</value>
         </field>
                               <field name='LIBRARIES'>
             <value>libshdata libpomp libulog-shd-headers libulog libfutils</value>
         </field>
                                                                                                                                                                                                                               <field name='MODULE_CLASS'>
             <value>EXECUTABLE</value>
         </field>
             <field name='COPY_FILES'>
             <value>etc/boxinit.d/10-shdlogd.rc:etc/boxinit.d/</value>
         </field>
                                                                                                 <field name='DESTDIR'>
             <value>usr/bin</value>
         </field>
                <field name='REVISION'>
             <value>0389d243352255f6182326dccdae3d56dadc078f</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>0389d24</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/ulog</value>
         </field>
                                                             </module>
        <module name='ulog-helper' build='no'>
           <field name='depends'>
             <value>libulog liblogger-headers</value>
         </field>
                   <field name='depends.EXTERNAL_LIBRARIES'>
             <value>liblogger-headers</value>
         </field>
             <field name='depends.STATIC_LIBRARIES'>
             <value>libulog</value>
         </field>
                         <field name='depends.all'>
             <value>libulog liblogger-headers</value>
         </field>
             <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/logger/plugins</value>
         </field>
             <field name='MODULE'>
             <value>ulog-helper</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>libulog-helper.a</value>
         </field>
             <field name='DESCRIPTION'>
             <value>Loggerd plugin library helpers for ulog devices</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>liblogger-plugins</value>
         </field>
                      <field name='SRC_FILES'>
             <value>ulog/loggerd-plugin-ulog.cpp</value>
         </field>
                <field name='STATIC_LIBRARIES'>
             <value>libulog</value>
         </field>
                                     <field name='EXTERNAL_LIBRARIES'>
             <value>liblogger-headers</value>
         </field>
                               <field name='LIBRARIES'>
             <value>liblogger-headers libulog</value>
         </field>
                                                    <field name='CXXFLAGS'>
             <value>-std=c++11</value>
         </field>
                                                                                                                                                                <field name='EXPORT_C_INCLUDES'>
             <value>/home/marlin/groundsdk/packages/common/logger/plugins/ulog</value>
         </field>
                               <field name='MODULE_CLASS'>
             <value>STATIC_LIBRARY</value>
         </field>
                                                                                                    <field name='DESTDIR'>
             <value>usr/lib</value>
         </field>
                <field name='REVISION'>
             <value>72fb80c027f4c022b73ac890beba1aa226927489</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>72fb80c</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/logger</value>
         </field>
                                                             </module>
        <module name='ulog_shell_api' build='no'>
                                         <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/ulog/libulog</value>
         </field>
             <field name='MODULE'>
             <value>ulog_shell_api</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>ulog_shell_api.done</value>
         </field>
             <field name='DESCRIPTION'>
             <value>shell functions to ease the usage of ulog&apos;s API</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>ulog</value>
         </field>
                                                                                                                                                                                                                                                                                                 <field name='MODULE_CLASS'>
             <value>CUSTOM</value>
         </field>
             <field name='COPY_FILES'>
             <value>ulog_api.sh:usr/share/ulog/</value>
         </field>
                                                                                                       <field name='REVISION'>
             <value>0389d243352255f6182326dccdae3d56dadc078f</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>0389d24</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/ulog</value>
         </field>
                                                             </module>
        <module name='ulogcat' build='no'>
           <field name='depends'>
             <value>libulogcat</value>
         </field>
                      <field name='depends.STATIC_LIBRARIES'>
             <value>libulogcat libulog</value>
         </field>
                         <field name='depends.all'>
             <value>libulogcat libulog</value>
         </field>
             <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/ulog/ulogcat</value>
         </field>
             <field name='MODULE'>
             <value>ulogcat</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>ulogcat</value>
         </field>
             <field name='DESCRIPTION'>
             <value>The equivalent of Android &apos;logcat&apos; for libulog (and more)</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>utils</value>
         </field>
                      <field name='SRC_FILES'>
             <value>ulogcat.c</value>
         </field>
                <field name='STATIC_LIBRARIES'>
             <value>libulogcat</value>
         </field>
                                                          <field name='LIBRARIES'>
             <value>libulogcat</value>
         </field>
                                                                                                                                                                                                                               <field name='MODULE_CLASS'>
             <value>EXECUTABLE</value>
         </field>
                                                                                                    <field name='DESTDIR'>
             <value>usr/bin</value>
         </field>
                <field name='REVISION'>
             <value>0389d243352255f6182326dccdae3d56dadc078f</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>0389d24</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/ulog</value>
         </field>
                                                             </module>
        <module name='ulogctl' build='no'>
           <field name='depends'>
             <value>libulogctl libpomp libulog</value>
         </field>
                      <field name='depends.STATIC_LIBRARIES'>
             <value>libulogctl libpomp libulog</value>
         </field>
                         <field name='depends.all'>
             <value>libulogctl libpomp libulog</value>
         </field>
             <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/ulog/libulogctl</value>
         </field>
             <field name='MODULE'>
             <value>ulogctl</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>ulogctl</value>
         </field>
                            <field name='SRC_FILES'>
             <value>tool/ulogctl.c</value>
         </field>
                <field name='STATIC_LIBRARIES'>
             <value>libulogctl libpomp libulog</value>
         </field>
                                                          <field name='LIBRARIES'>
             <value>libulogctl libpomp libulog</value>
         </field>
                                                                                                                                                                                                                               <field name='MODULE_CLASS'>
             <value>EXECUTABLE</value>
         </field>
                                                                                                    <field name='DESTDIR'>
             <value>usr/bin</value>
         </field>
                <field name='REVISION'>
             <value>0389d243352255f6182326dccdae3d56dadc078f</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>0389d24</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/ulog</value>
         </field>
                                                             </module>
        <module name='ulogctl-srv' build='no'>
           <field name='depends'>
             <value>libulogctl libpomp libulog</value>
         </field>
                      <field name='depends.STATIC_LIBRARIES'>
             <value>libulogctl libpomp libulog</value>
         </field>
                         <field name='depends.all'>
             <value>libulogctl libpomp libulog</value>
         </field>
             <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/ulog/libulogctl</value>
         </field>
             <field name='MODULE'>
             <value>ulogctl-srv</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>ulogctl-srv</value>
         </field>
                            <field name='SRC_FILES'>
             <value>examples/ulogctl-srv.c</value>
         </field>
                <field name='STATIC_LIBRARIES'>
             <value>libulogctl libpomp libulog</value>
         </field>
                                                          <field name='LIBRARIES'>
             <value>libulogctl libpomp libulog</value>
         </field>
                                                                                                                                                                                                                               <field name='MODULE_CLASS'>
             <value>EXECUTABLE</value>
         </field>
                                                                                                    <field name='DESTDIR'>
             <value>usr/bin</value>
         </field>
                <field name='REVISION'>
             <value>0389d243352255f6182326dccdae3d56dadc078f</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>0389d24</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/ulog</value>
         </field>
                                                             </module>
        <module name='ulogger' build='no'>
           <field name='depends'>
             <value>libulog</value>
         </field>
                      <field name='depends.STATIC_LIBRARIES'>
             <value>libulog</value>
         </field>
                         <field name='depends.all'>
             <value>libulog</value>
         </field>
             <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/ulog/ulogger</value>
         </field>
             <field name='MODULE'>
             <value>ulogger</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>ulogger</value>
         </field>
             <field name='DESCRIPTION'>
             <value>A shell command interface to ulog</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>utils</value>
         </field>
                      <field name='SRC_FILES'>
             <value>ulogger.c</value>
         </field>
                <field name='STATIC_LIBRARIES'>
             <value>libulog</value>
         </field>
                                                          <field name='LIBRARIES'>
             <value>libulog</value>
         </field>
                                                                                                                                                                                                                               <field name='MODULE_CLASS'>
             <value>EXECUTABLE</value>
         </field>
                                                                                                    <field name='DESTDIR'>
             <value>usr/bin</value>
         </field>
                <field name='REVISION'>
             <value>0389d243352255f6182326dccdae3d56dadc078f</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>0389d24</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/ulog</value>
         </field>
                                                             </module>
        <module name='ulogger-kernel' build='no'>
           <field name='depends'>
             <value>linux</value>
         </field>
                   <field name='depends.EXTERNAL_LIBRARIES'>
             <value>linux</value>
         </field>
                            <field name='depends.all'>
             <value>linux</value>
         </field>
             <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/ulog/kernel</value>
         </field>
             <field name='MODULE'>
             <value>ulogger-kernel</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>ulogger.ko</value>
         </field>
             <field name='DESCRIPTION'>
             <value>ulogger kernel module for ulog</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>utils</value>
         </field>
                      <field name='SRC_FILES'>
             <value>ulogger.c</value>
         </field>
                                           <field name='EXTERNAL_LIBRARIES'>
             <value>linux</value>
         </field>
                               <field name='LIBRARIES'>
             <value>linux</value>
         </field>
                                                                                                                                                                                                                               <field name='MODULE_CLASS'>
             <value>LINUX_MODULE</value>
         </field>
                                                                                                          <field name='REVISION'>
             <value>0389d243352255f6182326dccdae3d56dadc078f</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>0389d24</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/ulog</value>
         </field>
                                                             </module>
        <module name='ulogwrapper' build='no'>
                                <field name='depends.runtime'>
             <value>libulog_syslogwrap</value>
         </field>
             <field name='depends.headers'>
             <value>libulog</value>
         </field>
                <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/ulog/ulogwrapper</value>
         </field>
             <field name='MODULE'>
             <value>ulogwrapper</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>ulogwrapper</value>
         </field>
             <field name='DESCRIPTION'>
             <value>A small executable wrapper for redirecting syslog to ulog</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>utils</value>
         </field>
                      <field name='SRC_FILES'>
             <value>ulogwrapper.c</value>
         </field>
                                                                                     <field name='DEPENDS_HEADERS'>
             <value>libulog</value>
         </field>
             <field name='REQUIRED_MODULES'>
             <value>libulog_syslogwrap</value>
         </field>
                                                                                                                                                                                                       <field name='MODULE_CLASS'>
             <value>EXECUTABLE</value>
         </field>
                                                                                                    <field name='DESTDIR'>
             <value>usr/bin</value>
         </field>
                <field name='REVISION'>
             <value>0389d243352255f6182326dccdae3d56dadc078f</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>0389d24</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/ulog</value>
         </field>
                                                             </module>
        <module name='vdec' build='no'>
           <field name='depends'>
             <value>libfutils libh264 libulog libvideo-buffers libvideo-buffers-generic libvideo-decode</value>
         </field>
                   <field name='depends.EXTERNAL_LIBRARIES'>
             <value>json</value>
         </field>
             <field name='depends.STATIC_LIBRARIES'>
             <value>libvideo-decode libh264 libmediacodec-wrapper libvideo-buffers-generic libvideo-buffers libfutils libpomp libulog</value>
         </field>
                         <field name='depends.all'>
             <value>libvideo-decode libh264 libmediacodec-wrapper libvideo-buffers-generic json libvideo-buffers libfutils libpomp libulog</value>
         </field>
             <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/libvideo-decode</value>
         </field>
             <field name='MODULE'>
             <value>vdec</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>vdec</value>
         </field>
             <field name='DESCRIPTION'>
             <value>Video decoding program</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>multimedia</value>
         </field>
                      <field name='SRC_FILES'>
             <value>tools/vdec.c</value>
         </field>
                <field name='STATIC_LIBRARIES'>
             <value>libfutils libh264 libulog libvideo-buffers libvideo-buffers-generic libvideo-decode</value>
         </field>
                                                          <field name='LIBRARIES'>
             <value>libfutils libh264 libulog libvideo-buffers libvideo-buffers-generic libvideo-decode</value>
         </field>
                      <field name='CONDITIONAL_LIBRARIES'>
             <value>OPTIONAL:mmal</value>
         </field>
                                                                                                                                                                                                                   <field name='MODULE_CLASS'>
             <value>EXECUTABLE</value>
         </field>
                                                                                                    <field name='DESTDIR'>
             <value>usr/bin</value>
         </field>
                <field name='REVISION'>
             <value>bd672b81b801f4f7569d7485fe2868bbbdb31895</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>bd672b8</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/libvideo-decode</value>
         </field>
                                                             </module>
        <module name='vmeta-extract' build='no'>
           <field name='depends'>
             <value>libulog libvideo-metadata libmp4 json</value>
         </field>
                   <field name='depends.EXTERNAL_LIBRARIES'>
             <value>json</value>
         </field>
             <field name='depends.STATIC_LIBRARIES'>
             <value>libvideo-metadata libmp4 libfutils libulog</value>
         </field>
                         <field name='depends.all'>
             <value>libvideo-metadata libmp4 json libfutils libulog</value>
         </field>
             <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/libvideo-metadata</value>
         </field>
             <field name='MODULE'>
             <value>vmeta-extract</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>vmeta-extract</value>
         </field>
             <field name='DESCRIPTION'>
             <value>Parrot Drones video metadata extractor tool</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>multimedia</value>
         </field>
                      <field name='SRC_FILES'>
             <value>tools/vmeta_extract.c</value>
         </field>
                <field name='STATIC_LIBRARIES'>
             <value>libulog libvideo-metadata libmp4</value>
         </field>
                                     <field name='EXTERNAL_LIBRARIES'>
             <value>json</value>
         </field>
                               <field name='LIBRARIES'>
             <value>libulog libvideo-metadata libmp4 json</value>
         </field>
                      <field name='CONDITIONAL_LIBRARIES'>
             <value>OPTIONAL:libmp4 OPTIONAL:libpcap OPTIONAL:json</value>
         </field>
                                                                                                                                                                                                                   <field name='MODULE_CLASS'>
             <value>EXECUTABLE</value>
         </field>
                                                                                                    <field name='DESTDIR'>
             <value>usr/bin</value>
         </field>
                <field name='REVISION'>
             <value>6f1f9af4d0a56a337740dd3d462848f909b9d814</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>6f1f9af</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/libvideo-metadata</value>
         </field>
                                                             </module>
        <module name='vstrm-test' build='no'>
           <field name='depends'>
             <value>libfutils libh264 libpomp libulog libvideo-streaming</value>
         </field>
                   <field name='depends.EXTERNAL_LIBRARIES'>
             <value>json</value>
         </field>
             <field name='depends.STATIC_LIBRARIES'>
             <value>libvideo-streaming libh264 librtp libvideo-metadata libpomp libfutils libulog</value>
         </field>
                         <field name='depends.all'>
             <value>libvideo-streaming libh264 librtp libvideo-metadata libpomp libfutils json libulog</value>
         </field>
             <field name='PATH'>
             <value>/home/marlin/groundsdk/packages/common/libvideo-streaming</value>
         </field>
             <field name='MODULE'>
             <value>vstrm-test</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>vstrm-test</value>
         </field>
             <field name='DESCRIPTION'>
             <value>Video streaming library test program</value>
         </field>
             <field name='CATEGORY_PATH'>
             <value>libs/streaming</value>
         </field>
                      <field name='SRC_FILES'>
             <value>tests/vstrm_test.c tests/vstrm_test_receiver.c tests/vstrm_test_sender.c tests/vstrm_test_socket.c</value>
         </field>
                <field name='STATIC_LIBRARIES'>
             <value>libfutils libh264 libpomp libulog libvideo-streaming</value>
         </field>
                                                          <field name='LIBRARIES'>
             <value>libfutils libh264 libpomp libulog libvideo-streaming</value>
         </field>
                                                                                                                                                                                                                               <field name='MODULE_CLASS'>
             <value>EXECUTABLE</value>
         </field>
                                                                                                    <field name='DESTDIR'>
             <value>usr/bin</value>
         </field>
                <field name='REVISION'>
             <value>748d3d17cf05512f86254f9a7be1373a65afb958</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>748d3d1</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/libvideo-streaming</value>
         </field>
                                                             </module>
        <module name='zlib' build='yes'>
                                         <field name='PATH'>
             <value>/home/marlin/groundsdk/build/alchemy/targets/linux/android</value>
         </field>
             <field name='MODULE'>
             <value>zlib</value>
         </field>
                <field name='MODULE_FILENAME'>
             <value>zlib.done</value>
         </field>
                                                                                                                                                                                                                                                                                           <field name='EXPORT_LDLIBS'>
             <value>-lz</value>
         </field>
                      <field name='MODULE_CLASS'>
             <value>PREBUILT</value>
         </field>
                                                                                                          <field name='REVISION'>
             <value>d95b3c38cd37814a1b98d0bbf813de7adaaecfbc</value>
         </field>
             <field name='REVISION_DESCRIBE'>
             <value>d95b3c3</value>
         </field>
             <field name='REVISION_URL'>
             <value>https://github.com/Parrot-Developers/Alchemy</value>
         </field>
                                                             </module>
  </modules>
 <custom-macros>
      <macro name='arsdkgen-macro'>
         
# Setup some internal variables
arsdkgen_python := arsdkgen.py $(if $(call streq,$(V),1),-v)
arsdkgen_generator_path := $1
arsdkgen_module_build_dir := $(call local-get-build-dir)
arsdkgen_out_dir := $(if $(call is-path-absolute,$2),$2,$$(arsdkgen_module_build_dir)/$2)
arsdkgen_done_file := $$(arsdkgen_module_build_dir)/$(LOCAL_MODULE)-arsdkgen.done
$(if $(wildcard $(arsdkgen-macro-path)/arsdkgen.py), arsdkgen_gen_files := $$(shell $(arsdkgen-macro-path)/$$(arsdkgen_python) -f -o $$(arsdkgen_out_dir) $1 -- $(subst $(colon),$(space),$3) || echo FAILED)
	, arsdkgen_gen_files := $$(shell $(HOST_OUT_STAGING)/usr/lib/arsdkgen/$$(arsdkgen_python) -f -o $$(arsdkgen_out_dir) $1 -- $(subst $(colon),$(space),$3) || echo FAILED)
)
$$(if $$(call streq,$$(arsdkgen_gen_files),FAILED),$$(error Failed to list files))

# Create a dependency between generated files and .done file with an empty
# command to make sure regeneration is correctly triggered to files
# depending on them
$$(arsdkgen_gen_files): $$(arsdkgen_done_file)
	$(empty)

# Actual generation rule
# The copy of xml is staging is done in 2 steps because several modules could use
# the same xml the move ensure atomicity of the copy.
$$(arsdkgen_done_file): $(addprefix $(HOST_OUT_STAGING)/usr/lib/arsdkgen/,$(arsdkgen_files))
$$(arsdkgen_done_file): PRIVATE_OUT_DIR := $$(arsdkgen_out_dir)
$$(arsdkgen_done_file): .FORCE
	@echo &quot;$$(PRIVATE_MODULE): Generating arsdk files&quot;
ifneq (&quot;$(arsdkgen_files)&quot;, &quot;&quot;)
	$(Q) cd $(HOST_OUT_STAGING)/usr/lib/arsdkgen; rm -f $$$$(grep -Fxv &quot;$$$$(echo $(arsdkgen_files) | xargs -n 1)&quot; &lt;&lt;&lt; &quot;$$$$(ls xml | sed &apos;s:^:xml/:&apos;)&quot;)
endif
	$(Q) $(HOST_OUT_STAGING)/usr/lib/arsdkgen/$$(arsdkgen_python) -o $$(PRIVATE_OUT_DIR) $1 -- $(subst $(colon),$(space),$3)
	@mkdir -p $$(dir $$@)
	@touch $$@

# Update alchemy variables for the module
LOCAL_CLEAN_FILES += $$(arsdkgen_done_file) $(if $(call is-path-absolute,$2),$(empty),$$(arsdkgen_gen_files))
LOCAL_EXPORT_PREREQUISITES += $$(arsdkgen_gen_files)
LOCAL_PREREQUISITES += $$(arsdkgen_gen_files)
LOCAL_CUSTOM_TARGETS += $$(arsdkgen_done_file)
LOCAL_DEPENDS_HOST_MODULES += host.arsdkgen
LOCAL_C_INCLUDES += $$(arsdkgen_out_dir)
LOCAL_DONE_FILES += $$(notdir $$(arsdkgen_done_file))

     </macro>
       <macro name='pybinding-macro'>
         
# - The call to TARGET_CC is to extract default incude directories
# - We extract other includes and flag from the alchemy generated file objects.flags
# - We force -fno-unsigned-char to make sure the binding uses ctype.c_char
#   for the type char even on arm where it is supposed to be unsigned
#   This assumes that the library does not depend on this...
# - the define &quot;__PYBINDING_MACRO__&quot; is passed to the headers in the goal of
#   adapting some code parts for python when necessary.


PRIVATE_SO_FILES = $(shell echo &quot;$4&quot; | sed &quot;s#:# #g&quot;)
$(call local-get-build-dir)/$1.py: PRIVATE_SO_FILES := $$(PRIVATE_SO_FILES)
$(call local-get-build-dir)/$1.py: PRIVATE_CTYPESLIB_STAGED_FILES := $$(PRIVATE_CTYPESLIB_STAGED_FILES)
$(call local-get-build-dir)/$1.py: PRIVATE_SRC_FILES = $$(foreach header, $$(shell echo &quot;$3&quot; | sed &quot;s#:# #g&quot;), $$(if $$(findstring undefined,$$(origin PRIVATE_CUSTOM_$$(header))), $$(header), $$(shell echo $$(PRIVATE_CUSTOM_$$(header)) | sed &quot;s#:# #g&quot;) ) )
$(call local-get-build-dir)/$1.py: PRIVATE_OBJECT_FLAGS := $$(foreach lib, $$(shell echo &quot;$2&quot; | sed &quot;s#:# #g&quot;), $$(call module-get-build-dir,$$(lib))/$$(lib).objects.flags)
$(call local-get-build-dir)/$1.py: $$(PRIVATE_CTYPESLIB_STAGED_FILES) $(shell echo &quot;$4&quot; | sed &quot;s#:# #g&quot;)
	@echo &quot;$$(PRIVATE_MODULE): Generating $1 python binding&quot;
	@echo &quot;Private object flags: $$(PRIVATE_OBJECT_FLAGS)&quot;
	@echo &quot;Private so files: $$(PRIVATE_SO_FILES)&quot;

	$(Q) PYTHONPATH=$(HOST_OUT_STAGING)/usr/lib/python/site-packages $(HOST_OUT_STAGING)/usr/lib/python/site-packages/ctypeslib/clang2py.py --kind acdefstu $$(PRIVATE_SRC_FILES) $$$$(echo $$(PRIVATE_SO_FILES) | tr &apos; &apos; &apos;\n&apos; | sed -E &apos;s/^(.+)/-l \1/&apos;) --target=$(if $(call streq,$(TARGET_ARCH),x64),x86_64,$(TARGET_ARCH)) -o $$@ --clang-args=&quot; $$$$(echo | $(TARGET_CC) $(TARGET_GLOBAL_CFLAGS) -E -Wp,-v - 2&gt;&amp;1 | grep &apos;^ /&apos; | sed -E &apos;s/^ (.+)/-I\1/&apos; | tr &apos;\n&apos; &apos; &apos;) $$$$(sed -n -e &apos;s/PRIVATE_C_INCLUDES :=//p&apos; $$(PRIVATE_OBJECT_FLAGS) | tr &apos; &apos; &apos;\n&apos; | sed -E &apos;s/^(.+)/-I\1/&apos;) $$$$(sed -n -e &apos;s/TARGET_GLOBAL_C_INCLUDES :=//p&apos; $$(PRIVATE_OBJECT_FLAGS) | tr &apos; &apos; &apos;\n&apos; | sed -E &apos;s/^(.+)/-I\1/&apos;) $$$$(sed -n -e &apos;s/PRIVATE_GLOBAL_CFLAGS :=//p&apos; $$(PRIVATE_OBJECT_FLAGS)) $$$$(sed -n -e &apos;s/PRIVATE_CFLAGS :=//p&apos; $$(PRIVATE_OBJECT_FLAGS)) -D__PYBINDING_MACRO__=1 -fno-unsigned-char &quot;

LOCAL_CLEAN_FILES += $(call local-get-build-dir)/$1.py
LOCAL_COPY_FILES += $(call local-get-build-dir)/$1.py:usr/lib/python/site-packages/
LOCAL_DEPENDS_HOST_MODULES += host.pybinding
LOCAL_DEPENDS_MODULES := python
LOCAL_LIBRARIES += $(shell echo &quot;$2&quot; | sed &quot;s#:# #g&quot;)

     </macro>
       <macro name='mavgen-macro'>
         
# Setup some internal variables
mavgen_xml_file := $3
mavgen_module_build_dir := $(call local-get-build-dir)
mavgen_out_dir := $(if $(call is-path-absolute,$2),$2,$$(mavgen_module_build_dir)/$2)
mavgen_done_file := $$(mavgen_module_build_dir)/$$(notdir $$(mavgen_xml_file)).done
mavgen_dep_file := $$(mavgen_module_build_dir)/$$(notdir $$(mavgen_xml_file)).d

# Actual generation rule
# The copy of xml is staging is done in 2 steps because several modules could use
# the same xml the move ensure atomicity of the copy.
$$(mavgen_done_file): PRIVATE_OUT_DIR := $$(mavgen_out_dir)/mavlink
$$(mavgen_done_file): PRIVATE_DEP_FILE := $$(mavgen_dep_file)
$$(mavgen_done_file): $$(mavgen_xml_file)
	@echo &quot;$$(PRIVATE_MODULE): Generating mavlink files from $$(call path-from-top,$3)&quot;
	$(Q) cd $(HOST_OUT_STAGING)/usr/lib/mavgen &amp;&amp; python -m pymavlink.tools.mavgen --lang $1 -o $$(PRIVATE_OUT_DIR) $3
	@mkdir -p $(TARGET_OUT_STAGING)/usr/share/mavlink
	$(Q) cp -af $3 $(TARGET_OUT_STAGING)/usr/share/mavlink/$(notdir $3).$$(PRIVATE_MODULE)
	$(Q) mv -f $(TARGET_OUT_STAGING)/usr/share/mavlink/$(notdir $3).$$(PRIVATE_MODULE) $(TARGET_OUT_STAGING)/usr/share/mavlink/$(notdir $3)
	@mkdir -p $$(dir $$@)
	@:&gt;$$(PRIVATE_DEP_FILE)
	@for header in $$$$(find $$(PRIVATE_OUT_DIR) -name &apos;*.h&apos;); do echo &quot;$$$${header}: $$@&quot; &gt;&gt; $$(PRIVATE_DEP_FILE); echo -e &quot;\t@:&quot; &gt;&gt; $$(PRIVATE_DEP_FILE); done
	@touch $$@
	@mkdir -p $(TARGET_OUT_BUILD)/mavlink/wireshark/plugins
	$(Q) cd $(HOST_OUT_STAGING)/usr/lib/mavgen &amp;&amp; python -m pymavlink.tools.mavgen --lang=WLua -o $(TARGET_OUT_BUILD)/mavlink/wireshark/plugins/mymavlink.lua $3
-include $$(mavgen_dep_file)

# Update alchemy variables for the module
LOCAL_CLEAN_FILES += $$(mavgen_done_file) $$(mavgen_dep_file)
LOCAL_EXPORT_PREREQUISITES += $$(mavgen_done_file)
LOCAL_CUSTOM_TARGETS += $$(mavgen_done_file)
LOCAL_DEPENDS_HOST_MODULES += host.mavgen
LOCAL_C_INCLUDES += $$(mavgen_out_dir)

     </macro>
  </custom-macros>
 </alchemy>
